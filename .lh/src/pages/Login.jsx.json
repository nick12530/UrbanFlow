{
    "sourceFile": "src/pages/Login.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1755244591207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755244750101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,59 +51,13 @@\n   }\r\n \r\n   return (\r\n     <div style={styles.container}>\r\n-      {/* Animated City Background */}\r\n-      <div style={styles.cityBackground}>\r\n-        {/* Sky gradient */}\r\n-        <div style={styles.sky}></div>\r\n-        \r\n-        {/* Stars */}\r\n-        {[...Array(50)].map((_, i) => (\r\n-          <div\r\n-            key={i}\r\n-            style={{\r\n-              ...styles.star,\r\n-              left: `${Math.random() * 100}%`,\r\n-              top: `${Math.random() * 60}%`,\r\n-              animationDelay: `${Math.random() * 3}s`,\r\n-              animationDuration: `${2 + Math.random() * 2}s`\r\n-            }}\r\n-          />\r\n-        ))}\r\n-        \r\n-        {/* City buildings */}\r\n-        <div style={styles.buildings}>\r\n-          {[...Array(15)].map((_, i) => (\r\n-            <div\r\n-              key={i}\r\n-              style={{\r\n-                ...styles.building,\r\n-                left: `${i * 7}%`,\r\n-                height: `${60 + Math.random() * 40}%`,\r\n-                animationDelay: `${Math.random() * 2}s`\r\n-              }}\r\n-            />\r\n-          ))}\r\n-        </div>\r\n-        \r\n-        {/* Animated lights on buildings */}\r\n-        {[...Array(30)].map((_, i) => (\r\n-          <div\r\n-            key={i}\r\n-            style={{\r\n-              ...styles.light,\r\n-              left: `${Math.random() * 100}%`,\r\n-              top: `${20 + Math.random() * 60}%`,\r\n-              animationDelay: `${Math.random() * 4}s`,\r\n-              animationDuration: `${3 + Math.random() * 2}s`\r\n-            }}\r\n-          />\r\n-        ))}\r\n-        \r\n-        {/* Ground reflection */}\r\n-        <div style={styles.ground}></div>\r\n-      </div>\r\n+      {/* City Night Background Image */}\r\n+      <div style={styles.backgroundImage}></div>\r\n+      \r\n+      {/* Overlay for better readability */}\r\n+      <div style={styles.overlay}></div>\r\n \r\n       {/* Glassmorphism Form Container */}\r\n       <div style={styles.formContainer}>\r\n         <div style={styles.formCard}>\r\n@@ -225,78 +179,35 @@\n     alignItems: 'center',\r\n     justifyContent: 'center',\r\n     position: 'relative',\r\n     overflow: 'hidden',\r\n-    background: 'linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%)',\r\n   },\r\n   \r\n-  // City Background Styles\r\n-  cityBackground: {\r\n+  // City Background Image\r\n+  backgroundImage: {\r\n     position: 'absolute',\r\n     top: 0,\r\n     left: 0,\r\n     right: 0,\r\n     bottom: 0,\r\n+    backgroundImage: 'url(\"https://images.unsplash.com/photo-1519501025264-65ba15a82390?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80\")',\r\n+    backgroundSize: 'cover',\r\n+    backgroundPosition: 'center',\r\n+    backgroundRepeat: 'no-repeat',\r\n     zIndex: 1,\r\n   },\r\n   \r\n-  sky: {\r\n+  // Overlay for better readability\r\n+  overlay: {\r\n     position: 'absolute',\r\n     top: 0,\r\n     left: 0,\r\n     right: 0,\r\n-    height: '70%',\r\n-    background: 'linear-gradient(180deg, #0a0a1a 0%, #1a1a2e 50%, #16213e 100%)',\r\n-  },\r\n-  \r\n-  star: {\r\n-    position: 'absolute',\r\n-    width: '2px',\r\n-    height: '2px',\r\n-    backgroundColor: '#ffffff',\r\n-    borderRadius: '50%',\r\n-    animation: 'twinkle 3s infinite ease-in-out',\r\n-    boxShadow: '0 0 4px #ffffff, 0 0 8px #ffffff',\r\n-  },\r\n-  \r\n-  buildings: {\r\n-    position: 'absolute',\r\n-    bottom: '15%',\r\n-    left: 0,\r\n-    right: 0,\r\n-    height: '55%',\r\n-  },\r\n-  \r\n-  building: {\r\n-    position: 'absolute',\r\n     bottom: 0,\r\n-    width: '6%',\r\n-    backgroundColor: '#1a1a2e',\r\n-    borderTop: '2px solid #2d2d4a',\r\n-    boxShadow: 'inset 0 0 20px rgba(0,0,0,0.5)',\r\n-    animation: 'buildingGlow 4s infinite ease-in-out',\r\n+    background: 'linear-gradient(135deg, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.5) 50%, rgba(0,0,0,0.3) 100%)',\r\n+    zIndex: 2,\r\n   },\r\n   \r\n-  light: {\r\n-    position: 'absolute',\r\n-    width: '3px',\r\n-    height: '3px',\r\n-    backgroundColor: '#ffd700',\r\n-    borderRadius: '50%',\r\n-    boxShadow: '0 0 8px #ffd700, 0 0 16px #ffd700',\r\n-    animation: 'lightFlicker 5s infinite ease-in-out',\r\n-  },\r\n-  \r\n-  ground: {\r\n-    position: 'absolute',\r\n-    bottom: 0,\r\n-    left: 0,\r\n-    right: 0,\r\n-    height: '15%',\r\n-    background: 'linear-gradient(180deg, #0a0a1a 0%, #1a1a2e 100%)',\r\n-    boxShadow: 'inset 0 10px 20px rgba(0,0,0,0.8)',\r\n-  },\r\n-  \r\n   // Form Container Styles\r\n   formContainer: {\r\n     position: 'relative',\r\n     zIndex: 10,\r\n@@ -314,8 +225,9 @@\n     padding: '40px',\r\n     boxShadow: '0 25px 50px rgba(0, 0, 0, 0.3)',\r\n     position: 'relative',\r\n     overflow: 'hidden',\r\n+    transition: 'all 0.3s ease',\r\n   },\r\n   \r\n   header: {\r\n     textAlign: 'center',\r\n@@ -334,9 +246,9 @@\n   },\r\n   \r\n   subtitle: {\r\n     fontSize: '16px',\r\n-    color: 'rgba(255, 255, 255, 0.7)',\r\n+    color: 'rgba(255, 255, 255, 0.9)',\r\n     margin: 0,\r\n     fontWeight: '400',\r\n   },\r\n   \r\n@@ -359,9 +271,9 @@\n   \r\n   inputIcon: {\r\n     position: 'absolute',\r\n     left: '16px',\r\n-    color: 'rgba(255, 255, 255, 0.6)',\r\n+    color: 'rgba(255, 255, 255, 0.7)',\r\n     fontSize: '18px',\r\n     zIndex: 2,\r\n   },\r\n   \r\n@@ -425,9 +337,9 @@\n     margin: '24px 0',\r\n   },\r\n   \r\n   dividerText: {\r\n-    color: 'rgba(255, 255, 255, 0.5)',\r\n+    color: 'rgba(255, 255, 255, 0.7)',\r\n     fontSize: '14px',\r\n     margin: '0 16px',\r\n   },\r\n   \r\n@@ -460,9 +372,9 @@\n     marginTop: '24px',\r\n   },\r\n   \r\n   modeText: {\r\n-    color: 'rgba(255, 255, 255, 0.7)',\r\n+    color: 'rgba(255, 255, 255, 0.9)',\r\n     fontSize: '14px',\r\n   },\r\n   \r\n   modeBtn: {\r\n@@ -480,25 +392,8 @@\n // Add CSS animations to the document\r\n if (typeof document !== 'undefined') {\r\n   const style = document.createElement('style');\r\n   style.textContent = `\r\n-    @keyframes twinkle {\r\n-      0%, 100% { opacity: 0.3; transform: scale(1); }\r\n-      50% { opacity: 1; transform: scale(1.2); }\r\n-    }\r\n-    \r\n-    @keyframes buildingGlow {\r\n-      0%, 100% { box-shadow: inset 0 0 20px rgba(0,0,0,0.5); }\r\n-      50% { box-shadow: inset 0 0 30px rgba(102, 126, 234, 0.2); }\r\n-    }\r\n-    \r\n-    @keyframes lightFlicker {\r\n-      0%, 100% { opacity: 0.8; transform: scale(1); }\r\n-      25% { opacity: 1; transform: scale(1.1); }\r\n-      50% { opacity: 0.6; transform: scale(0.9); }\r\n-      75% { opacity: 0.9; transform: scale(1.05); }\r\n-    }\r\n-    \r\n     .formCard:hover {\r\n       transform: translateY(-5px);\r\n       box-shadow: 0 35px 60px rgba(0, 0, 0, 0.4);\r\n     }\r\n"
                }
            ],
            "date": 1755244591207,
            "name": "Commit-0",
            "content": "import { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { FiMail, FiLock, FiUser, FiEye, FiEyeOff } from 'react-icons/fi';\r\n\r\nexport default function Login() {\r\n  const { login, register, loginWithGoogle } = useAuth();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const redirectTo = (location.state && location.state.from) || '/';\r\n\r\n  const [mode, setMode] = useState('login'); // 'login' | 'register'\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [displayName, setDisplayName] = useState('');\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (submitting) return;\r\n    setError('');\r\n    setSubmitting(true);\r\n    try {\r\n      if (mode === 'login') {\r\n        await login(email, password);\r\n      } else {\r\n        await register(email, password, displayName);\r\n      }\r\n      navigate(redirectTo, { replace: true });\r\n    } catch (err) {\r\n      setError(err.message || 'Authentication failed');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  async function handleGoogle() {\r\n    if (submitting) return;\r\n    setError('');\r\n    setSubmitting(true);\r\n    try {\r\n      await loginWithGoogle();\r\n      navigate(redirectTo, { replace: true });\r\n    } catch (err) {\r\n      setError(err.message || 'Google sign-in failed');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      {/* Animated City Background */}\r\n      <div style={styles.cityBackground}>\r\n        {/* Sky gradient */}\r\n        <div style={styles.sky}></div>\r\n        \r\n        {/* Stars */}\r\n        {[...Array(50)].map((_, i) => (\r\n          <div\r\n            key={i}\r\n            style={{\r\n              ...styles.star,\r\n              left: `${Math.random() * 100}%`,\r\n              top: `${Math.random() * 60}%`,\r\n              animationDelay: `${Math.random() * 3}s`,\r\n              animationDuration: `${2 + Math.random() * 2}s`\r\n            }}\r\n          />\r\n        ))}\r\n        \r\n        {/* City buildings */}\r\n        <div style={styles.buildings}>\r\n          {[...Array(15)].map((_, i) => (\r\n            <div\r\n              key={i}\r\n              style={{\r\n                ...styles.building,\r\n                left: `${i * 7}%`,\r\n                height: `${60 + Math.random() * 40}%`,\r\n                animationDelay: `${Math.random() * 2}s`\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Animated lights on buildings */}\r\n        {[...Array(30)].map((_, i) => (\r\n          <div\r\n            key={i}\r\n            style={{\r\n              ...styles.light,\r\n              left: `${Math.random() * 100}%`,\r\n              top: `${20 + Math.random() * 60}%`,\r\n              animationDelay: `${Math.random() * 4}s`,\r\n              animationDuration: `${3 + Math.random() * 2}s`\r\n            }}\r\n          />\r\n        ))}\r\n        \r\n        {/* Ground reflection */}\r\n        <div style={styles.ground}></div>\r\n      </div>\r\n\r\n      {/* Glassmorphism Form Container */}\r\n      <div style={styles.formContainer}>\r\n        <div style={styles.formCard}>\r\n          {/* Logo/Title */}\r\n          <div style={styles.header}>\r\n            <h1 style={styles.title}>UrbanFlow</h1>\r\n            <p style={styles.subtitle}>\r\n              {mode === 'login' ? 'Welcome back to the city' : 'Join the urban experience'}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Form */}\r\n          <form onSubmit={handleSubmit} style={styles.form}>\r\n            {mode === 'register' && (\r\n              <div style={styles.inputGroup}>\r\n                <div style={styles.inputWrapper}>\r\n                  <FiUser style={styles.inputIcon} />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={displayName}\r\n                    onChange={(e) => setDisplayName(e.target.value)}\r\n                    style={styles.input}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div style={styles.inputGroup}>\r\n              <div style={styles.inputWrapper}>\r\n                <FiMail style={styles.inputIcon} />\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email address\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  style={styles.input}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div style={styles.inputGroup}>\r\n              <div style={styles.inputWrapper}>\r\n                <FiLock style={styles.inputIcon} />\r\n                <input\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  style={styles.input}\r\n                  required\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  style={styles.passwordToggle}\r\n                >\r\n                  {showPassword ? <FiEyeOff /> : <FiEye />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {error && (\r\n              <div style={styles.error}>\r\n                <span style={styles.errorText}>{error}</span>\r\n              </div>\r\n            )}\r\n\r\n            <button type=\"submit\" disabled={submitting} style={styles.primaryBtn}>\r\n              {submitting ? 'Please wait…' : mode === 'login' ? 'Sign In' : 'Create Account'}\r\n            </button>\r\n          </form>\r\n\r\n          {/* Divider */}\r\n          <div style={styles.divider}>\r\n            <span style={styles.dividerText}>or</span>\r\n          </div>\r\n\r\n          {/* Google Sign In */}\r\n          <button onClick={handleGoogle} disabled={submitting} style={styles.googleBtn}>\r\n            <svg style={styles.googleIcon} viewBox=\"0 0 24 24\">\r\n              <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\r\n              <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\r\n              <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\r\n              <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\r\n            </svg>\r\n            Continue with Google\r\n          </button>\r\n\r\n          {/* Mode Toggle */}\r\n          <div style={styles.modeToggle}>\r\n            {mode === 'login' ? (\r\n              <span style={styles.modeText}>\r\n                Don't have an account?{' '}\r\n                <button onClick={() => setMode('register')} style={styles.modeBtn}>\r\n                  Sign up\r\n                </button>\r\n              </span>\r\n            ) : (\r\n              <span style={styles.modeText}>\r\n                Already have an account?{' '}\r\n                <button onClick={() => setMode('login')} style={styles.modeBtn}>\r\n                  Sign in\r\n                </button>\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    minHeight: '100vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n    background: 'linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%)',\r\n  },\r\n  \r\n  // City Background Styles\r\n  cityBackground: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    zIndex: 1,\r\n  },\r\n  \r\n  sky: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: '70%',\r\n    background: 'linear-gradient(180deg, #0a0a1a 0%, #1a1a2e 50%, #16213e 100%)',\r\n  },\r\n  \r\n  star: {\r\n    position: 'absolute',\r\n    width: '2px',\r\n    height: '2px',\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: '50%',\r\n    animation: 'twinkle 3s infinite ease-in-out',\r\n    boxShadow: '0 0 4px #ffffff, 0 0 8px #ffffff',\r\n  },\r\n  \r\n  buildings: {\r\n    position: 'absolute',\r\n    bottom: '15%',\r\n    left: 0,\r\n    right: 0,\r\n    height: '55%',\r\n  },\r\n  \r\n  building: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    width: '6%',\r\n    backgroundColor: '#1a1a2e',\r\n    borderTop: '2px solid #2d2d4a',\r\n    boxShadow: 'inset 0 0 20px rgba(0,0,0,0.5)',\r\n    animation: 'buildingGlow 4s infinite ease-in-out',\r\n  },\r\n  \r\n  light: {\r\n    position: 'absolute',\r\n    width: '3px',\r\n    height: '3px',\r\n    backgroundColor: '#ffd700',\r\n    borderRadius: '50%',\r\n    boxShadow: '0 0 8px #ffd700, 0 0 16px #ffd700',\r\n    animation: 'lightFlicker 5s infinite ease-in-out',\r\n  },\r\n  \r\n  ground: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: '15%',\r\n    background: 'linear-gradient(180deg, #0a0a1a 0%, #1a1a2e 100%)',\r\n    boxShadow: 'inset 0 10px 20px rgba(0,0,0,0.8)',\r\n  },\r\n  \r\n  // Form Container Styles\r\n  formContainer: {\r\n    position: 'relative',\r\n    zIndex: 10,\r\n    width: '100%',\r\n    maxWidth: '420px',\r\n    padding: '20px',\r\n  },\r\n  \r\n  formCard: {\r\n    background: 'rgba(255, 255, 255, 0.1)',\r\n    backdropFilter: 'blur(20px)',\r\n    WebkitBackdropFilter: 'blur(20px)',\r\n    borderRadius: '24px',\r\n    border: '1px solid rgba(255, 255, 255, 0.2)',\r\n    padding: '40px',\r\n    boxShadow: '0 25px 50px rgba(0, 0, 0, 0.3)',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n  },\r\n  \r\n  header: {\r\n    textAlign: 'center',\r\n    marginBottom: '32px',\r\n  },\r\n  \r\n  title: {\r\n    fontSize: '32px',\r\n    fontWeight: '700',\r\n    color: '#ffffff',\r\n    margin: '0 0 8px 0',\r\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n    WebkitBackgroundClip: 'text',\r\n    WebkitTextFillColor: 'transparent',\r\n    backgroundClip: 'text',\r\n  },\r\n  \r\n  subtitle: {\r\n    fontSize: '16px',\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    margin: 0,\r\n    fontWeight: '400',\r\n  },\r\n  \r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '20px',\r\n    marginBottom: '24px',\r\n  },\r\n  \r\n  inputGroup: {\r\n    position: 'relative',\r\n  },\r\n  \r\n  inputWrapper: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  \r\n  inputIcon: {\r\n    position: 'absolute',\r\n    left: '16px',\r\n    color: 'rgba(255, 255, 255, 0.6)',\r\n    fontSize: '18px',\r\n    zIndex: 2,\r\n  },\r\n  \r\n  input: {\r\n    width: '100%',\r\n    padding: '16px 16px 16px 48px',\r\n    borderRadius: '12px',\r\n    border: '1px solid rgba(255, 255, 255, 0.2)',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n    color: '#ffffff',\r\n    fontSize: '16px',\r\n    transition: 'all 0.3s ease',\r\n    backdropFilter: 'blur(10px)',\r\n    WebkitBackdropFilter: 'blur(10px)',\r\n  },\r\n  \r\n  passwordToggle: {\r\n    position: 'absolute',\r\n    right: '16px',\r\n    background: 'none',\r\n    border: 'none',\r\n    color: 'rgba(255, 255, 255, 0.6)',\r\n    cursor: 'pointer',\r\n    fontSize: '18px',\r\n    padding: '4px',\r\n    borderRadius: '4px',\r\n    transition: 'all 0.3s ease',\r\n  },\r\n  \r\n  error: {\r\n    background: 'rgba(239, 68, 68, 0.2)',\r\n    border: '1px solid rgba(239, 68, 68, 0.3)',\r\n    borderRadius: '8px',\r\n    padding: '12px',\r\n    backdropFilter: 'blur(10px)',\r\n    WebkitBackdropFilter: 'blur(10px)',\r\n  },\r\n  \r\n  errorText: {\r\n    color: '#fca5a5',\r\n    fontSize: '14px',\r\n    fontWeight: '500',\r\n  },\r\n  \r\n  primaryBtn: {\r\n    padding: '16px',\r\n    borderRadius: '12px',\r\n    border: 'none',\r\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n    color: '#ffffff',\r\n    fontSize: '16px',\r\n    fontWeight: '600',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.3s ease',\r\n    boxShadow: '0 8px 25px rgba(102, 126, 234, 0.3)',\r\n  },\r\n  \r\n  divider: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: '24px 0',\r\n  },\r\n  \r\n  dividerText: {\r\n    color: 'rgba(255, 255, 255, 0.5)',\r\n    fontSize: '14px',\r\n    margin: '0 16px',\r\n  },\r\n  \r\n  googleBtn: {\r\n    width: '100%',\r\n    padding: '16px',\r\n    borderRadius: '12px',\r\n    border: '1px solid rgba(255, 255, 255, 0.2)',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n    color: '#ffffff',\r\n    fontSize: '16px',\r\n    fontWeight: '500',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.3s ease',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    gap: '12px',\r\n    backdropFilter: 'blur(10px)',\r\n    WebkitBackdropFilter: 'blur(10px)',\r\n  },\r\n  \r\n  googleIcon: {\r\n    width: '20px',\r\n    height: '20px',\r\n  },\r\n  \r\n  modeToggle: {\r\n    textAlign: 'center',\r\n    marginTop: '24px',\r\n  },\r\n  \r\n  modeText: {\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    fontSize: '14px',\r\n  },\r\n  \r\n  modeBtn: {\r\n    background: 'none',\r\n    border: 'none',\r\n    color: '#667eea',\r\n    cursor: 'pointer',\r\n    fontWeight: '600',\r\n    textDecoration: 'underline',\r\n    padding: '0',\r\n    margin: '0',\r\n  },\r\n};\r\n\r\n// Add CSS animations to the document\r\nif (typeof document !== 'undefined') {\r\n  const style = document.createElement('style');\r\n  style.textContent = `\r\n    @keyframes twinkle {\r\n      0%, 100% { opacity: 0.3; transform: scale(1); }\r\n      50% { opacity: 1; transform: scale(1.2); }\r\n    }\r\n    \r\n    @keyframes buildingGlow {\r\n      0%, 100% { box-shadow: inset 0 0 20px rgba(0,0,0,0.5); }\r\n      50% { box-shadow: inset 0 0 30px rgba(102, 126, 234, 0.2); }\r\n    }\r\n    \r\n    @keyframes lightFlicker {\r\n      0%, 100% { opacity: 0.8; transform: scale(1); }\r\n      25% { opacity: 1; transform: scale(1.1); }\r\n      50% { opacity: 0.6; transform: scale(0.9); }\r\n      75% { opacity: 0.9; transform: scale(1.05); }\r\n    }\r\n    \r\n    .formCard:hover {\r\n      transform: translateY(-5px);\r\n      box-shadow: 0 35px 60px rgba(0, 0, 0, 0.4);\r\n    }\r\n    \r\n    .input:focus {\r\n      outline: none;\r\n      border-color: rgba(102, 126, 234, 0.6);\r\n      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n      background-color: rgba(255, 255, 255, 0.15);\r\n    }\r\n    \r\n    .primaryBtn:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);\r\n    }\r\n    \r\n    .googleBtn:hover {\r\n      background-color: rgba(255, 255, 255, 0.2);\r\n      border-color: rgba(255, 255, 255, 0.3);\r\n      transform: translateY(-2px);\r\n    }\r\n    \r\n    .passwordToggle:hover {\r\n      color: rgba(255, 255, 255, 0.9);\r\n      background-color: rgba(255, 255, 255, 0.1);\r\n    }\r\n    \r\n    .modeBtn:hover {\r\n      color: #8b5cf6;\r\n    }\r\n  `;\r\n  document.head.appendChild(style);\r\n}\r\n\r\n\r\n"
        }
    ]
}