{
    "sourceFile": "src/pages/Checkout.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1755018275073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755594890765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, { useState, useEffect } from 'react';\r\n-import { FiShoppingCart, FiUser, FiCreditCard, FiHome, FiPhone, FiMail } from 'react-icons/fi';\r\n+import { FiShoppingCart, FiUser, FiCreditCard, FiHome, FiPhone, FiMail, FiClock, FiDollarSign } from 'react-icons/fi';\r\n import { FaWhatsapp } from 'react-icons/fa';\r\n+import axios from 'axios';\r\n \r\n const Checkout = ({ cartItems, onClose, restaurant }) => {\r\n   // State for form fields\r\n   const [formData, setFormData] = useState({\r\n@@ -26,70 +27,79 @@\n       [name]: value\r\n     }));\r\n   };\r\n \r\n+  // Pesapal iframe state\r\n+  const [pesapalUrl, setPesapalUrl] = useState('');\r\n+  const [orderTrackingId, setOrderTrackingId] = useState('');\r\n+\r\n+  // Determine API base\r\n+  // Prefer VITE_API_BASE_URL; fall back to localhost:3001 in Vite dev if unset\r\n+  const apiBase = (\r\n+    import.meta.env?.VITE_API_BASE_URL ||\r\n+    ((location.hostname === 'localhost' || location.hostname === '127.0.0.1')\r\n+      ? 'http://localhost:3001'\r\n+      : '')\r\n+  );\r\n+\r\n   // Handle payment submission\r\n-  const handlePayment = (e) => {\r\n+  const handlePayment = async (e) => {\r\n     e.preventDefault();\r\n     \r\n     // Validate form\r\n     if (!formData.name || !formData.phone || !formData.address) {\r\n       alert('Please fill in all required fields');\r\n       return;\r\n     }\r\n \r\n-    // Initialize Flutterwave payment\r\n-    if (window.FlutterwaveCheckout) {\r\n-      const flutterwaveConfig = {\r\n-        public_key: 'YOUR_FLUTTERWAVE_PUBLIC_KEY',\r\n-        tx_ref: `NB-${Date.now()}`,\r\n+    try {\r\n+      const { data } = await axios.post(`${apiBase}/api/pesapal/order`, {\r\n         amount: total,\r\n         currency: 'KES',\r\n-        payment_options: 'mobilemoney,card',\r\n+        description: `Payment for order from ${restaurant?.name || 'market'}`,\r\n+        restaurantName: restaurant?.name,\r\n         customer: {\r\n-          email: formData.email || 'customer@example.com',\r\n-          phone_number: formData.phone,\r\n           name: formData.name,\r\n+          email: formData.email,\r\n+          phone: formData.phone,\r\n+          address: formData.address,\r\n         },\r\n-        customizations: {\r\n-          title: 'Nairobi Bites & Delights',\r\n-          description: `Payment for order from ${restaurant?.name || 'market'}`,\r\n-          logo: 'https://your-logo-url.com/logo.png',\r\n-        },\r\n-        callback: function(response) {\r\n-          // Handle successful payment\r\n-          console.log('Payment response:', response);\r\n-          if (response.status === 'successful') {\r\n-            alert('Payment successful! Your order is being processed.');\r\n-            // Here you would typically send the order to your backend\r\n-            onClose();\r\n-          }\r\n-        },\r\n-        onclose: function() {\r\n-          // Handle when modal is closed\r\n-          console.log('Payment modal closed');\r\n-        }\r\n-      };\r\n-\r\n-      // Initialize payment\r\n-      window.FlutterwaveCheckout(flutterwaveConfig);\r\n-    } else {\r\n-      alert('Payment processor not loaded. Please try again.');\r\n+      });\r\n+      if (data.redirect_url) {\r\n+        setPesapalUrl(data.redirect_url);\r\n+        setOrderTrackingId(data.order_tracking_id || '');\r\n+      } else {\r\n+        alert('Failed to start payment.');\r\n+      }\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      const serverMsg = err?.response?.data?.error || err?.message || 'Payment failed to initialize.';\r\n+      alert(serverMsg);\r\n     }\r\n   };\r\n \r\n-  // Load Flutterwave script\r\n+  // Poll for Pesapal status if we have a tracking id\r\n   useEffect(() => {\r\n-    const script = document.createElement('script');\r\n-    script.src = 'https://checkout.flutterwave.com/v3.js';\r\n-    script.async = true;\r\n-    document.body.appendChild(script);\r\n+    if (!orderTrackingId) return;\r\n+    const interval = setInterval(async () => {\r\n+      try {\r\n+        const { data } = await axios.get(`${apiBase}/api/pesapal/status/${orderTrackingId}`);\r\n+        if (data.payment_status_description === 'COMPLETED' || data.status_code === 1) {\r\n+          clearInterval(interval);\r\n+          alert('Payment successful! Your order is being processed.');\r\n+          onClose();\r\n+        }\r\n+        if (data.payment_status_description === 'FAILED') {\r\n+          clearInterval(interval);\r\n+          alert('Payment failed.');\r\n+        }\r\n+      } catch (e) {\r\n+        // ignore intermittent errors while polling\r\n+      }\r\n+    }, 3000);\r\n+    return () => clearInterval(interval);\r\n+  }, [orderTrackingId]);\r\n \r\n-    return () => {\r\n-      document.body.removeChild(script);\r\n-    };\r\n-  }, []);\r\n-\r\n   return (\r\n     <div style={styles.overlay}>\r\n       <div style={styles.checkoutContainer}>\r\n         {/* Header */}\r\n@@ -278,8 +288,19 @@\n               <button type=\"submit\" style={styles.payButton}>\r\n                 Pay Ksh {total}\r\n               </button>\r\n \r\n+              {pesapalUrl && (\r\n+                <div style={{ marginTop: '20px' }}>\r\n+                  <h4 style={{ margin: '0 0 10px 0' }}>Complete Payment</h4>\r\n+                  <iframe\r\n+                    title=\"Pesapal Payment\"\r\n+                    src={pesapalUrl}\r\n+                    style={{ width: '100%', height: '520px', border: '1px solid #eee', borderRadius: '8px' }}\r\n+                  />\r\n+                </div>\r\n+              )}\r\n+\r\n               <div style={styles.contactInfo}>\r\n                 <p style={styles.contactText}>\r\n                   Need help? Contact us:\r\n                 </p>\r\n"
                }
            ],
            "date": 1755018275073,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { FiShoppingCart, FiUser, FiCreditCard, FiHome, FiPhone, FiMail } from 'react-icons/fi';\r\nimport { FaWhatsapp } from 'react-icons/fa';\r\n\r\nconst Checkout = ({ cartItems, onClose, restaurant }) => {\r\n  // State for form fields\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n    deliveryInstructions: '',\r\n    paymentMethod: 'mobile_money' // Default to M-Pesa\r\n  });\r\n\r\n  // Calculate totals\r\n  const subtotal = cartItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n  const deliveryFee = restaurant ? parseInt(restaurant.deliveryFee.replace(/\\D/g, '')) : 300;\r\n  const total = subtotal + deliveryFee;\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Handle payment submission\r\n  const handlePayment = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate form\r\n    if (!formData.name || !formData.phone || !formData.address) {\r\n      alert('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    // Initialize Flutterwave payment\r\n    if (window.FlutterwaveCheckout) {\r\n      const flutterwaveConfig = {\r\n        public_key: 'YOUR_FLUTTERWAVE_PUBLIC_KEY',\r\n        tx_ref: `NB-${Date.now()}`,\r\n        amount: total,\r\n        currency: 'KES',\r\n        payment_options: 'mobilemoney,card',\r\n        customer: {\r\n          email: formData.email || 'customer@example.com',\r\n          phone_number: formData.phone,\r\n          name: formData.name,\r\n        },\r\n        customizations: {\r\n          title: 'Nairobi Bites & Delights',\r\n          description: `Payment for order from ${restaurant?.name || 'market'}`,\r\n          logo: 'https://your-logo-url.com/logo.png',\r\n        },\r\n        callback: function(response) {\r\n          // Handle successful payment\r\n          console.log('Payment response:', response);\r\n          if (response.status === 'successful') {\r\n            alert('Payment successful! Your order is being processed.');\r\n            // Here you would typically send the order to your backend\r\n            onClose();\r\n          }\r\n        },\r\n        onclose: function() {\r\n          // Handle when modal is closed\r\n          console.log('Payment modal closed');\r\n        }\r\n      };\r\n\r\n      // Initialize payment\r\n      window.FlutterwaveCheckout(flutterwaveConfig);\r\n    } else {\r\n      alert('Payment processor not loaded. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Load Flutterwave script\r\n  useEffect(() => {\r\n    const script = document.createElement('script');\r\n    script.src = 'https://checkout.flutterwave.com/v3.js';\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={styles.overlay}>\r\n      <div style={styles.checkoutContainer}>\r\n        {/* Header */}\r\n        <div style={styles.header}>\r\n          <h2 style={styles.title}>Checkout</h2>\r\n          <button style={styles.closeButton} onClick={onClose}>\r\n            &times;\r\n          </button>\r\n        </div>\r\n\r\n        {/* Progress Steps */}\r\n        <div style={styles.progressSteps}>\r\n          <div style={styles.step}>\r\n            <div style={{...styles.stepNumber, ...styles.activeStep}}>1</div>\r\n            <div style={styles.stepText}>Order Details</div>\r\n          </div>\r\n          <div style={styles.step}>\r\n            <div style={styles.stepNumber}>2</div>\r\n            <div style={styles.stepText}>Delivery Info</div>\r\n          </div>\r\n          <div style={styles.step}>\r\n            <div style={styles.stepNumber}>3</div>\r\n            <div style={styles.stepText}>Payment</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={styles.content}>\r\n          {/* Left Column - Order Summary */}\r\n          <div style={styles.orderSummary}>\r\n            <h3 style={styles.sectionTitle}>\r\n              <FiShoppingCart style={styles.icon} /> Order Summary\r\n            </h3>\r\n\r\n            {restaurant && (\r\n              <div style={styles.restaurantInfo}>\r\n                <h4 style={styles.restaurantName}>{restaurant.name}</h4>\r\n                <div style={styles.restaurantDetails}>\r\n                  <span style={styles.detailItem}>\r\n                    <FiClock /> {restaurant.deliveryTime}\r\n                  </span>\r\n                  <span style={styles.detailItem}>\r\n                    <FiDollarSign /> {restaurant.deliveryFee} delivery\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div style={styles.itemsList}>\r\n              {cartItems.map((item, index) => (\r\n                <div key={index} style={styles.cartItem}>\r\n                  <div style={styles.itemInfo}>\r\n                    <span style={styles.itemQuantity}>{item.quantity}x</span>\r\n                    <span style={styles.itemName}>{item.name}</span>\r\n                  </div>\r\n                  <div style={styles.itemPrice}>\r\n                    Ksh {item.price * item.quantity}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div style={styles.totals}>\r\n              <div style={styles.totalRow}>\r\n                <span>Subtotal:</span>\r\n                <span>Ksh {subtotal}</span>\r\n              </div>\r\n              <div style={styles.totalRow}>\r\n                <span>Delivery Fee:</span>\r\n                <span>Ksh {deliveryFee}</span>\r\n              </div>\r\n              <div style={{...styles.totalRow, ...styles.grandTotal}}>\r\n                <span>Total:</span>\r\n                <span>Ksh {total}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right Column - Delivery and Payment */}\r\n          <div style={styles.deliveryForm}>\r\n            <form onSubmit={handlePayment}>\r\n              <h3 style={styles.sectionTitle}>\r\n                <FiUser style={styles.icon} /> Delivery Information\r\n              </h3>\r\n\r\n              <div style={styles.formGroup}>\r\n                <label style={styles.label}>Full Name *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleChange}\r\n                  style={styles.input}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div style={styles.formGroup}>\r\n                <label style={styles.label}>Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleChange}\r\n                  style={styles.input}\r\n                />\r\n              </div>\r\n\r\n              <div style={styles.formGroup}>\r\n                <label style={styles.label}>Phone Number *</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  value={formData.phone}\r\n                  onChange={handleChange}\r\n                  style={styles.input}\r\n                  required\r\n                  placeholder=\"e.g. 0712345678\"\r\n                />\r\n              </div>\r\n\r\n              <div style={styles.formGroup}>\r\n                <label style={styles.label}>Delivery Address *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  value={formData.address}\r\n                  onChange={handleChange}\r\n                  style={styles.input}\r\n                  required\r\n                  placeholder=\"House number, street, area\"\r\n                />\r\n              </div>\r\n\r\n              <div style={styles.formGroup}>\r\n                <label style={styles.label}>Delivery Instructions</label>\r\n                <textarea\r\n                  name=\"deliveryInstructions\"\r\n                  value={formData.deliveryInstructions}\r\n                  onChange={handleChange}\r\n                  style={{...styles.input, ...styles.textarea}}\r\n                  placeholder=\"Gate code, landmarks, etc.\"\r\n                  rows=\"3\"\r\n                />\r\n              </div>\r\n\r\n              <h3 style={styles.sectionTitle}>\r\n                <FiCreditCard style={styles.icon} /> Payment Method\r\n              </h3>\r\n\r\n              <div style={styles.paymentMethods}>\r\n                <label style={styles.paymentMethod}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"paymentMethod\"\r\n                    value=\"mobile_money\"\r\n                    checked={formData.paymentMethod === 'mobile_money'}\r\n                    onChange={handleChange}\r\n                    style={styles.radioInput}\r\n                  />\r\n                  <div style={styles.paymentContent}>\r\n                    <div style={styles.paymentTitle}>Mobile Money (M-Pesa)</div>\r\n                    <div style={styles.paymentDescription}>\r\n                      Pay via M-Pesa. You'll receive a payment request.\r\n                    </div>\r\n                  </div>\r\n                </label>\r\n\r\n                <label style={styles.paymentMethod}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"paymentMethod\"\r\n                    value=\"card\"\r\n                    checked={formData.paymentMethod === 'card'}\r\n                    onChange={handleChange}\r\n                    style={styles.radioInput}\r\n                  />\r\n                  <div style={styles.paymentContent}>\r\n                    <div style={styles.paymentTitle}>Credit/Debit Card</div>\r\n                    <div style={styles.paymentDescription}>\r\n                      Pay with Visa, Mastercard or American Express\r\n                    </div>\r\n                  </div>\r\n                </label>\r\n              </div>\r\n\r\n              <button type=\"submit\" style={styles.payButton}>\r\n                Pay Ksh {total}\r\n              </button>\r\n\r\n              <div style={styles.contactInfo}>\r\n                <p style={styles.contactText}>\r\n                  Need help? Contact us:\r\n                </p>\r\n                <div style={styles.contactLinks}>\r\n                  <a href={`tel:+254700000000`} style={styles.contactLink}>\r\n                    <FiPhone /> 0700 000 000\r\n                  </a>\r\n                  <a href={`https://wa.me/254700000000`} style={styles.contactLink}>\r\n                    <FaWhatsapp /> WhatsApp\r\n                  </a>\r\n                  <a href=\"mailto:help@nairobibites.com\" style={styles.contactLink}>\r\n                    <FiMail /> help@nairobibites.com\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Styles\r\nconst styles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 1000,\r\n    padding: '20px',\r\n  },\r\n  checkoutContainer: {\r\n    backgroundColor: 'white',\r\n    borderRadius: '12px',\r\n    width: '100%',\r\n    maxWidth: '1000px',\r\n    maxHeight: '90vh',\r\n    overflowY: 'auto',\r\n    boxShadow: '0 10px 30px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderBottom: '1px solid #eee',\r\n    position: 'sticky',\r\n    top: 0,\r\n    backgroundColor: 'white',\r\n    zIndex: 10,\r\n  },\r\n  title: {\r\n    margin: 0,\r\n    fontSize: '24px',\r\n    fontWeight: '600',\r\n    color: '#333',\r\n  },\r\n  closeButton: {\r\n    background: 'none',\r\n    border: 'none',\r\n    fontSize: '24px',\r\n    cursor: 'pointer',\r\n    color: '#666',\r\n    padding: '5px',\r\n    ':hover': {\r\n      color: '#333',\r\n    },\r\n  },\r\n  progressSteps: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '20px',\r\n    borderBottom: '1px solid #eee',\r\n  },\r\n  step: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    flex: 1,\r\n  },\r\n  stepNumber: {\r\n    width: '30px',\r\n    height: '30px',\r\n    borderRadius: '50%',\r\n    backgroundColor: '#eee',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: '5px',\r\n    color: '#666',\r\n    fontWeight: '600',\r\n  },\r\n  activeStep: {\r\n    backgroundColor: '#ff6b6b',\r\n    color: 'white',\r\n  },\r\n  stepText: {\r\n    fontSize: '12px',\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n  content: {\r\n    display: 'flex',\r\n    flexDirection: ['column', 'row'],\r\n    padding: '20px',\r\n  },\r\n  orderSummary: {\r\n    flex: 1,\r\n    padding: '20px',\r\n    borderRight: ['none', '1px solid #eee'],\r\n    borderBottom: ['1px solid #eee', 'none'],\r\n    marginBottom: ['20px', '0'],\r\n  },\r\n  deliveryForm: {\r\n    flex: 1,\r\n    padding: '20px',\r\n  },\r\n  sectionTitle: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    fontSize: '18px',\r\n    marginTop: '0',\r\n    marginBottom: '20px',\r\n    color: '#333',\r\n  },\r\n  icon: {\r\n    marginRight: '10px',\r\n    color: '#ff6b6b',\r\n  },\r\n  restaurantInfo: {\r\n    marginBottom: '20px',\r\n    paddingBottom: '20px',\r\n    borderBottom: '1px solid #eee',\r\n  },\r\n  restaurantName: {\r\n    margin: '0 0 10px 0',\r\n    fontSize: '16px',\r\n  },\r\n  restaurantDetails: {\r\n    display: 'flex',\r\n    gap: '15px',\r\n    fontSize: '14px',\r\n    color: '#666',\r\n  },\r\n  detailItem: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: '5px',\r\n  },\r\n  itemsList: {\r\n    marginBottom: '20px',\r\n  },\r\n  cartItem: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px 0',\r\n    borderBottom: '1px solid #f5f5f5',\r\n  },\r\n  itemInfo: {\r\n    display: 'flex',\r\n    gap: '10px',\r\n  },\r\n  itemQuantity: {\r\n    color: '#666',\r\n  },\r\n  itemName: {\r\n    fontWeight: '500',\r\n  },\r\n  itemPrice: {\r\n    fontWeight: '600',\r\n  },\r\n  totals: {\r\n    marginTop: '20px',\r\n  },\r\n  totalRow: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '8px 0',\r\n    borderBottom: '1px solid #f5f5f5',\r\n  },\r\n  grandTotal: {\r\n    fontWeight: '600',\r\n    fontSize: '18px',\r\n    padding: '15px 0',\r\n    borderBottom: 'none',\r\n  },\r\n  formGroup: {\r\n    marginBottom: '20px',\r\n  },\r\n  label: {\r\n    display: 'block',\r\n    marginBottom: '8px',\r\n    fontWeight: '500',\r\n    fontSize: '14px',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: '12px',\r\n    border: '1px solid #ddd',\r\n    borderRadius: '6px',\r\n    fontSize: '14px',\r\n    ':focus': {\r\n      outline: 'none',\r\n      borderColor: '#ff6b6b',\r\n    },\r\n  },\r\n  textarea: {\r\n    resize: 'vertical',\r\n    minHeight: '80px',\r\n  },\r\n  paymentMethods: {\r\n    marginBottom: '30px',\r\n  },\r\n  paymentMethod: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '15px',\r\n    marginBottom: '10px',\r\n    border: '1px solid #ddd',\r\n    borderRadius: '6px',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      borderColor: '#ff6b6b',\r\n    },\r\n  },\r\n  radioInput: {\r\n    marginRight: '15px',\r\n    accentColor: '#ff6b6b',\r\n  },\r\n  paymentContent: {\r\n    flex: 1,\r\n  },\r\n  paymentTitle: {\r\n    fontWeight: '600',\r\n    marginBottom: '5px',\r\n  },\r\n  paymentDescription: {\r\n    fontSize: '13px',\r\n    color: '#666',\r\n  },\r\n  payButton: {\r\n    width: '100%',\r\n    padding: '15px',\r\n    backgroundColor: '#ff6b6b',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '6px',\r\n    fontSize: '16px',\r\n    fontWeight: '600',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s',\r\n    ':hover': {\r\n      backgroundColor: '#e63946',\r\n    },\r\n  },\r\n  contactInfo: {\r\n    marginTop: '30px',\r\n    paddingTop: '20px',\r\n    borderTop: '1px solid #eee',\r\n    textAlign: 'center',\r\n  },\r\n  contactText: {\r\n    marginBottom: '10px',\r\n    color: '#666',\r\n  },\r\n  contactLinks: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    gap: '15px',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contactLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: '5px',\r\n    color: '#ff6b6b',\r\n    textDecoration: 'none',\r\n    fontSize: '14px',\r\n    ':hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n};\r\n\r\nexport default Checkout;"
        }
    ]
}