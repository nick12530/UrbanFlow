{
    "sourceFile": "src/pages/Transport.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1752166212536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752167066099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,53 +1,8 @@\n-import { useState } from 'react';\r\n-import TransportPlanner from '../components/TransportPlanner';\r\n-import TransportOptions from '../components/TransportOptions';\r\n-\r\n export default function Transport() {\r\n-  const [origin, setOrigin] = useState('JFK');\r\n-  const [destination, setDestination] = useState('LXX');\r\n-  const [routes, setRoutes] = useState([\r\n-    {\r\n-      id: 1,\r\n-      name: 'Express Bus 42',\r\n-      time: '10:15 AM - 10:40 AM',\r\n-      price: '$2.50',\r\n-      type: 'bus'\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      name: 'City Bus 15',\r\n-      time: '10:10 AM - 10:45 AM',\r\n-      price: '$2.00',\r\n-      type: 'bus'\r\n-    },\r\n-    {\r\n-      id: 3,\r\n-      name: 'Rideshare',\r\n-      time: '10:12 AM - 10:25 AM',\r\n-      price: '$12.75',\r\n-      type: 'rideshare',\r\n-      provider: 'Uber'\r\n-    }\r\n-  ]);\r\n-\r\n   return (\r\n-    <div className=\"transport-page\">\r\n-      <h1>UrbanFlow</h1>\r\n-      <h2>Transport Planner</h2>\r\n-      <p>Plan your journey across the city using multiple transport options</p>\r\n-      \r\n-      <TransportPlanner \r\n-        origin={origin}\r\n-        destination={destination}\r\n-        setOrigin={setOrigin}\r\n-        setDestination={setDestination}\r\n-      />\r\n-      \r\n-      <TransportOptions \r\n-        routes={routes}\r\n-        origin={origin}\r\n-        destination={destination}\r\n-      />\r\n+    <div>\r\n+      <h1>Transport Options</h1>\r\n+      <p>Find your perfect route</p>\r\n     </div>\r\n   );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752167549561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,53 @@\n+import { useState } from 'react';\r\n+import Header from '../components/Header';\r\n+import Navbar from '../components/Navbar';\r\n+import TransportPlanner from '../components/TransportPlanner';\r\n+import TransportOptions from '../components/TransportOptions';\r\n+import '../styles/main.css';\r\n+\r\n export default function Transport() {\r\n+  const [routes, setRoutes] = useState([]);\r\n+  const [loading, setLoading] = useState(false);\r\n+\r\n+  const handleSearch = (origin, destination) => {\r\n+    setLoading(true);\r\n+    // Simulate API call\r\n+    setTimeout(() => {\r\n+      setRoutes([\r\n+        {\r\n+          id: 1,\r\n+          name: 'Express Bus 42',\r\n+          time: '10:15 AM - 10:40 AM',\r\n+          price: '$2.50',\r\n+          type: 'bus',\r\n+          stops: 5\r\n+        },\r\n+        {\r\n+          id: 2,\r\n+          name: 'City Bus 15',\r\n+          time: '10:10 AM - 10:45 AM',\r\n+          price: '$2.00',\r\n+          type: 'bus',\r\n+          stops: 12\r\n+        }\r\n+      ]);\r\n+      setLoading(false);\r\n+    }, 800);\r\n+  };\r\n+\r\n   return (\r\n-    <div>\r\n-      <h1>Transport Options</h1>\r\n-      <p>Find your perfect route</p>\r\n+    <div className=\"transport-page\">\r\n+      <Header />\r\n+      <Navbar />\r\n+      <main className=\"container\">\r\n+        <h1>Transport Planner</h1>\r\n+        <TransportPlanner onSearch={handleSearch} />\r\n+        {loading ? (\r\n+          <div className=\"loading\">Finding routes...</div>\r\n+        ) : (\r\n+          <TransportOptions routes={routes} />\r\n+        )}\r\n+      </main>\r\n     </div>\r\n   );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752168190935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,53 +1,8 @@\n-import { useState } from 'react';\r\n-import Header from '../components/Header';\r\n-import Navbar from '../components/Navbar';\r\n-import TransportPlanner from '../components/TransportPlanner';\r\n-import TransportOptions from '../components/TransportOptions';\r\n-import '../styles/main.css';\r\n-\r\n export default function Transport() {\r\n-  const [routes, setRoutes] = useState([]);\r\n-  const [loading, setLoading] = useState(false);\r\n-\r\n-  const handleSearch = (origin, destination) => {\r\n-    setLoading(true);\r\n-    // Simulate API call\r\n-    setTimeout(() => {\r\n-      setRoutes([\r\n-        {\r\n-          id: 1,\r\n-          name: 'Express Bus 42',\r\n-          time: '10:15 AM - 10:40 AM',\r\n-          price: '$2.50',\r\n-          type: 'bus',\r\n-          stops: 5\r\n-        },\r\n-        {\r\n-          id: 2,\r\n-          name: 'City Bus 15',\r\n-          time: '10:10 AM - 10:45 AM',\r\n-          price: '$2.00',\r\n-          type: 'bus',\r\n-          stops: 12\r\n-        }\r\n-      ]);\r\n-      setLoading(false);\r\n-    }, 800);\r\n-  };\r\n-\r\n   return (\r\n-    <div className=\"transport-page\">\r\n-      <Header />\r\n-      <Navbar />\r\n-      <main className=\"container\">\r\n-        <h1>Transport Planner</h1>\r\n-        <TransportPlanner onSearch={handleSearch} />\r\n-        {loading ? (\r\n-          <div className=\"loading\">Finding routes...</div>\r\n-        ) : (\r\n-          <TransportOptions routes={routes} />\r\n-        )}\r\n-      </main>\r\n+    <div style={{ padding: '2rem' }}>\r\n+      <h1>Transport Options</h1>\r\n+      <p>Transport content will appear here</p>\r\n     </div>\r\n-  );\r\n+  )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752168506492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,19 @@\n export default function Transport() {\r\n   return (\r\n-    <div style={{ padding: '2rem' }}>\r\n+    <div className=\"page-container\">\r\n       <h1>Transport Options</h1>\r\n-      <p>Transport content will appear here</p>\r\n+      <div className=\"transport-options\">\r\n+        <div className=\"option-card\">\r\n+          <h3>üöç Express Bus 42</h3>\r\n+          <p>10:15 AM - 10:40 AM</p>\r\n+          <p>$2.50 ‚Ä¢ 5 stops</p>\r\n+        </div>\r\n+        <div className=\"option-card\">\r\n+          <h3>üöè City Bus 15</h3>\r\n+          <p>10:10 AM - 10:45 AM</p>\r\n+          <p>$2.00 ‚Ä¢ 12 stops</p>\r\n+        </div>\r\n+      </div>\r\n     </div>\r\n-  )\r\n+  );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752169153346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,61 @@\n+import { useState } from 'react';\r\n+import TransportPlanner from '../components/TransportPlanner';\r\n+import RouteCard from '../components/RouteCard';\r\n+\r\n export default function Transport() {\r\n+  const [routes, setRoutes] = useState([]);\r\n+  const [loading, setLoading] = useState(false);\r\n+\r\n+  const handleSearch = (origin, destination) => {\r\n+    setLoading(true);\r\n+    // Simulate API call\r\n+    setTimeout(() => {\r\n+      setRoutes([\r\n+        {\r\n+          id: 1,\r\n+          name: 'Express Bus 42',\r\n+          departure: '10:15 AM',\r\n+          arrival: '10:40 AM',\r\n+          duration: '25 min',\r\n+          price: '$2.50',\r\n+          type: 'bus',\r\n+          stops: 5,\r\n+          features: ['Wheelchair accessible', 'Air conditioning']\r\n+        },\r\n+        {\r\n+          id: 2,\r\n+          name: 'City Bus 15',\r\n+          departure: '10:10 AM',\r\n+          arrival: '10:45 AM',\r\n+          duration: '35 min',\r\n+          price: '$2.00',\r\n+          type: 'bus',\r\n+          stops: 12,\r\n+          features: ['Free WiFi']\r\n+        }\r\n+      ]);\r\n+      setLoading(false);\r\n+    }, 1000);\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"page-container\">\r\n-      <h1>Transport Options</h1>\r\n-      <div className=\"transport-options\">\r\n-        <div className=\"option-card\">\r\n-          <h3>üöç Express Bus 42</h3>\r\n-          <p>10:15 AM - 10:40 AM</p>\r\n-          <p>$2.50 ‚Ä¢ 5 stops</p>\r\n+      <h1>Transport Planner</h1>\r\n+      <TransportPlanner onSearch={handleSearch} />\r\n+      \r\n+      {loading ? (\r\n+        <div className=\"text-center mt-2\">Loading routes...</div>\r\n+      ) : routes.length > 0 ? (\r\n+        <div className=\"routes-grid mt-2\">\r\n+          {routes.map(route => (\r\n+            <RouteCard key={route.id} route={route} />\r\n+          ))}\r\n         </div>\r\n-        <div className=\"option-card\">\r\n-          <h3>üöè City Bus 15</h3>\r\n-          <p>10:10 AM - 10:45 AM</p>\r\n-          <p>$2.00 ‚Ä¢ 12 stops</p>\r\n+      ) : (\r\n+        <div className=\"card mt-2 text-center\">\r\n+          <p>Enter locations to find transport options</p>\r\n         </div>\r\n-      </div>\r\n+      )}\r\n     </div>\r\n   );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752169190154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+import { useState } from 'react';\r\n+import TransportPlanner from '../components/TransportPlanner';\r\n+import RouteCard from '../components/RouteCard';\r\n+\r\n+export default function Transport() {\r\n+  const [routes, setRoutes] = useState([]);\r\n+  const [loading, setLoading] = useState(false);\r\n+\r\n+  const handleSearch = (origin, destination) => {\r\n+    setLoading(true);\r\n+    // Simulate API call\r\n+    setTimeout(() => {\r\n+      setRoutes([\r\n+        {\r\n+          id: 1,\r\n+          name: 'Express Bus 42',\r\n+          departure: '10:15 AM',\r\n+          arrival: '10:40 AM',\r\n+          duration: '25 min',\r\n+          price: '$2.50',\r\n+          type: 'bus',\r\n+          stops: 5,\r\n+          features: ['Wheelchair accessible', 'Air conditioning']\r\n+        },\r\n+        {\r\n+          id: 2,\r\n+          name: 'City Bus 15',\r\n+          departure: '10:10 AM',\r\n+          arrival: '10:45 AM',\r\n+          duration: '35 min',\r\n+          price: '$2.00',\r\n+          type: 'bus',\r\n+          stops: 12,\r\n+          features: ['Free WiFi']\r\n+        }\r\n+      ]);\r\n+      setLoading(false);\r\n+    }, 1000);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"page-container\">\r\n+      <h1>Transport Planner</h1>\r\n+      <TransportPlanner onSearch={handleSearch} />\r\n+      \r\n+      {loading ? (\r\n+        <div className=\"text-center mt-2\">Loading routes...</div>\r\n+      ) : routes.length > 0 ? (\r\n+        <div className=\"routes-grid mt-2\">\r\n+          {routes.map(route => (\r\n+            <RouteCard key={route.id} route={route} />\r\n+          ))}\r\n+        </div>\r\n+      ) : (\r\n+        <div className=\"card mt-2 text-center\">\r\n+          <p>Enter locations to find transport options</p>\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752170189548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,18 @@\n import { useState } from 'react';\r\n import TransportPlanner from '../components/TransportPlanner';\r\n import RouteCard from '../components/RouteCard';\r\n+import ServiceCard from '../components/ServiceCard';\r\n \r\n export default function Transport() {\r\n   const [routes, setRoutes] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n+  const [showMap, setShowMap] = useState(false);\r\n+  const [activeTab, setActiveTab] = useState('routes');\r\n \r\n   const handleSearch = (origin, destination) => {\r\n     setLoading(true);\r\n+    setActiveTab('routes');\r\n     // Simulate API call\r\n     setTimeout(() => {\r\n       setRoutes([\r\n         {\r\n@@ -19,9 +23,10 @@\n           duration: '25 min',\r\n           price: '$2.50',\r\n           type: 'bus',\r\n           stops: 5,\r\n-          features: ['Wheelchair accessible', 'Air conditioning']\r\n+          features: ['Wheelchair accessible', 'Air conditioning'],\r\n+          coordinates: [40.7128, -74.0060] // Example coordinates\r\n         },\r\n         {\r\n           id: 2,\r\n           name: 'City Bus 15',\r\n@@ -30,93 +35,155 @@\n           duration: '35 min',\r\n           price: '$2.00',\r\n           type: 'bus',\r\n           stops: 12,\r\n-          features: ['Free WiFi']\r\n+          features: ['Free WiFi'],\r\n+          coordinates: [40.7218, -74.0010]\r\n         }\r\n       ]);\r\n       setLoading(false);\r\n     }, 1000);\r\n   };\r\n \r\n+  const bikeServices = [\r\n+    {\r\n+      id: 1,\r\n+      name: 'CityBike Hub',\r\n+      location: 'Downtown Station',\r\n+      price: '$3.50/hour',\r\n+      available: 12,\r\n+      rating: 4.7,\r\n+      coordinates: [40.7128, -74.0080]\r\n+    },\r\n+    {\r\n+      id: 2,\r\n+      name: 'Green Cycles',\r\n+      location: 'Central Park West',\r\n+      price: '$4.00/hour',\r\n+      available: 8,\r\n+      rating: 4.5,\r\n+      coordinates: [40.7180, -74.0030]\r\n+    }\r\n+  ];\r\n+\r\n+  const repairServices = [\r\n+    {\r\n+      id: 1,\r\n+      name: 'QuickFix Auto',\r\n+      service: 'Flat Tire Repair',\r\n+      availability: '24/7',\r\n+      price: '$30+',\r\n+      rating: 4.8,\r\n+      coordinates: [40.7150, -74.0050]\r\n+    },\r\n+    {\r\n+      id: 2,\r\n+      name: 'Urban Garage',\r\n+      service: 'Emergency Repair',\r\n+      availability: '6AM-10PM',\r\n+      price: '$50+',\r\n+      rating: 4.6,\r\n+      coordinates: [40.7100, -74.0070]\r\n+    }\r\n+  ];\r\n+\r\n   return (\r\n-    <div className=\"page-container\">\r\n-      <h1>Transport Planner</h1>\r\n-      <TransportPlanner onSearch={handleSearch} />\r\n-      \r\n-      {loading ? (\r\n-        <div className=\"text-center mt-2\">Loading routes...</div>\r\n-      ) : routes.length > 0 ? (\r\n-        <div className=\"routes-grid mt-2\">\r\n-          {routes.map(route => (\r\n-            <RouteCard key={route.id} route={route} />\r\n+    <div className=\"transport-page\">\r\n+      <div className=\"transport-header\">\r\n+        <h1>Transport Services</h1>\r\n+        <div className=\"tab-buttons\">\r\n+          <button \r\n+            className={activeTab === 'routes' ? 'active' : ''}\r\n+            onClick={() => setActiveTab('routes')}\r\n+          >\r\n+            Routes\r\n+          </button>\r\n+          <button \r\n+            className={activeTab === 'bikes' ? 'active' : ''}\r\n+            onClick={() => setActiveTab('bikes')}\r\n+          >\r\n+            Bike Hire\r\n+          </button>\r\n+          <button \r\n+            className={activeTab === 'repairs' ? 'active' : ''}\r\n+            onClick={() => setActiveTab('repairs')}\r\n+          >\r\n+            Car Repairs\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {activeTab === 'routes' && (\r\n+        <>\r\n+          <TransportPlanner onSearch={handleSearch} />\r\n+          {loading ? (\r\n+            <div className=\"loading-spinner\">Loading routes...</div>\r\n+          ) : routes.length > 0 ? (\r\n+            <>\r\n+              <button \r\n+                className=\"map-toggle-btn\"\r\n+                onClick={() => setShowMap(!showMap)}\r\n+              >\r\n+                {showMap ? 'Hide Map' : 'Show Map View'}\r\n+              </button>\r\n+              {showMap && (\r\n+                <div className=\"map-container\">\r\n+                  {/* Map placeholder - integrate with Mapbox/Google Maps in real app */}\r\n+                  <div className=\"map-placeholder\">\r\n+                    <p>Map would display here with route markers</p>\r\n+                    <div className=\"mock-map\">\r\n+                      {routes.map(route => (\r\n+                        <div \r\n+                          key={route.id} \r\n+                          className=\"map-marker\"\r\n+                          style={{\r\n+                            left: `${Math.random() * 80 + 10}%`,\r\n+                            top: `${Math.random() * 80 + 10}%`\r\n+                          }}\r\n+                        >\r\n+                          {route.name}\r\n+                        </div>\r\n+                      ))}\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+              )}\r\n+              <div className=\"routes-grid\">\r\n+                {routes.map(route => (\r\n+                  <RouteCard key={route.id} route={route} />\r\n+                ))}\r\n+              </div>\r\n+            </>\r\n+          ) : (\r\n+            <div className=\"empty-state\">\r\n+              <p>Enter locations to find transport options</p>\r\n+            </div>\r\n+          )}\r\n+        </>\r\n+      )}\r\n+\r\n+      {activeTab === 'bikes' && (\r\n+        <div className=\"services-grid\">\r\n+          {bikeServices.map(service => (\r\n+            <ServiceCard \r\n+              key={service.id} \r\n+              service={service} \r\n+              type=\"bike\"\r\n+            />\r\n           ))}\r\n         </div>\r\n-      ) : (\r\n-        <div className=\"card mt-2 text-center\">\r\n-          <p>Enter locations to find transport options</p>\r\n-        </div>\r\n       )}\r\n-    </div>\r\n-  );\r\n-}\n-import { useState } from 'react';\r\n-import TransportPlanner from '../components/TransportPlanner';\r\n-import RouteCard from '../components/RouteCard';\r\n \r\n-export default function Transport() {\r\n-  const [routes, setRoutes] = useState([]);\r\n-  const [loading, setLoading] = useState(false);\r\n-\r\n-  const handleSearch = (origin, destination) => {\r\n-    setLoading(true);\r\n-    // Simulate API call\r\n-    setTimeout(() => {\r\n-      setRoutes([\r\n-        {\r\n-          id: 1,\r\n-          name: 'Express Bus 42',\r\n-          departure: '10:15 AM',\r\n-          arrival: '10:40 AM',\r\n-          duration: '25 min',\r\n-          price: '$2.50',\r\n-          type: 'bus',\r\n-          stops: 5,\r\n-          features: ['Wheelchair accessible', 'Air conditioning']\r\n-        },\r\n-        {\r\n-          id: 2,\r\n-          name: 'City Bus 15',\r\n-          departure: '10:10 AM',\r\n-          arrival: '10:45 AM',\r\n-          duration: '35 min',\r\n-          price: '$2.00',\r\n-          type: 'bus',\r\n-          stops: 12,\r\n-          features: ['Free WiFi']\r\n-        }\r\n-      ]);\r\n-      setLoading(false);\r\n-    }, 1000);\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"page-container\">\r\n-      <h1>Transport Planner</h1>\r\n-      <TransportPlanner onSearch={handleSearch} />\r\n-      \r\n-      {loading ? (\r\n-        <div className=\"text-center mt-2\">Loading routes...</div>\r\n-      ) : routes.length > 0 ? (\r\n-        <div className=\"routes-grid mt-2\">\r\n-          {routes.map(route => (\r\n-            <RouteCard key={route.id} route={route} />\r\n+      {activeTab === 'repairs' && (\r\n+        <div className=\"services-grid\">\r\n+          {repairServices.map(service => (\r\n+            <ServiceCard \r\n+              key={service.id} \r\n+              service={service} \r\n+              type=\"repair\"\r\n+            />\r\n           ))}\r\n         </div>\r\n-      ) : (\r\n-        <div className=\"card mt-2 text-center\">\r\n-          <p>Enter locations to find transport options</p>\r\n-        </div>\r\n       )}\r\n     </div>\r\n   );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752170354405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,14 @@\n import { useState } from 'react';\r\n import TransportPlanner from '../components/TransportPlanner';\r\n import RouteCard from '../components/RouteCard';\r\n-import ServiceCard from '../components/ServiceCard';\r\n \r\n export default function Transport() {\r\n   const [routes, setRoutes] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n-  const [showMap, setShowMap] = useState(false);\r\n-  const [activeTab, setActiveTab] = useState('routes');\r\n \r\n   const handleSearch = (origin, destination) => {\r\n     setLoading(true);\r\n-    setActiveTab('routes');\r\n     // Simulate API call\r\n     setTimeout(() => {\r\n       setRoutes([\r\n         {\r\n@@ -23,10 +19,9 @@\n           duration: '25 min',\r\n           price: '$2.50',\r\n           type: 'bus',\r\n           stops: 5,\r\n-          features: ['Wheelchair accessible', 'Air conditioning'],\r\n-          coordinates: [40.7128, -74.0060] // Example coordinates\r\n+          features: ['Wheelchair accessible', 'Air conditioning']\r\n         },\r\n         {\r\n           id: 2,\r\n           name: 'City Bus 15',\r\n@@ -35,154 +30,31 @@\n           duration: '35 min',\r\n           price: '$2.00',\r\n           type: 'bus',\r\n           stops: 12,\r\n-          features: ['Free WiFi'],\r\n-          coordinates: [40.7218, -74.0010]\r\n+          features: ['Free WiFi']\r\n         }\r\n       ]);\r\n       setLoading(false);\r\n     }, 1000);\r\n   };\r\n \r\n-  const bikeServices = [\r\n-    {\r\n-      id: 1,\r\n-      name: 'CityBike Hub',\r\n-      location: 'Downtown Station',\r\n-      price: '$3.50/hour',\r\n-      available: 12,\r\n-      rating: 4.7,\r\n-      coordinates: [40.7128, -74.0080]\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      name: 'Green Cycles',\r\n-      location: 'Central Park West',\r\n-      price: '$4.00/hour',\r\n-      available: 8,\r\n-      rating: 4.5,\r\n-      coordinates: [40.7180, -74.0030]\r\n-    }\r\n-  ];\r\n-\r\n-  const repairServices = [\r\n-    {\r\n-      id: 1,\r\n-      name: 'QuickFix Auto',\r\n-      service: 'Flat Tire Repair',\r\n-      availability: '24/7',\r\n-      price: '$30+',\r\n-      rating: 4.8,\r\n-      coordinates: [40.7150, -74.0050]\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      name: 'Urban Garage',\r\n-      service: 'Emergency Repair',\r\n-      availability: '6AM-10PM',\r\n-      price: '$50+',\r\n-      rating: 4.6,\r\n-      coordinates: [40.7100, -74.0070]\r\n-    }\r\n-  ];\r\n-\r\n   return (\r\n-    <div className=\"transport-page\">\r\n-      <div className=\"transport-header\">\r\n-        <h1>Transport Services</h1>\r\n-        <div className=\"tab-buttons\">\r\n-          <button \r\n-            className={activeTab === 'routes' ? 'active' : ''}\r\n-            onClick={() => setActiveTab('routes')}\r\n-          >\r\n-            Routes\r\n-          </button>\r\n-          <button \r\n-            className={activeTab === 'bikes' ? 'active' : ''}\r\n-            onClick={() => setActiveTab('bikes')}\r\n-          >\r\n-            Bike Hire\r\n-          </button>\r\n-          <button \r\n-            className={activeTab === 'repairs' ? 'active' : ''}\r\n-            onClick={() => setActiveTab('repairs')}\r\n-          >\r\n-            Car Repairs\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {activeTab === 'routes' && (\r\n-        <>\r\n-          <TransportPlanner onSearch={handleSearch} />\r\n-          {loading ? (\r\n-            <div className=\"loading-spinner\">Loading routes...</div>\r\n-          ) : routes.length > 0 ? (\r\n-            <>\r\n-              <button \r\n-                className=\"map-toggle-btn\"\r\n-                onClick={() => setShowMap(!showMap)}\r\n-              >\r\n-                {showMap ? 'Hide Map' : 'Show Map View'}\r\n-              </button>\r\n-              {showMap && (\r\n-                <div className=\"map-container\">\r\n-                  {/* Map placeholder - integrate with Mapbox/Google Maps in real app */}\r\n-                  <div className=\"map-placeholder\">\r\n-                    <p>Map would display here with route markers</p>\r\n-                    <div className=\"mock-map\">\r\n-                      {routes.map(route => (\r\n-                        <div \r\n-                          key={route.id} \r\n-                          className=\"map-marker\"\r\n-                          style={{\r\n-                            left: `${Math.random() * 80 + 10}%`,\r\n-                            top: `${Math.random() * 80 + 10}%`\r\n-                          }}\r\n-                        >\r\n-                          {route.name}\r\n-                        </div>\r\n-                      ))}\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-              )}\r\n-              <div className=\"routes-grid\">\r\n-                {routes.map(route => (\r\n-                  <RouteCard key={route.id} route={route} />\r\n-                ))}\r\n-              </div>\r\n-            </>\r\n-          ) : (\r\n-            <div className=\"empty-state\">\r\n-              <p>Enter locations to find transport options</p>\r\n-            </div>\r\n-          )}\r\n-        </>\r\n-      )}\r\n-\r\n-      {activeTab === 'bikes' && (\r\n-        <div className=\"services-grid\">\r\n-          {bikeServices.map(service => (\r\n-            <ServiceCard \r\n-              key={service.id} \r\n-              service={service} \r\n-              type=\"bike\"\r\n-            />\r\n+    <div className=\"page-container\">\r\n+      <h1>Transport Planner</h1>\r\n+      <TransportPlanner onSearch={handleSearch} />\r\n+      \r\n+      {loading ? (\r\n+        <div className=\"text-center mt-2\">Loading routes...</div>\r\n+      ) : routes.length > 0 ? (\r\n+        <div className=\"routes-grid mt-2\">\r\n+          {routes.map(route => (\r\n+            <RouteCard key={route.id} route={route} />\r\n           ))}\r\n         </div>\r\n-      )}\r\n-\r\n-      {activeTab === 'repairs' && (\r\n-        <div className=\"services-grid\">\r\n-          {repairServices.map(service => (\r\n-            <ServiceCard \r\n-              key={service.id} \r\n-              service={service} \r\n-              type=\"repair\"\r\n-            />\r\n-          ))}\r\n+      ) : (\r\n+        <div className=\"card mt-2 text-center\">\r\n+          <p>Enter locations to find transport options</p>\r\n         </div>\r\n       )}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1752173163657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,13 @@\n import { useState } from 'react';\r\n+import { FaBus, FaBicycle, FaCar, FaMapMarkedAlt, FaWrench } from 'react-icons/fa';\r\n import TransportPlanner from '../components/TransportPlanner';\r\n import RouteCard from '../components/RouteCard';\r\n \r\n export default function Transport() {\r\n   const [routes, setRoutes] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n+  const [showMap, setShowMap] = useState(false);\r\n \r\n   const handleSearch = (origin, destination) => {\r\n     setLoading(true);\r\n     // Simulate API call\r\n@@ -37,24 +39,120 @@\n       setLoading(false);\r\n     }, 1000);\r\n   };\r\n \r\n+  // Local services data\r\n+  const services = [\r\n+    {\r\n+      id: 1,\r\n+      name: 'Quick Bike Rentals',\r\n+      description: 'Electric and standard bicycles available',\r\n+      price: '$5/hour',\r\n+      icon: <FaBicycle className=\"text-green-500 text-2xl\" />,\r\n+      features: ['Helmet included', '24/7 support']\r\n+    },\r\n+    {\r\n+      id: 2,\r\n+      name: 'AutoCare Center',\r\n+      description: 'Emergency car repairs and maintenance',\r\n+      price: 'From $30',\r\n+      icon: <FaWrench className=\"text-blue-500 text-2xl\" />,\r\n+      features: ['Roadside assistance', 'Battery replacement']\r\n+    }\r\n+  ];\r\n+\r\n   return (\r\n-    <div className=\"page-container\">\r\n-      <h1>Transport Planner</h1>\r\n-      <TransportPlanner onSearch={handleSearch} />\r\n+    <div className=\"transport-page p-4 max-w-4xl mx-auto\">\r\n+      <h1 className=\"text-2xl font-bold mb-6 text-center\">City Transport Services</h1>\r\n       \r\n-      {loading ? (\r\n-        <div className=\"text-center mt-2\">Loading routes...</div>\r\n-      ) : routes.length > 0 ? (\r\n-        <div className=\"routes-grid mt-2\">\r\n-          {routes.map(route => (\r\n-            <RouteCard key={route.id} route={route} />\r\n+      {/* Transport Planner Section */}\r\n+      <section className=\"mb-8\">\r\n+        <TransportPlanner onSearch={handleSearch} />\r\n+      </section>\r\n+\r\n+      {/* Routes Section */}\r\n+      <section className=\"mb-8\">\r\n+        <div className=\"flex justify-between items-center mb-4\">\r\n+          <h2 className=\"text-xl font-semibold\">Available Routes</h2>\r\n+          {routes.length > 0 && (\r\n+            <button \r\n+              onClick={() => setShowMap(true)}\r\n+              className=\"flex items-center gap-2 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition\"\r\n+            >\r\n+              <FaMapMarkedAlt /> View Route Map\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {loading ? (\r\n+          <div className=\"text-center py-8\">Loading routes...</div>\r\n+        ) : routes.length > 0 ? (\r\n+          <div className=\"grid gap-4\">\r\n+            {routes.map(route => (\r\n+              <RouteCard key={route.id} route={route} />\r\n+            ))}\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"bg-gray-100 p-6 rounded-lg text-center\">\r\n+            <p className=\"text-gray-600\">Enter locations to find transport options</p>\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+\r\n+      {/* Services Section */}\r\n+      <section>\r\n+        <h2 className=\"text-xl font-semibold mb-4\">Transport Services</h2>\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          {services.map(service => (\r\n+            <div key={service.id} className=\"border rounded-lg p-4 hover:shadow-md transition\">\r\n+              <div className=\"flex items-start gap-4\">\r\n+                <div className=\"p-2 bg-gray-100 rounded-full\">\r\n+                  {service.icon}\r\n+                </div>\r\n+                <div>\r\n+                  <h3 className=\"font-semibold\">{service.name}</h3>\r\n+                  <p className=\"text-gray-600 text-sm\">{service.description}</p>\r\n+                  <p className=\"text-green-600 font-medium mt-1\">{service.price}</p>\r\n+                  <ul className=\"mt-2 text-sm text-gray-500\">\r\n+                    {service.features.map((feature, i) => (\r\n+                      <li key={i} className=\"flex items-center gap-1\">\r\n+                        <span className=\"text-green-500\">‚úì</span> {feature}\r\n+                      </li>\r\n+                    ))}\r\n+                  </ul>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n           ))}\r\n         </div>\r\n-      ) : (\r\n-        <div className=\"card mt-2 text-center\">\r\n-          <p>Enter locations to find transport options</p>\r\n+      </section>\r\n+\r\n+      {/* Map Modal */}\r\n+      {showMap && (\r\n+        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n+          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl\">\r\n+            <div className=\"flex justify-between items-center mb-4\">\r\n+              <h3 className=\"text-lg font-semibold\">Route Map</h3>\r\n+              <button \r\n+                onClick={() => setShowMap(false)}\r\n+                className=\"text-gray-500 hover:text-gray-700\"\r\n+              >\r\n+                ‚úï\r\n+              </button>\r\n+            </div>\r\n+            <div className=\"h-96 bg-gray-200 rounded flex items-center justify-center\">\r\n+              <p className=\"text-gray-500\">[Map visualization would appear here]</p>\r\n+              {/* In a real app, you would embed a map component here */}\r\n+            </div>\r\n+            <div className=\"mt-4 flex justify-end\">\r\n+              <button \r\n+                onClick={() => setShowMap(false)}\r\n+                className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition\"\r\n+              >\r\n+                Close\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n         </div>\r\n       )}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1752173843588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,156 +1,223 @@\n-import { useState } from 'react';\r\n-import { FaBus, FaBicycle, FaCar, FaMapMarkedAlt, FaWrench } from 'react-icons/fa';\r\n+import { useState, useEffect } from 'react';\r\n+import { FaBicycle, FaCarCrash, FaMapMarkedAlt, FaTimes, FaCheck } from 'react-icons/fa';\r\n+import { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\n+import L from 'leaflet';\r\n+import 'leaflet/dist/leaflet.css';\r\n import TransportPlanner from '../components/TransportPlanner';\r\n import RouteCard from '../components/RouteCard';\r\n \r\n+// Fix leaflet marker icons\r\n+delete L.Icon.Default.prototype._getIconUrl;\r\n+L.Icon.Default.mergeOptions({\r\n+  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n+  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n+  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n+});\r\n+\r\n export default function Transport() {\r\n   const [routes, setRoutes] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n   const [showMap, setShowMap] = useState(false);\r\n+  const [selectedRoute, setSelectedRoute] = useState(null);\r\n \r\n+  // Sample coordinates for demo (San Francisco)\r\n+  const demoCoordinates = [\r\n+    [37.7749, -122.4194], // SF\r\n+    [37.3382, -121.8863], // San Jose\r\n+    [37.8044, -122.2712]  // Oakland\r\n+  ];\r\n+\r\n   const handleSearch = (origin, destination) => {\r\n     setLoading(true);\r\n-    // Simulate API call\r\n     setTimeout(() => {\r\n       setRoutes([\r\n         {\r\n           id: 1,\r\n-          name: 'Express Bus 42',\r\n+          name: 'Bay Express 42',\r\n           departure: '10:15 AM',\r\n           arrival: '10:40 AM',\r\n           duration: '25 min',\r\n           price: '$2.50',\r\n           type: 'bus',\r\n           stops: 5,\r\n-          features: ['Wheelchair accessible', 'Air conditioning']\r\n+          features: ['Wheelchair accessible', 'USB Charging'],\r\n+          coordinates: demoCoordinates\r\n         },\r\n         {\r\n           id: 2,\r\n-          name: 'City Bus 15',\r\n-          departure: '10:10 AM',\r\n-          arrival: '10:45 AM',\r\n-          duration: '35 min',\r\n-          price: '$2.00',\r\n-          type: 'bus',\r\n-          stops: 12,\r\n-          features: ['Free WiFi']\r\n+          name: 'Coastal Bike Route',\r\n+          departure: 'Now',\r\n+          arrival: 'Flexible',\r\n+          duration: '45 min',\r\n+          price: '$8.00',\r\n+          type: 'bike',\r\n+          stops: 0,\r\n+          features: ['Electric assist', 'Scenic route'],\r\n+          coordinates: [\r\n+            [37.7749, -122.4194],\r\n+            [37.8024, -122.4058],\r\n+            [37.8267, -122.4233]\r\n+          ]\r\n         }\r\n       ]);\r\n       setLoading(false);\r\n-    }, 1000);\r\n+    }, 800);\r\n   };\r\n \r\n-  // Local services data\r\n   const services = [\r\n     {\r\n       id: 1,\r\n-      name: 'Quick Bike Rentals',\r\n-      description: 'Electric and standard bicycles available',\r\n-      price: '$5/hour',\r\n-      icon: <FaBicycle className=\"text-green-500 text-2xl\" />,\r\n-      features: ['Helmet included', '24/7 support']\r\n+      name: 'Turbo Bike Rentals',\r\n+      description: 'Premium e-bikes with GPS navigation',\r\n+      price: '$8/hour or $35/day',\r\n+      icon: <FaBicycle className=\"text-emerald-500 text-3xl\" />,\r\n+      features: ['Free helmet', 'Phone mount', '24/7 support'],\r\n+      action: 'Rent Now'\r\n     },\r\n     {\r\n       id: 2,\r\n-      name: 'AutoCare Center',\r\n-      description: 'Emergency car repairs and maintenance',\r\n-      price: 'From $30',\r\n-      icon: <FaWrench className=\"text-blue-500 text-2xl\" />,\r\n-      features: ['Roadside assistance', 'Battery replacement']\r\n+      name: 'Emergency Auto Rescue',\r\n+      description: '24/7 roadside assistance',\r\n+      price: 'From $49',\r\n+      icon: <FaCarCrash className=\"text-red-500 text-3xl\" />,\r\n+      features: ['30-min response', 'Jump starts', 'Flat tire service'],\r\n+      action: 'Call Mechanic'\r\n     }\r\n   ];\r\n \r\n   return (\r\n-    <div className=\"transport-page p-4 max-w-4xl mx-auto\">\r\n-      <h1 className=\"text-2xl font-bold mb-6 text-center\">City Transport Services</h1>\r\n+    <div className=\"transport-page p-4 max-w-6xl mx-auto\">\r\n+      <h1 className=\"text-3xl font-bold mb-8 text-center bg-gradient-to-r from-blue-600 to-emerald-500 bg-clip-text text-transparent\">\r\n+        Urban Mobility Hub\r\n+      </h1>\r\n       \r\n-      {/* Transport Planner Section */}\r\n-      <section className=\"mb-8\">\r\n+      {/* Transport Planner */}\r\n+      <section className=\"mb-12 bg-white rounded-xl shadow-lg p-6\">\r\n         <TransportPlanner onSearch={handleSearch} />\r\n       </section>\r\n \r\n       {/* Routes Section */}\r\n-      <section className=\"mb-8\">\r\n-        <div className=\"flex justify-between items-center mb-4\">\r\n-          <h2 className=\"text-xl font-semibold\">Available Routes</h2>\r\n+      <section className=\"mb-12\">\r\n+        <div className=\"flex justify-between items-center mb-6\">\r\n+          <h2 className=\"text-2xl font-bold\">Available Routes</h2>\r\n           {routes.length > 0 && (\r\n             <button \r\n               onClick={() => setShowMap(true)}\r\n-              className=\"flex items-center gap-2 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition\"\r\n+              className=\"flex items-center gap-2 bg-gradient-to-r from-blue-500 to-emerald-400 text-white px-5 py-3 rounded-full hover:shadow-lg transition-all\"\r\n             >\r\n-              <FaMapMarkedAlt /> View Route Map\r\n+              <FaMapMarkedAlt className=\"text-lg\" /> Live Route Map\r\n             </button>\r\n           )}\r\n         </div>\r\n \r\n         {loading ? (\r\n-          <div className=\"text-center py-8\">Loading routes...</div>\r\n+          <div className=\"text-center py-12 space-y-4\">\r\n+            <div className=\"inline-block h-12 w-12 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\r\n+            <p className=\"text-gray-600\">Finding optimal routes...</p>\r\n+          </div>\r\n         ) : routes.length > 0 ? (\r\n-          <div className=\"grid gap-4\">\r\n+          <div className=\"grid gap-6\">\r\n             {routes.map(route => (\r\n-              <RouteCard key={route.id} route={route} />\r\n+              <RouteCard \r\n+                key={route.id} \r\n+                route={route} \r\n+                onSelect={() => {\r\n+                  setSelectedRoute(route);\r\n+                  setShowMap(true);\r\n+                }}\r\n+              />\r\n             ))}\r\n           </div>\r\n         ) : (\r\n-          <div className=\"bg-gray-100 p-6 rounded-lg text-center\">\r\n-            <p className=\"text-gray-600\">Enter locations to find transport options</p>\r\n+          <div className=\"bg-gradient-to-br from-blue-50 to-emerald-50 p-8 rounded-xl text-center border-2 border-dashed border-gray-200\">\r\n+            <p className=\"text-gray-600 text-lg\">Enter locations to discover transport options</p>\r\n           </div>\r\n         )}\r\n       </section>\r\n \r\n       {/* Services Section */}\r\n-      <section>\r\n-        <h2 className=\"text-xl font-semibold mb-4\">Transport Services</h2>\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+      <section className=\"mb-12\">\r\n+        <h2 className=\"text-2xl font-bold mb-6\">Premium Services</h2>\r\n+        <div className=\"grid md:grid-cols-2 gap-6\">\r\n           {services.map(service => (\r\n-            <div key={service.id} className=\"border rounded-lg p-4 hover:shadow-md transition\">\r\n-              <div className=\"flex items-start gap-4\">\r\n-                <div className=\"p-2 bg-gray-100 rounded-full\">\r\n+            <div key={service.id} className=\"bg-white rounded-xl shadow-md overflow-hidden hover:shadow-xl transition-all border border-gray-100\">\r\n+              <div className=\"p-6 flex items-start gap-5\">\r\n+                <div className=\"p-3 bg-gray-100 rounded-full\">\r\n                   {service.icon}\r\n                 </div>\r\n-                <div>\r\n-                  <h3 className=\"font-semibold\">{service.name}</h3>\r\n-                  <p className=\"text-gray-600 text-sm\">{service.description}</p>\r\n-                  <p className=\"text-green-600 font-medium mt-1\">{service.price}</p>\r\n-                  <ul className=\"mt-2 text-sm text-gray-500\">\r\n+                <div className=\"flex-1\">\r\n+                  <div className=\"flex justify-between items-start\">\r\n+                    <h3 className=\"font-bold text-xl\">{service.name}</h3>\r\n+                    <span className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\">\r\n+                      {service.price}\r\n+                    </span>\r\n+                  </div>\r\n+                  <p className=\"text-gray-600 mt-1\">{service.description}</p>\r\n+                  <ul className=\"mt-3 space-y-2\">\r\n                     {service.features.map((feature, i) => (\r\n-                      <li key={i} className=\"flex items-center gap-1\">\r\n-                        <span className=\"text-green-500\">‚úì</span> {feature}\r\n+                      <li key={i} className=\"flex items-center gap-2\">\r\n+                        <FaCheck className=\"text-emerald-500\" />\r\n+                        <span>{feature}</span>\r\n                       </li>\r\n                     ))}\r\n                   </ul>\r\n+                  <button className=\"mt-4 w-full bg-gradient-to-r from-blue-500 to-emerald-400 text-white py-2 px-4 rounded-lg hover:shadow-md transition\">\r\n+                    {service.action}\r\n+                  </button>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           ))}\r\n         </div>\r\n       </section>\r\n \r\n-      {/* Map Modal */}\r\n+      {/* Interactive Map Modal */}\r\n       {showMap && (\r\n-        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n-          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl\">\r\n-            <div className=\"flex justify-between items-center mb-4\">\r\n-              <h3 className=\"text-lg font-semibold\">Route Map</h3>\r\n+        <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center p-4 z-50 backdrop-blur-sm\">\r\n+          <div className=\"bg-white rounded-xl w-full max-w-5xl h-[80vh] flex flex-col\">\r\n+            <div className=\"flex justify-between items-center p-4 border-b\">\r\n+              <h3 className=\"text-xl font-bold\">\r\n+                {selectedRoute?.name || 'Route Map'}\r\n+              </h3>\r\n               <button \r\n                 onClick={() => setShowMap(false)}\r\n-                className=\"text-gray-500 hover:text-gray-700\"\r\n+                className=\"text-gray-500 hover:text-gray-700 p-2 rounded-full hover:bg-gray-100\"\r\n               >\r\n-                ‚úï\r\n+                <FaTimes />\r\n               </button>\r\n             </div>\r\n-            <div className=\"h-96 bg-gray-200 rounded flex items-center justify-center\">\r\n-              <p className=\"text-gray-500\">[Map visualization would appear here]</p>\r\n-              {/* In a real app, you would embed a map component here */}\r\n-            </div>\r\n-            <div className=\"mt-4 flex justify-end\">\r\n-              <button \r\n-                onClick={() => setShowMap(false)}\r\n-                className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition\"\r\n+            \r\n+            <div className=\"flex-1 relative\">\r\n+              <MapContainer \r\n+                center={selectedRoute?.coordinates?.[0] || [37.7749, -122.4194]} \r\n+                zoom={13} \r\n+                className=\"h-full w-full rounded-b-xl\"\r\n               >\r\n-                Close\r\n-              </button>\r\n+                <TileLayer\r\n+                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n+                  attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n+                />\r\n+                \r\n+                {selectedRoute?.coordinates && (\r\n+                  <>\r\n+                    <Polyline \r\n+                      positions={selectedRoute.coordinates} \r\n+                      color={selectedRoute.type === 'bike' ? '#10b981' : '#3b82f6'} \r\n+                      weight={5}\r\n+                    />\r\n+                    {selectedRoute.coordinates.map((coord, index) => (\r\n+                      <Marker key={index} position={coord}>\r\n+                        <Popup>\r\n+                          {index === 0 ? 'Departure' : \r\n+                           index === selectedRoute.coordinates.length - 1 ? 'Arrival' : \r\n+                           `Stop ${index}`}\r\n+                        </Popup>\r\n+                      </Marker>\r\n+                    ))}\r\n+                  </>\r\n+                )}\r\n+              </MapContainer>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1752174124533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,223 +1,156 @@\n-import { useState, useEffect } from 'react';\r\n-import { FaBicycle, FaCarCrash, FaMapMarkedAlt, FaTimes, FaCheck } from 'react-icons/fa';\r\n-import { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\n-import L from 'leaflet';\r\n-import 'leaflet/dist/leaflet.css';\r\n+import { useState } from 'react';\r\n+import { FaBus, FaBicycle, FaCar, FaMapMarkedAlt, FaWrench } from 'react-icons/fa';\r\n import TransportPlanner from '../components/TransportPlanner';\r\n import RouteCard from '../components/RouteCard';\r\n \r\n-// Fix leaflet marker icons\r\n-delete L.Icon.Default.prototype._getIconUrl;\r\n-L.Icon.Default.mergeOptions({\r\n-  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n-  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n-  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n-});\r\n-\r\n export default function Transport() {\r\n   const [routes, setRoutes] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n   const [showMap, setShowMap] = useState(false);\r\n-  const [selectedRoute, setSelectedRoute] = useState(null);\r\n \r\n-  // Sample coordinates for demo (San Francisco)\r\n-  const demoCoordinates = [\r\n-    [37.7749, -122.4194], // SF\r\n-    [37.3382, -121.8863], // San Jose\r\n-    [37.8044, -122.2712]  // Oakland\r\n-  ];\r\n-\r\n   const handleSearch = (origin, destination) => {\r\n     setLoading(true);\r\n+    // Simulate API call\r\n     setTimeout(() => {\r\n       setRoutes([\r\n         {\r\n           id: 1,\r\n-          name: 'Bay Express 42',\r\n+          name: 'Express Bus 42',\r\n           departure: '10:15 AM',\r\n           arrival: '10:40 AM',\r\n           duration: '25 min',\r\n           price: '$2.50',\r\n           type: 'bus',\r\n           stops: 5,\r\n-          features: ['Wheelchair accessible', 'USB Charging'],\r\n-          coordinates: demoCoordinates\r\n+          features: ['Wheelchair accessible', 'Air conditioning']\r\n         },\r\n         {\r\n           id: 2,\r\n-          name: 'Coastal Bike Route',\r\n-          departure: 'Now',\r\n-          arrival: 'Flexible',\r\n-          duration: '45 min',\r\n-          price: '$8.00',\r\n-          type: 'bike',\r\n-          stops: 0,\r\n-          features: ['Electric assist', 'Scenic route'],\r\n-          coordinates: [\r\n-            [37.7749, -122.4194],\r\n-            [37.8024, -122.4058],\r\n-            [37.8267, -122.4233]\r\n-          ]\r\n+          name: 'City Bus 15',\r\n+          departure: '10:10 AM',\r\n+          arrival: '10:45 AM',\r\n+          duration: '35 min',\r\n+          price: '$2.00',\r\n+          type: 'bus',\r\n+          stops: 12,\r\n+          features: ['Free WiFi']\r\n         }\r\n       ]);\r\n       setLoading(false);\r\n-    }, 800);\r\n+    }, 1000);\r\n   };\r\n \r\n+  // Local services data\r\n   const services = [\r\n     {\r\n       id: 1,\r\n-      name: 'Turbo Bike Rentals',\r\n-      description: 'Premium e-bikes with GPS navigation',\r\n-      price: '$8/hour or $35/day',\r\n-      icon: <FaBicycle className=\"text-emerald-500 text-3xl\" />,\r\n-      features: ['Free helmet', 'Phone mount', '24/7 support'],\r\n-      action: 'Rent Now'\r\n+      name: 'Quick Bike Rentals',\r\n+      description: 'Electric and standard bicycles available',\r\n+      price: '$5/hour',\r\n+      icon: <FaBicycle className=\"text-green-500 text-2xl\" />,\r\n+      features: ['Helmet included', '24/7 support']\r\n     },\r\n     {\r\n       id: 2,\r\n-      name: 'Emergency Auto Rescue',\r\n-      description: '24/7 roadside assistance',\r\n-      price: 'From $49',\r\n-      icon: <FaCarCrash className=\"text-red-500 text-3xl\" />,\r\n-      features: ['30-min response', 'Jump starts', 'Flat tire service'],\r\n-      action: 'Call Mechanic'\r\n+      name: 'AutoCare Center',\r\n+      description: 'Emergency car repairs and maintenance',\r\n+      price: 'From $30',\r\n+      icon: <FaWrench className=\"text-blue-500 text-2xl\" />,\r\n+      features: ['Roadside assistance', 'Battery replacement']\r\n     }\r\n   ];\r\n \r\n   return (\r\n-    <div className=\"transport-page p-4 max-w-6xl mx-auto\">\r\n-      <h1 className=\"text-3xl font-bold mb-8 text-center bg-gradient-to-r from-blue-600 to-emerald-500 bg-clip-text text-transparent\">\r\n-        Urban Mobility Hub\r\n-      </h1>\r\n+    <div className=\"transport-page p-4 max-w-4xl mx-auto\">\r\n+      <h1 className=\"text-2xl font-bold mb-6 text-center\">City Transport Services</h1>\r\n       \r\n-      {/* Transport Planner */}\r\n-      <section className=\"mb-12 bg-white rounded-xl shadow-lg p-6\">\r\n+      {/* Transport Planner Section */}\r\n+      <section className=\"mb-8\">\r\n         <TransportPlanner onSearch={handleSearch} />\r\n       </section>\r\n \r\n       {/* Routes Section */}\r\n-      <section className=\"mb-12\">\r\n-        <div className=\"flex justify-between items-center mb-6\">\r\n-          <h2 className=\"text-2xl font-bold\">Available Routes</h2>\r\n+      <section className=\"mb-8\">\r\n+        <div className=\"flex justify-between items-center mb-4\">\r\n+          <h2 className=\"text-xl font-semibold\">Available Routes</h2>\r\n           {routes.length > 0 && (\r\n             <button \r\n               onClick={() => setShowMap(true)}\r\n-              className=\"flex items-center gap-2 bg-gradient-to-r from-blue-500 to-emerald-400 text-white px-5 py-3 rounded-full hover:shadow-lg transition-all\"\r\n+              className=\"flex items-center gap-2 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition\"\r\n             >\r\n-              <FaMapMarkedAlt className=\"text-lg\" /> Live Route Map\r\n+              <FaMapMarkedAlt /> View Route Map\r\n             </button>\r\n           )}\r\n         </div>\r\n \r\n         {loading ? (\r\n-          <div className=\"text-center py-12 space-y-4\">\r\n-            <div className=\"inline-block h-12 w-12 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\r\n-            <p className=\"text-gray-600\">Finding optimal routes...</p>\r\n-          </div>\r\n+          <div className=\"text-center py-8\">Loading routes...</div>\r\n         ) : routes.length > 0 ? (\r\n-          <div className=\"grid gap-6\">\r\n+          <div className=\"grid gap-4\">\r\n             {routes.map(route => (\r\n-              <RouteCard \r\n-                key={route.id} \r\n-                route={route} \r\n-                onSelect={() => {\r\n-                  setSelectedRoute(route);\r\n-                  setShowMap(true);\r\n-                }}\r\n-              />\r\n+              <RouteCard key={route.id} route={route} />\r\n             ))}\r\n           </div>\r\n         ) : (\r\n-          <div className=\"bg-gradient-to-br from-blue-50 to-emerald-50 p-8 rounded-xl text-center border-2 border-dashed border-gray-200\">\r\n-            <p className=\"text-gray-600 text-lg\">Enter locations to discover transport options</p>\r\n+          <div className=\"bg-gray-100 p-6 rounded-lg text-center\">\r\n+            <p className=\"text-gray-600\">Enter locations to find transport options</p>\r\n           </div>\r\n         )}\r\n       </section>\r\n \r\n       {/* Services Section */}\r\n-      <section className=\"mb-12\">\r\n-        <h2 className=\"text-2xl font-bold mb-6\">Premium Services</h2>\r\n-        <div className=\"grid md:grid-cols-2 gap-6\">\r\n+      <section>\r\n+        <h2 className=\"text-xl font-semibold mb-4\">Transport Services</h2>\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n           {services.map(service => (\r\n-            <div key={service.id} className=\"bg-white rounded-xl shadow-md overflow-hidden hover:shadow-xl transition-all border border-gray-100\">\r\n-              <div className=\"p-6 flex items-start gap-5\">\r\n-                <div className=\"p-3 bg-gray-100 rounded-full\">\r\n+            <div key={service.id} className=\"border rounded-lg p-4 hover:shadow-md transition\">\r\n+              <div className=\"flex items-start gap-4\">\r\n+                <div className=\"p-2 bg-gray-100 rounded-full\">\r\n                   {service.icon}\r\n                 </div>\r\n-                <div className=\"flex-1\">\r\n-                  <div className=\"flex justify-between items-start\">\r\n-                    <h3 className=\"font-bold text-xl\">{service.name}</h3>\r\n-                    <span className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\">\r\n-                      {service.price}\r\n-                    </span>\r\n-                  </div>\r\n-                  <p className=\"text-gray-600 mt-1\">{service.description}</p>\r\n-                  <ul className=\"mt-3 space-y-2\">\r\n+                <div>\r\n+                  <h3 className=\"font-semibold\">{service.name}</h3>\r\n+                  <p className=\"text-gray-600 text-sm\">{service.description}</p>\r\n+                  <p className=\"text-green-600 font-medium mt-1\">{service.price}</p>\r\n+                  <ul className=\"mt-2 text-sm text-gray-500\">\r\n                     {service.features.map((feature, i) => (\r\n-                      <li key={i} className=\"flex items-center gap-2\">\r\n-                        <FaCheck className=\"text-emerald-500\" />\r\n-                        <span>{feature}</span>\r\n+                      <li key={i} className=\"flex items-center gap-1\">\r\n+                        <span className=\"text-green-500\">‚úì</span> {feature}\r\n                       </li>\r\n                     ))}\r\n                   </ul>\r\n-                  <button className=\"mt-4 w-full bg-gradient-to-r from-blue-500 to-emerald-400 text-white py-2 px-4 rounded-lg hover:shadow-md transition\">\r\n-                    {service.action}\r\n-                  </button>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           ))}\r\n         </div>\r\n       </section>\r\n \r\n-      {/* Interactive Map Modal */}\r\n+      {/* Map Modal */}\r\n       {showMap && (\r\n-        <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center p-4 z-50 backdrop-blur-sm\">\r\n-          <div className=\"bg-white rounded-xl w-full max-w-5xl h-[80vh] flex flex-col\">\r\n-            <div className=\"flex justify-between items-center p-4 border-b\">\r\n-              <h3 className=\"text-xl font-bold\">\r\n-                {selectedRoute?.name || 'Route Map'}\r\n-              </h3>\r\n+        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n+          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl\">\r\n+            <div className=\"flex justify-between items-center mb-4\">\r\n+              <h3 className=\"text-lg font-semibold\">Route Map</h3>\r\n               <button \r\n                 onClick={() => setShowMap(false)}\r\n-                className=\"text-gray-500 hover:text-gray-700 p-2 rounded-full hover:bg-gray-100\"\r\n+                className=\"text-gray-500 hover:text-gray-700\"\r\n               >\r\n-                <FaTimes />\r\n+                ‚úï\r\n               </button>\r\n             </div>\r\n-            \r\n-            <div className=\"flex-1 relative\">\r\n-              <MapContainer \r\n-                center={selectedRoute?.coordinates?.[0] || [37.7749, -122.4194]} \r\n-                zoom={13} \r\n-                className=\"h-full w-full rounded-b-xl\"\r\n+            <div className=\"h-96 bg-gray-200 rounded flex items-center justify-center\">\r\n+              <p className=\"text-gray-500\">[Map visualization would appear here]</p>\r\n+              {/* In a real app, you would embed a map component here */}\r\n+            </div>\r\n+            <div className=\"mt-4 flex justify-end\">\r\n+              <button \r\n+                onClick={() => setShowMap(false)}\r\n+                className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition\"\r\n               >\r\n-                <TileLayer\r\n-                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n-                  attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n-                />\r\n-                \r\n-                {selectedRoute?.coordinates && (\r\n-                  <>\r\n-                    <Polyline \r\n-                      positions={selectedRoute.coordinates} \r\n-                      color={selectedRoute.type === 'bike' ? '#10b981' : '#3b82f6'} \r\n-                      weight={5}\r\n-                    />\r\n-                    {selectedRoute.coordinates.map((coord, index) => (\r\n-                      <Marker key={index} position={coord}>\r\n-                        <Popup>\r\n-                          {index === 0 ? 'Departure' : \r\n-                           index === selectedRoute.coordinates.length - 1 ? 'Arrival' : \r\n-                           `Stop ${index}`}\r\n-                        </Popup>\r\n-                      </Marker>\r\n-                    ))}\r\n-                  </>\r\n-                )}\r\n-              </MapContainer>\r\n+                Close\r\n+              </button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1752174694501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,17 @@\n import { useState } from 'react';\r\n-import { FaBus, FaBicycle, FaCar, FaMapMarkedAlt, FaWrench } from 'react-icons/fa';\r\n+import { FaBicycle, FaCarAlt, FaTaxi, FaMotorcycle, FaMapMarkedAlt, FaTimes } from 'react-icons/fa';\r\n import TransportPlanner from '../components/TransportPlanner';\r\n import RouteCard from '../components/RouteCard';\r\n \r\n export default function Transport() {\r\n   const [routes, setRoutes] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n   const [showMap, setShowMap] = useState(false);\r\n+  const [selectedRoute, setSelectedRoute] = useState(null);\r\n \r\n   const handleSearch = (origin, destination) => {\r\n     setLoading(true);\r\n-    // Simulate API call\r\n     setTimeout(() => {\r\n       setRoutes([\r\n         {\r\n           id: 1,\r\n@@ -21,137 +21,195 @@\n           duration: '25 min',\r\n           price: '$2.50',\r\n           type: 'bus',\r\n           stops: 5,\r\n-          features: ['Wheelchair accessible', 'Air conditioning']\r\n+          features: ['Wheelchair accessible', 'Air conditioning'],\r\n+          coordinates: [[51.505, -0.09], [51.51, -0.1], [51.515, -0.1]] // Sample coordinates\r\n         },\r\n         {\r\n           id: 2,\r\n-          name: 'City Bus 15',\r\n-          departure: '10:10 AM',\r\n-          arrival: '10:45 AM',\r\n-          duration: '35 min',\r\n-          price: '$2.00',\r\n+          name: 'Downtown Loop',\r\n+          departure: 'Every 15 min',\r\n+          arrival: 'Flexible',\r\n+          duration: '40 min',\r\n+          price: '$3.00',\r\n           type: 'bus',\r\n-          stops: 12,\r\n-          features: ['Free WiFi']\r\n+          stops: 8,\r\n+          features: ['Free WiFi', 'USB Charging'],\r\n+          coordinates: [[51.505, -0.09], [51.5, -0.08], [51.495, -0.07]]\r\n         }\r\n       ]);\r\n       setLoading(false);\r\n     }, 1000);\r\n   };\r\n \r\n-  // Local services data\r\n   const services = [\r\n     {\r\n       id: 1,\r\n-      name: 'Quick Bike Rentals',\r\n-      description: 'Electric and standard bicycles available',\r\n+      name: 'City Bike Rentals',\r\n+      description: 'Electric and standard bicycles',\r\n       price: '$5/hour',\r\n-      icon: <FaBicycle className=\"text-green-500 text-2xl\" />,\r\n-      features: ['Helmet included', '24/7 support']\r\n+      icon: <FaBicycle className=\"text-green-600 text-3xl\" />,\r\n+      features: ['Helmet included', '24/7 support'],\r\n+      action: 'Rent Now'\r\n     },\r\n     {\r\n       id: 2,\r\n-      name: 'AutoCare Center',\r\n-      description: 'Emergency car repairs and maintenance',\r\n+      name: 'AutoCare Pro',\r\n+      description: 'Emergency car services',\r\n       price: 'From $30',\r\n-      icon: <FaWrench className=\"text-blue-500 text-2xl\" />,\r\n-      features: ['Roadside assistance', 'Battery replacement']\r\n+      icon: <FaCarAlt className=\"text-blue-600 text-3xl\" />,\r\n+      features: ['Roadside assistance', 'Battery jump'],\r\n+      action: 'Call Now'\r\n+    },\r\n+    {\r\n+      id: 3,\r\n+      name: 'Metro Taxis',\r\n+      description: 'On-demand rides',\r\n+      price: '$3 base + $2/mile',\r\n+      icon: <FaTaxi className=\"text-yellow-600 text-3xl\" />,\r\n+      features: ['Child seats', 'Cashless payment'],\r\n+      action: 'Book Ride'\r\n+    },\r\n+    {\r\n+      id: 4,\r\n+      name: 'Scooter Share',\r\n+      description: 'Electric scooters',\r\n+      price: '$1 unlock + $0.30/min',\r\n+      icon: <FaMotorcycle className=\"text-purple-600 text-3xl\" />,\r\n+      features: ['No parking fees', 'App-controlled'],\r\n+      action: 'Find Scooters'\r\n     }\r\n   ];\r\n \r\n   return (\r\n-    <div className=\"transport-page p-4 max-w-4xl mx-auto\">\r\n-      <h1 className=\"text-2xl font-bold mb-6 text-center\">City Transport Services</h1>\r\n-      \r\n-      {/* Transport Planner Section */}\r\n-      <section className=\"mb-8\">\r\n+    <div className=\"transport-page p-4 max-w-6xl mx-auto\">\r\n+      <h1 className=\"text-3xl font-bold mb-8 text-center text-gray-800\">\r\n+        Urban Transport Hub\r\n+      </h1>\r\n+\r\n+      {/* Transport Planner */}\r\n+      <section className=\"mb-12 bg-white rounded-xl shadow-md p-6\">\r\n         <TransportPlanner onSearch={handleSearch} />\r\n       </section>\r\n \r\n       {/* Routes Section */}\r\n-      <section className=\"mb-8\">\r\n-        <div className=\"flex justify-between items-center mb-4\">\r\n-          <h2 className=\"text-xl font-semibold\">Available Routes</h2>\r\n+      <section className=\"mb-12\">\r\n+        <div className=\"flex justify-between items-center mb-6\">\r\n+          <h2 className=\"text-2xl font-bold text-gray-700\">Available Routes</h2>\r\n           {routes.length > 0 && (\r\n             <button \r\n-              onClick={() => setShowMap(true)}\r\n-              className=\"flex items-center gap-2 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition\"\r\n+              onClick={() => {\r\n+                setSelectedRoute(routes[0]);\r\n+                setShowMap(true);\r\n+              }}\r\n+              className=\"flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-5 py-2 rounded-lg transition-colors\"\r\n             >\r\n-              <FaMapMarkedAlt /> View Route Map\r\n+              <FaMapMarkedAlt /> View Map\r\n             </button>\r\n           )}\r\n         </div>\r\n \r\n         {loading ? (\r\n-          <div className=\"text-center py-8\">Loading routes...</div>\r\n+          <div className=\"text-center py-12\">\r\n+            <div className=\"inline-block h-10 w-10 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\r\n+            <p className=\"mt-3 text-gray-600\">Finding best routes...</p>\r\n+          </div>\r\n         ) : routes.length > 0 ? (\r\n           <div className=\"grid gap-4\">\r\n             {routes.map(route => (\r\n-              <RouteCard key={route.id} route={route} />\r\n+              <RouteCard \r\n+                key={route.id} \r\n+                route={route}\r\n+                onClick={() => {\r\n+                  setSelectedRoute(route);\r\n+                  setShowMap(true);\r\n+                }}\r\n+              />\r\n             ))}\r\n           </div>\r\n         ) : (\r\n-          <div className=\"bg-gray-100 p-6 rounded-lg text-center\">\r\n+          <div className=\"bg-gray-50 p-8 rounded-xl text-center border-2 border-dashed border-gray-200\">\r\n             <p className=\"text-gray-600\">Enter locations to find transport options</p>\r\n           </div>\r\n         )}\r\n       </section>\r\n \r\n       {/* Services Section */}\r\n-      <section>\r\n-        <h2 className=\"text-xl font-semibold mb-4\">Transport Services</h2>\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+      <section className=\"mb-12\">\r\n+        <h2 className=\"text-2xl font-bold mb-6 text-gray-700 border-b pb-2\">\r\n+          Transport Services\r\n+        </h2>\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n           {services.map(service => (\r\n-            <div key={service.id} className=\"border rounded-lg p-4 hover:shadow-md transition\">\r\n-              <div className=\"flex items-start gap-4\">\r\n-                <div className=\"p-2 bg-gray-100 rounded-full\">\r\n-                  {service.icon}\r\n+            <div \r\n+              key={service.id} \r\n+              className=\"bg-white rounded-xl overflow-hidden shadow-sm hover:shadow-md transition-all border border-gray-100\"\r\n+            >\r\n+              <div className=\"p-5\">\r\n+                <div className=\"flex justify-center mb-4\">\r\n+                  <div className=\"p-3 bg-gray-100 rounded-full\">\r\n+                    {service.icon}\r\n+                  </div>\r\n                 </div>\r\n-                <div>\r\n-                  <h3 className=\"font-semibold\">{service.name}</h3>\r\n-                  <p className=\"text-gray-600 text-sm\">{service.description}</p>\r\n-                  <p className=\"text-green-600 font-medium mt-1\">{service.price}</p>\r\n-                  <ul className=\"mt-2 text-sm text-gray-500\">\r\n-                    {service.features.map((feature, i) => (\r\n-                      <li key={i} className=\"flex items-center gap-1\">\r\n-                        <span className=\"text-green-500\">‚úì</span> {feature}\r\n-                      </li>\r\n-                    ))}\r\n-                  </ul>\r\n+                <h3 className=\"text-xl font-semibold mb-2 text-center text-gray-800\">{service.name}</h3>\r\n+                <p className=\"text-gray-600 text-center mb-4\">{service.description}</p>\r\n+                \r\n+                <div className=\"text-center mb-4\">\r\n+                  <span className=\"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\">\r\n+                    {service.price}\r\n+                  </span>\r\n                 </div>\r\n+                \r\n+                <ul className=\"space-y-2 mb-5\">\r\n+                  {service.features.map((feature, i) => (\r\n+                    <li key={i} className=\"flex items-start text-gray-600\">\r\n+                      <span className=\"text-green-500 mr-2\">‚úì</span>\r\n+                      <span>{feature}</span>\r\n+                    </li>\r\n+                  ))}\r\n+                </ul>\r\n+                \r\n+                <button className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg transition-colors\">\r\n+                  {service.action}\r\n+                </button>\r\n               </div>\r\n             </div>\r\n           ))}\r\n         </div>\r\n       </section>\r\n \r\n       {/* Map Modal */}\r\n       {showMap && (\r\n-        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n-          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl\">\r\n-            <div className=\"flex justify-between items-center mb-4\">\r\n-              <h3 className=\"text-lg font-semibold\">Route Map</h3>\r\n+        <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center p-4 z-50\">\r\n+          <div className=\"bg-white rounded-xl w-full max-w-4xl h-[80vh] flex flex-col\">\r\n+            <div className=\"flex justify-between items-center p-4 border-b\">\r\n+              <h3 className=\"text-xl font-bold\">\r\n+                {selectedRoute?.name || 'Route Map'}\r\n+              </h3>\r\n               <button \r\n                 onClick={() => setShowMap(false)}\r\n-                className=\"text-gray-500 hover:text-gray-700\"\r\n+                className=\"text-gray-500 hover:text-gray-700 p-2 rounded-full hover:bg-gray-100\"\r\n               >\r\n-                ‚úï\r\n+                <FaTimes />\r\n               </button>\r\n             </div>\r\n-            <div className=\"h-96 bg-gray-200 rounded flex items-center justify-center\">\r\n-              <p className=\"text-gray-500\">[Map visualization would appear here]</p>\r\n-              {/* In a real app, you would embed a map component here */}\r\n+            \r\n+            <div className=\"flex-1 bg-gray-200 rounded-b-xl flex items-center justify-center\">\r\n+              <div className=\"text-center p-6\">\r\n+                <FaMapMarkedAlt className=\"mx-auto text-5xl text-gray-400 mb-4\" />\r\n+                <h4 className=\"text-xl font-semibold mb-2\">Map View</h4>\r\n+                <p className=\"text-gray-600 mb-4\">\r\n+                  {selectedRoute \r\n+                    ? `Showing route from ${selectedRoute.departure} to ${selectedRoute.arrival}`\r\n+                    : 'Route visualization'\r\n+                  }\r\n+                </p>\r\n+                <p className=\"text-sm text-gray-500\">\r\n+                  (In a real implementation, this would show an interactive map with the route)\r\n+                </p>\r\n+              </div>\r\n             </div>\r\n-            <div className=\"mt-4 flex justify-end\">\r\n-              <button \r\n-                onClick={() => setShowMap(false)}\r\n-                className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition\"\r\n-              >\r\n-                Close\r\n-              </button>\r\n-            </div>\r\n           </div>\r\n         </div>\r\n       )}\r\n     </div>\r\n"
                },
                {
                    "date": 1752176180941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n           price: '$2.50',\r\n           type: 'bus',\r\n           stops: 5,\r\n           features: ['Wheelchair accessible', 'Air conditioning'],\r\n-          coordinates: [[51.505, -0.09], [51.51, -0.1], [51.515, -0.1]] // Sample coordinates\r\n+          coordinates: [[51.505, -0.09], [51.51, -0.1], [51.515, -0.1]]\r\n         },\r\n         {\r\n           id: 2,\r\n           name: 'Downtown Loop',\r\n@@ -81,9 +81,9 @@\n     }\r\n   ];\r\n \r\n   return (\r\n-    <div className=\"transport-page p-4 max-w-6xl mx-auto\">\r\n+    <div className=\"p-4 max-w-6xl mx-auto\">\r\n       <h1 className=\"text-3xl font-bold mb-8 text-center text-gray-800\">\r\n         Urban Transport Hub\r\n       </h1>\r\n \r\n"
                },
                {
                    "date": 1752176464105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { useState } from 'react';\r\n-import { FaBicycle, FaCarAlt, FaTaxi, FaMotorcycle, FaMapMarkedAlt, FaTimes } from 'react-icons/fa';\r\n+import { FaBicycle, FaCarAlt, FaTaxi, FaMotorcycle, FaMapMarkedAlt, FaTimes, FaCheck } from 'react-icons/fa';\r\n import TransportPlanner from '../components/TransportPlanner';\r\n import RouteCard from '../components/RouteCard';\r\n \r\n export default function Transport() {\r\n@@ -45,39 +45,39 @@\n   const services = [\r\n     {\r\n       id: 1,\r\n       name: 'City Bike Rentals',\r\n-      description: 'Electric and standard bicycles',\r\n+      description: 'Electric and standard bicycles available throughout the city',\r\n       price: '$5/hour',\r\n-      icon: <FaBicycle className=\"text-green-600 text-3xl\" />,\r\n-      features: ['Helmet included', '24/7 support'],\r\n+      icon: <FaBicycle className=\"text-green-500\" />,\r\n+      features: ['Helmet included', '24/7 support', 'Free phone mount'],\r\n       action: 'Rent Now'\r\n     },\r\n     {\r\n       id: 2,\r\n       name: 'AutoCare Pro',\r\n-      description: 'Emergency car services',\r\n+      description: '24/7 emergency vehicle services and maintenance',\r\n       price: 'From $30',\r\n-      icon: <FaCarAlt className=\"text-blue-600 text-3xl\" />,\r\n-      features: ['Roadside assistance', 'Battery jump'],\r\n+      icon: <FaCarAlt className=\"text-blue-500\" />,\r\n+      features: ['Roadside assistance', 'Battery jump', '30-min response'],\r\n       action: 'Call Now'\r\n     },\r\n     {\r\n       id: 3,\r\n       name: 'Metro Taxis',\r\n-      description: 'On-demand rides',\r\n+      description: 'On-demand rides with professional drivers',\r\n       price: '$3 base + $2/mile',\r\n-      icon: <FaTaxi className=\"text-yellow-600 text-3xl\" />,\r\n-      features: ['Child seats', 'Cashless payment'],\r\n+      icon: <FaTaxi className=\"text-yellow-500\" />,\r\n+      features: ['Child seats available', 'Cashless payment', 'VIP options'],\r\n       action: 'Book Ride'\r\n     },\r\n     {\r\n       id: 4,\r\n       name: 'Scooter Share',\r\n-      description: 'Electric scooters',\r\n+      description: 'Electric scooters with app-controlled unlocking',\r\n       price: '$1 unlock + $0.30/min',\r\n-      icon: <FaMotorcycle className=\"text-purple-600 text-3xl\" />,\r\n-      features: ['No parking fees', 'App-controlled'],\r\n+      icon: <FaMotorcycle className=\"text-purple-500\" />,\r\n+      features: ['No parking fees', 'Helmet optional', 'Geo-fenced areas'],\r\n       action: 'Find Scooters'\r\n     }\r\n   ];\r\n \r\n@@ -87,32 +87,32 @@\n         Urban Transport Hub\r\n       </h1>\r\n \r\n       {/* Transport Planner */}\r\n-      <section className=\"mb-12 bg-white rounded-xl shadow-md p-6\">\r\n+      <section className=\"mb-12 bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\r\n         <TransportPlanner onSearch={handleSearch} />\r\n       </section>\r\n \r\n       {/* Routes Section */}\r\n       <section className=\"mb-12\">\r\n         <div className=\"flex justify-between items-center mb-6\">\r\n-          <h2 className=\"text-2xl font-bold text-gray-700\">Available Routes</h2>\r\n+          <h2 className=\"text-2xl font-bold text-gray-800\">Available Routes</h2>\r\n           {routes.length > 0 && (\r\n             <button \r\n               onClick={() => {\r\n                 setSelectedRoute(routes[0]);\r\n                 setShowMap(true);\r\n               }}\r\n-              className=\"flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-5 py-2 rounded-lg transition-colors\"\r\n+              className=\"flex items-center gap-2 bg-emerald-500 hover:bg-emerald-600 text-white px-5 py-2 rounded-lg transition-colors shadow-md\"\r\n             >\r\n-              <FaMapMarkedAlt /> View Map\r\n+              <FaMapMarkedAlt /> View Route Map\r\n             </button>\r\n           )}\r\n         </div>\r\n \r\n         {loading ? (\r\n           <div className=\"text-center py-12\">\r\n-            <div className=\"inline-block h-10 w-10 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\r\n+            <div className=\"inline-block h-10 w-10 border-4 border-emerald-500 border-t-transparent rounded-full animate-spin\"></div>\r\n             <p className=\"mt-3 text-gray-600\">Finding best routes...</p>\r\n           </div>\r\n         ) : routes.length > 0 ? (\r\n           <div className=\"grid gap-4\">\r\n@@ -127,50 +127,50 @@\n               />\r\n             ))}\r\n           </div>\r\n         ) : (\r\n-          <div className=\"bg-gray-50 p-8 rounded-xl text-center border-2 border-dashed border-gray-200\">\r\n-            <p className=\"text-gray-600\">Enter locations to find transport options</p>\r\n+          <div className=\"bg-emerald-50 p-8 rounded-xl text-center border-2 border-dashed border-emerald-200\">\r\n+            <p className=\"text-gray-700\">Enter locations to find transport options</p>\r\n           </div>\r\n         )}\r\n       </section>\r\n \r\n-      {/* Services Section */}\r\n+      {/* Services Section - Now with proper styling */}\r\n       <section className=\"mb-12\">\r\n-        <h2 className=\"text-2xl font-bold mb-6 text-gray-700 border-b pb-2\">\r\n+        <h2 className=\"text-2xl font-bold mb-6 text-gray-800 border-b-2 border-emerald-200 pb-2\">\r\n           Transport Services\r\n         </h2>\r\n         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n           {services.map(service => (\r\n             <div \r\n               key={service.id} \r\n-              className=\"bg-white rounded-xl overflow-hidden shadow-sm hover:shadow-md transition-all border border-gray-100\"\r\n+              className=\"bg-white rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-all duration-300 border border-gray-100 hover:border-emerald-200\"\r\n             >\r\n-              <div className=\"p-5\">\r\n+              <div className=\"p-5 h-full flex flex-col\">\r\n                 <div className=\"flex justify-center mb-4\">\r\n-                  <div className=\"p-3 bg-gray-100 rounded-full\">\r\n+                  <div className=\"p-4 bg-emerald-50 rounded-full\">\r\n                     {service.icon}\r\n                   </div>\r\n                 </div>\r\n-                <h3 className=\"text-xl font-semibold mb-2 text-center text-gray-800\">{service.name}</h3>\r\n-                <p className=\"text-gray-600 text-center mb-4\">{service.description}</p>\r\n+                <h3 className=\"text-xl font-bold mb-2 text-center text-gray-800\">{service.name}</h3>\r\n+                <p className=\"text-gray-600 text-center mb-4 text-sm\">{service.description}</p>\r\n                 \r\n                 <div className=\"text-center mb-4\">\r\n-                  <span className=\"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\">\r\n+                  <span className=\"inline-block bg-emerald-100 text-emerald-800 px-3 py-1 rounded-full text-sm font-semibold\">\r\n                     {service.price}\r\n                   </span>\r\n                 </div>\r\n                 \r\n-                <ul className=\"space-y-2 mb-5\">\r\n+                <ul className=\"space-y-2 mb-5 flex-grow\">\r\n                   {service.features.map((feature, i) => (\r\n-                    <li key={i} className=\"flex items-start text-gray-600\">\r\n-                      <span className=\"text-green-500 mr-2\">‚úì</span>\r\n-                      <span>{feature}</span>\r\n+                    <li key={i} className=\"flex items-start text-gray-700\">\r\n+                      <FaCheck className=\"text-emerald-500 mt-1 mr-2 flex-shrink-0\" />\r\n+                      <span className=\"text-sm\">{feature}</span>\r\n                     </li>\r\n                   ))}\r\n                 </ul>\r\n                 \r\n-                <button className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg transition-colors\">\r\n+                <button className=\"w-full bg-emerald-500 hover:bg-emerald-600 text-white py-2 px-4 rounded-lg transition-colors font-semibold shadow-sm\">\r\n                   {service.action}\r\n                 </button>\r\n               </div>\r\n             </div>\r\n@@ -179,34 +179,34 @@\n       </section>\r\n \r\n       {/* Map Modal */}\r\n       {showMap && (\r\n-        <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center p-4 z-50\">\r\n-          <div className=\"bg-white rounded-xl w-full max-w-4xl h-[80vh] flex flex-col\">\r\n-            <div className=\"flex justify-between items-center p-4 border-b\">\r\n-              <h3 className=\"text-xl font-bold\">\r\n+        <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center p-4 z-50 backdrop-blur-sm\">\r\n+          <div className=\"bg-white rounded-xl w-full max-w-4xl h-[80vh] flex flex-col shadow-2xl\">\r\n+            <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\r\n+              <h3 className=\"text-xl font-bold text-gray-800\">\r\n                 {selectedRoute?.name || 'Route Map'}\r\n               </h3>\r\n               <button \r\n                 onClick={() => setShowMap(false)}\r\n-                className=\"text-gray-500 hover:text-gray-700 p-2 rounded-full hover:bg-gray-100\"\r\n+                className=\"text-gray-500 hover:text-gray-700 p-2 rounded-full hover:bg-gray-100 transition-colors\"\r\n               >\r\n-                <FaTimes />\r\n+                <FaTimes className=\"text-lg\" />\r\n               </button>\r\n             </div>\r\n             \r\n-            <div className=\"flex-1 bg-gray-200 rounded-b-xl flex items-center justify-center\">\r\n+            <div className=\"flex-1 bg-gray-100 rounded-b-xl flex items-center justify-center\">\r\n               <div className=\"text-center p-6\">\r\n-                <FaMapMarkedAlt className=\"mx-auto text-5xl text-gray-400 mb-4\" />\r\n-                <h4 className=\"text-xl font-semibold mb-2\">Map View</h4>\r\n+                <FaMapMarkedAlt className=\"mx-auto text-5xl text-emerald-500 mb-4\" />\r\n+                <h4 className=\"text-xl font-semibold mb-2 text-gray-800\">Map View</h4>\r\n                 <p className=\"text-gray-600 mb-4\">\r\n                   {selectedRoute \r\n                     ? `Showing route from ${selectedRoute.departure} to ${selectedRoute.arrival}`\r\n                     : 'Route visualization'\r\n                   }\r\n                 </p>\r\n                 <p className=\"text-sm text-gray-500\">\r\n-                  (In a real implementation, this would show an interactive map with the route)\r\n+                  Interactive map would display here with route visualization\r\n                 </p>\r\n               </div>\r\n             </div>\r\n           </div>\r\n"
                },
                {
                    "date": 1752176677079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,134 @@\n+import { useState } from 'react';\r\n+import { FaMapMarkedAlt, FaTimes } from 'react-icons/fa';\r\n+import TransportPlanner from '../components/TransportPlanner';\r\n+import RouteCard from '../components/RouteCard';\r\n+\r\n+export default function Transport() {\r\n+  const [routes, setRoutes] = useState([]);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [showMap, setShowMap] = useState(false);\r\n+  const [selectedRoute, setSelectedRoute] = useState(null);\r\n+\r\n+  const handleSearch = (origin, destination) => {\r\n+    setLoading(true);\r\n+    setTimeout(() => {\r\n+      setRoutes([\r\n+        {\r\n+          id: 1,\r\n+          name: 'Express Bus 42',\r\n+          departure: '10:15 AM',\r\n+          arrival: '10:40 AM',\r\n+          duration: '25 min',\r\n+          price: '$2.50',\r\n+          type: 'bus',\r\n+          stops: 5,\r\n+          features: ['Wheelchair accessible', 'Air conditioning'],\r\n+          coordinates: [[51.505, -0.09], [51.51, -0.1], [51.515, -0.1]]\r\n+        },\r\n+        {\r\n+          id: 2,\r\n+          name: 'Downtown Loop',\r\n+          departure: 'Every 15 min',\r\n+          arrival: 'Flexible',\r\n+          duration: '40 min',\r\n+          price: '$3.00',\r\n+          type: 'bus',\r\n+          stops: 8,\r\n+          features: ['Free WiFi', 'USB Charging'],\r\n+          coordinates: [[51.505, -0.09], [51.5, -0.08], [51.495, -0.07]]\r\n+        }\r\n+      ]);\r\n+      setLoading(false);\r\n+    }, 1000);\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"p-4 max-w-6xl mx-auto\">\r\n+      <h1 className=\"text-3xl font-bold mb-8 text-center text-gray-800\">\r\n+        Urban Transport Hub\r\n+      </h1>\r\n+\r\n+      {/* Transport Planner */}\r\n+      <section className=\"mb-12 bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\r\n+        <TransportPlanner onSearch={handleSearch} />\r\n+      </section>\r\n+\r\n+      {/* Routes Section */}\r\n+      <section className=\"mb-12\">\r\n+        <div className=\"flex justify-between items-center mb-6\">\r\n+          <h2 className=\"text-2xl font-bold text-gray-800\">Available Routes</h2>\r\n+          {routes.length > 0 && (\r\n+            <button \r\n+              onClick={() => {\r\n+                setSelectedRoute(routes[0]);\r\n+                setShowMap(true);\r\n+              }}\r\n+              className=\"flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-5 py-2 rounded-lg transition-colors shadow-md\"\r\n+            >\r\n+              <FaMapMarkedAlt /> View Route Map\r\n+            </button>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {loading ? (\r\n+          <div className=\"text-center py-12\">\r\n+            <div className=\"inline-block h-10 w-10 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\r\n+            <p className=\"mt-3 text-gray-600\">Finding best routes...</p>\r\n+          </div>\r\n+        ) : routes.length > 0 ? (\r\n+          <div className=\"grid gap-4\">\r\n+            {routes.map(route => (\r\n+              <RouteCard \r\n+                key={route.id} \r\n+                route={route}\r\n+                onClick={() => {\r\n+                  setSelectedRoute(route);\r\n+                  setShowMap(true);\r\n+                }}\r\n+              />\r\n+            ))}\r\n+          </div>\r\n+        ) : (\r\n+          <div className=\"bg-blue-50 p-8 rounded-xl text-center border-2 border-dashed border-blue-200\">\r\n+            <p className=\"text-gray-700\">Enter locations to find transport options</p>\r\n+          </div>\r\n+        )}\r\n+      </section>\r\n+\r\n+      {/* Map Modal */}\r\n+      {showMap && (\r\n+        <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center p-4 z-50 backdrop-blur-sm\">\r\n+          <div className=\"bg-white rounded-xl w-full max-w-4xl h-[80vh] flex flex-col shadow-2xl\">\r\n+            <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\r\n+              <h3 className=\"text-xl font-bold text-gray-800\">\r\n+                {selectedRoute?.name || 'Route Map'}\r\n+              </h3>\r\n+              <button \r\n+                onClick={() => setShowMap(false)}\r\n+                className=\"text-gray-500 hover:text-gray-700 p-2 rounded-full hover:bg-gray-100 transition-colors\"\r\n+              >\r\n+                <FaTimes className=\"text-lg\" />\r\n+              </button>\r\n+            </div>\r\n+            \r\n+            <div className=\"flex-1 bg-gray-100 rounded-b-xl flex items-center justify-center\">\r\n+              <div className=\"text-center p-6\">\r\n+                <FaMapMarkedAlt className=\"mx-auto text-5xl text-blue-500 mb-4\" />\r\n+                <h4 className=\"text-xl font-semibold mb-2 text-gray-800\">Map View</h4>\r\n+                <p className=\"text-gray-600 mb-4\">\r\n+                  {selectedRoute \r\n+                    ? `Showing route from ${selectedRoute.departure} to ${selectedRoute.arrival}`\r\n+                    : 'Route visualization'\r\n+                  }\r\n+                </p>\r\n+                <p className=\"text-sm text-gray-500\">\r\n+                  Interactive map would display here with route visualization\r\n+                </p>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752177450837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,149 +1,290 @@\n import { useState } from 'react';\r\n-import { FaMapMarkedAlt, FaTimes } from 'react-icons/fa';\r\n-import TransportPlanner from '../components/TransportPlanner';\r\n-import RouteCard from '../components/RouteCard';\r\n \r\n-export default function Transport() {\r\n-  const [routes, setRoutes] = useState([]);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [showMap, setShowMap] = useState(false);\r\n-  const [selectedRoute, setSelectedRoute] = useState(null);\r\n+// Mock TransportPlanner component\r\n+function TransportPlanner({ onSearch }) {\r\n+  const [origin, setOrigin] = useState('');\r\n+  const [destination, setDestination] = useState('');\r\n \r\n-  const handleSearch = (origin, destination) => {\r\n-    setLoading(true);\r\n-    setTimeout(() => {\r\n-      setRoutes([\r\n-        {\r\n-          id: 1,\r\n-          name: 'Express Bus 42',\r\n-          departure: '10:15 AM',\r\n-          arrival: '10:40 AM',\r\n-          duration: '25 min',\r\n-          price: '$2.50',\r\n-          type: 'bus',\r\n-          stops: 5,\r\n-          features: ['Wheelchair accessible', 'Air conditioning'],\r\n-          coordinates: [[51.505, -0.09], [51.51, -0.1], [51.515, -0.1]]\r\n-        },\r\n-        {\r\n-          id: 2,\r\n-          name: 'Downtown Loop',\r\n-          departure: 'Every 15 min',\r\n-          arrival: 'Flexible',\r\n-          duration: '40 min',\r\n-          price: '$3.00',\r\n-          type: 'bus',\r\n-          stops: 8,\r\n-          features: ['Free WiFi', 'USB Charging'],\r\n-          coordinates: [[51.505, -0.09], [51.5, -0.08], [51.495, -0.07]]\r\n-        }\r\n-      ]);\r\n-      setLoading(false);\r\n-    }, 1000);\r\n+  const handleSubmit = () => {\r\n+    if (origin && destination) {\r\n+      onSearch(origin, destination);\r\n+    }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"p-4 max-w-6xl mx-auto\">\r\n-      <h1 className=\"text-3xl font-bold mb-8 text-center text-gray-800\">\r\n-        Urban Transport Hub\r\n-      </h1>\r\n+    <div>\r\n+      <h2 className=\"text-2xl font-bold mb-6 text-gray-800\">Plan Your Journey</h2>\r\n+      <div className=\"space-y-4\">\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"block text-sm font-medium text-gray-700 mb-2\">From</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              value={origin}\r\n+              onChange={(e) => setOrigin(e.target.value)}\r\n+              placeholder=\"Enter starting location\"\r\n+              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n+            />\r\n+          </div>\r\n+          <div>\r\n+            <label className=\"block text-sm font-medium text-gray-700 mb-2\">To</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              value={destination}\r\n+              onChange={(e) => setDestination(e.target.value)}\r\n+              placeholder=\"Enter destination\"\r\n+              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n+            />\r\n+          </div>\r\n+        </div>\r\n+        <button\r\n+          onClick={handleSubmit}\r\n+          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition-colors shadow-md\"\r\n+        >\r\n+          Search Routes\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n \r\n-      {/* Transport Planner */}\r\n-      <section className=\"mb-12 bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\r\n-        <TransportPlanner onSearch={handleSearch} />\r\n-      </section>\r\n+// Mock RouteCard component\r\n+function RouteCard({ route, onClick }) {\r\n+  return (\r\n+    <div \r\n+      onClick={onClick}\r\n+      className=\"bg-white rounded-xl shadow-md hover:shadow-lg transition-shadow p-6 border border-gray-100 cursor-pointer hover:border-blue-200\"\r\n+    >\r\n+      <div className=\"flex justify-between items-start mb-4\">\r\n+        <div>\r\n+          <h3 className=\"text-lg font-semibold text-gray-800\">{route.name}</h3>\r\n+          <p className=\"text-sm text-gray-600 mt-1\">{route.type} ‚Ä¢ {route.stops} stops</p>\r\n+        </div>\r\n+        <div className=\"text-right\">\r\n+          <p className=\"text-2xl font-bold text-blue-600\">{route.price}</p>\r\n+          <p className=\"text-sm text-gray-500\">{route.duration}</p>\r\n+        </div>\r\n+      </div>\r\n+      \r\n+      <div className=\"flex justify-between items-center mb-3\">\r\n+        <div>\r\n+          <p className=\"text-sm text-gray-600\">Departure</p>\r\n+          <p className=\"font-medium\">{route.departure}</p>\r\n+        </div>\r\n+        <div>\r\n+          <p className=\"text-sm text-gray-600\">Arrival</p>\r\n+          <p className=\"font-medium\">{route.arrival}</p>\r\n+        </div>\r\n+      </div>\r\n+      \r\n+      <div className=\"flex flex-wrap gap-2\">\r\n+        {route.features.map((feature, index) => (\r\n+          <span key={index} className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\">\r\n+            {feature}\r\n+          </span>\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n \r\n-      {/* Routes Section */}\r\n-      <section className=\"mb-12\">\r\n-        <div className=\"flex justify-between items-center mb-6\">\r\n-          <h2 className=\"text-2xl font-bold text-gray-800\">Available Routes</h2>\r\n-          {routes.length > 0 && (\r\n-            <button \r\n-              onClick={() => {\r\n-                setSelectedRoute(routes[0]);\r\n-                setShowMap(true);\r\n-              }}\r\n-              className=\"flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-5 py-2 rounded-lg transition-colors shadow-md\"\r\n-            >\r\n-              <FaMapMarkedAlt /> View Route Map\r\n-            </button>\r\n-          )}\r\n+// Service Card Component\r\n+function ServiceCard({ service, onMapClick }) {\r\n+  const getIcon = (type) => {\r\n+    switch(type) {\r\n+      case 'bike': return <span className=\"text-2xl\">üö≤</span>;\r\n+      case 'taxi': return <span className=\"text-2xl\">üöï</span>;\r\n+      case 'health': return <span className=\"text-2xl\">üè•</span>;\r\n+      case 'school': return <span className=\"text-2xl\">üè´</span>;\r\n+      default: return <span className=\"text-2xl\">üìç</span>;\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"bg-white rounded-xl shadow-md hover:shadow-lg transition-all duration-300 p-6 border border-gray-100 hover:border-blue-200\">\r\n+      <div className=\"flex items-start justify-between mb-4\">\r\n+        <div className=\"flex items-center gap-3\">\r\n+          {getIcon(service.type)}\r\n+          <div>\r\n+            <h3 className=\"text-lg font-semibold text-gray-800\">{service.name}</h3>\r\n+            <p className=\"text-sm text-gray-600\">{service.category}</p>\r\n+          </div>\r\n         </div>\r\n+        <button\r\n+          onClick={() => onMapClick(service)}\r\n+          className=\"text-blue-600 hover:text-blue-800 p-2 rounded-full hover:bg-blue-50 transition-colors text-lg\"\r\n+        >\r\n+          üìç\r\n+        </button>\r\n+      </div>\r\n \r\n-        {loading ? (\r\n-          <div className=\"text-center py-12\">\r\n-            <div className=\"inline-block h-10 w-10 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\r\n-            <p className=\"mt-3 text-gray-600\">Finding best routes...</p>\r\n+      <div className=\"space-y-2 mb-4\">\r\n+        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n+          <span className=\"text-xs\">üïí</span>\r\n+          <span>{service.hours}</span>\r\n+        </div>\r\n+        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n+          <span className=\"text-xs\">üìû</span>\r\n+          <span>{service.phone}</span>\r\n+        </div>\r\n+        {service.rating && (\r\n+          <div className=\"flex items-center gap-2 text-sm\">\r\n+            <span className=\"text-yellow-500 text-xs\">‚≠ê</span>\r\n+            <span className=\"text-gray-600\">{service.rating}/5 ({service.reviews} reviews)</span>\r\n           </div>\r\n-        ) : routes.length > 0 ? (\r\n-          <div className=\"grid gap-4\">\r\n-            {routes.map(route => (\r\n-              <RouteCard \r\n-                key={route.id} \r\n-                route={route}\r\n-                onClick={() => {\r\n-                  setSelectedRoute(route);\r\n-                  setShowMap(true);\r\n-                }}\r\n-              />\r\n-            ))}\r\n-          </div>\r\n-        ) : (\r\n-          <div className=\"bg-blue-50 p-8 rounded-xl text-center border-2 border-dashed border-blue-200\">\r\n-            <p className=\"text-gray-700\">Enter locations to find transport options</p>\r\n-          </div>\r\n         )}\r\n-      </section>\r\n+      </div>\r\n \r\n-      {/* Map Modal */}\r\n-      {showMap && (\r\n-        <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center p-4 z-50 backdrop-blur-sm\">\r\n-          <div className=\"bg-white rounded-xl w-full max-w-4xl h-[80vh] flex flex-col shadow-2xl\">\r\n-            <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\r\n-              <h3 className=\"text-xl font-bold text-gray-800\">\r\n-                {selectedRoute?.name || 'Route Map'}\r\n-              </h3>\r\n-              <button \r\n-                onClick={() => setShowMap(false)}\r\n-                className=\"text-gray-500 hover:text-gray-700 p-2 rounded-full hover:bg-gray-100 transition-colors\"\r\n-              >\r\n-                <FaTimes className=\"text-lg\" />\r\n-              </button>\r\n-            </div>\r\n-            \r\n-            <div className=\"flex-1 bg-gray-100 rounded-b-xl flex items-center justify-center\">\r\n-              <div className=\"text-center p-6\">\r\n-                <FaMapMarkedAlt className=\"mx-auto text-5xl text-blue-500 mb-4\" />\r\n-                <h4 className=\"text-xl font-semibold mb-2 text-gray-800\">Map View</h4>\r\n-                <p className=\"text-gray-600 mb-4\">\r\n-                  {selectedRoute \r\n-                    ? `Showing route from ${selectedRoute.departure} to ${selectedRoute.arrival}`\r\n-                    : 'Route visualization'\r\n-                  }\r\n-                </p>\r\n-                <p className=\"text-sm text-gray-500\">\r\n-                  Interactive map would display here with route visualization\r\n-                </p>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n+      <p className=\"text-sm text-gray-700 mb-3\">{service.description}</p>\r\n+\r\n+      {service.features && (\r\n+        <div className=\"flex flex-wrap gap-2\">\r\n+          {service.features.map((feature, index) => (\r\n+            <span key={index} className=\"bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded-full\">\r\n+              {feature}\r\n+            </span>\r\n+          ))}\r\n         </div>\r\n       )}\r\n+\r\n+      {service.price && (\r\n+        <div className=\"mt-3 pt-3 border-t border-gray-200\">\r\n+          <p className=\"text-sm font-medium text-green-600\">{service.price}</p>\r\n+        </div>\r\n+      )}\r\n     </div>\r\n   );\r\n-}\n-import { useState } from 'react';\r\n-import { FaBicycle, FaCarAlt, FaTaxi, FaMotorcycle, FaMapMarkedAlt, FaTimes, FaCheck } from 'react-icons/fa';\r\n-import TransportPlanner from '../components/TransportPlanner';\r\n-import RouteCard from '../components/RouteCard';\r\n+}\r\n \r\n export default function Transport() {\r\n   const [routes, setRoutes] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n   const [showMap, setShowMap] = useState(false);\r\n   const [selectedRoute, setSelectedRoute] = useState(null);\r\n+  const [selectedService, setSelectedService] = useState(null);\r\n+  const [activeTab, setActiveTab] = useState('routes');\r\n \r\n+  // Mock services data\r\n+  const services = {\r\n+    bike: [\r\n+      {\r\n+        id: 1,\r\n+        name: 'CityBike Rental',\r\n+        category: 'Bike Rental',\r\n+        type: 'bike',\r\n+        hours: '6:00 AM - 10:00 PM',\r\n+        phone: '+1 (555) 123-4567',\r\n+        rating: 4.5,\r\n+        reviews: 142,\r\n+        description: 'Electric and standard bikes available for hourly or daily rental.',\r\n+        features: ['Electric bikes', 'Helmet included', 'GPS tracking'],\r\n+        price: 'From $5/hour',\r\n+        coordinates: [51.505, -0.09]\r\n+      },\r\n+      {\r\n+        id: 2,\r\n+        name: 'EcoWheels Station',\r\n+        category: 'Bike Share',\r\n+        type: 'bike',\r\n+        hours: '24/7',\r\n+        phone: '+1 (555) 987-6543',\r\n+        rating: 4.2,\r\n+        reviews: 89,\r\n+        description: 'Sustainable bike sharing with multiple pickup locations.',\r\n+        features: ['Solar charging', 'App booking', 'Student discounts'],\r\n+        price: '$2/30 minutes',\r\n+        coordinates: [51.51, -0.1]\r\n+      }\r\n+    ],\r\n+    taxi: [\r\n+      {\r\n+        id: 3,\r\n+        name: 'QuickRide Taxi',\r\n+        category: 'Taxi Service',\r\n+        type: 'taxi',\r\n+        hours: '24/7',\r\n+        phone: '+1 (555) 456-7890',\r\n+        rating: 4.3,\r\n+        reviews: 267,\r\n+        description: 'Reliable taxi service with modern fleet and professional drivers.',\r\n+        features: ['Card payment', 'Airport service', 'Wheelchair accessible'],\r\n+        price: '$2.50 base + $1.80/mile',\r\n+        coordinates: [51.515, -0.1]\r\n+      },\r\n+      {\r\n+        id: 4,\r\n+        name: 'Metro Cabs',\r\n+        category: 'Premium Taxi',\r\n+        type: 'taxi',\r\n+        hours: '24/7',\r\n+        phone: '+1 (555) 234-5678',\r\n+        rating: 4.7,\r\n+        reviews: 198,\r\n+        description: 'Premium taxi service with luxury vehicles and executive drivers.',\r\n+        features: ['Luxury vehicles', 'Corporate accounts', 'Meet & greet'],\r\n+        price: '$5 base + $2.50/mile',\r\n+        coordinates: [51.5, -0.08]\r\n+      }\r\n+    ],\r\n+    health: [\r\n+      {\r\n+        id: 5,\r\n+        name: 'Central Medical Center',\r\n+        category: 'Hospital',\r\n+        type: 'health',\r\n+        hours: '24/7 Emergency',\r\n+        phone: '+1 (555) 911-0000',\r\n+        rating: 4.1,\r\n+        reviews: 324,\r\n+        description: 'Full-service hospital with emergency care and specialist services.',\r\n+        features: ['Emergency care', 'Specialists', 'Surgery center'],\r\n+        coordinates: [51.495, -0.07]\r\n+      },\r\n+      {\r\n+        id: 6,\r\n+        name: 'Family Health Clinic',\r\n+        category: 'Primary Care',\r\n+        type: 'health',\r\n+        hours: '8:00 AM - 6:00 PM',\r\n+        phone: '+1 (555) health-1',\r\n+        rating: 4.6,\r\n+        reviews: 156,\r\n+        description: 'Comprehensive primary care for families and individuals.',\r\n+        features: ['Walk-ins welcome', 'Preventive care', 'Pediatrics'],\r\n+        coordinates: [51.52, -0.11]\r\n+      }\r\n+    ],\r\n+    school: [\r\n+      {\r\n+        id: 7,\r\n+        name: 'Riverside Elementary',\r\n+        category: 'Elementary School',\r\n+        type: 'school',\r\n+        hours: '7:30 AM - 3:30 PM',\r\n+        phone: '+1 (555) school-1',\r\n+        rating: 4.4,\r\n+        reviews: 89,\r\n+        description: 'Public elementary school serving grades K-5 with excellent programs.',\r\n+        features: ['After-school care', 'Sports programs', 'Arts education'],\r\n+        coordinates: [51.508, -0.09]\r\n+      },\r\n+      {\r\n+        id: 8,\r\n+        name: 'Tech High School',\r\n+        category: 'High School',\r\n+        type: 'school',\r\n+        hours: '8:00 AM - 4:00 PM',\r\n+        phone: '+1 (555) school-2',\r\n+        rating: 4.5,\r\n+        reviews: 112,\r\n+        description: 'Modern high school with STEM focus and career preparation.',\r\n+        features: ['STEM programs', 'Career center', 'College prep'],\r\n+        coordinates: [51.512, -0.12]\r\n+      }\r\n+    ]\r\n+  };\r\n+\r\n   const handleSearch = (origin, destination) => {\r\n     setLoading(true);\r\n     setTimeout(() => {\r\n       setRoutes([\r\n@@ -175,173 +316,171 @@\n       setLoading(false);\r\n     }, 1000);\r\n   };\r\n \r\n-  const services = [\r\n-    {\r\n-      id: 1,\r\n-      name: 'City Bike Rentals',\r\n-      description: 'Electric and standard bicycles available throughout the city',\r\n-      price: '$5/hour',\r\n-      icon: <FaBicycle className=\"text-green-500\" />,\r\n-      features: ['Helmet included', '24/7 support', 'Free phone mount'],\r\n-      action: 'Rent Now'\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      name: 'AutoCare Pro',\r\n-      description: '24/7 emergency vehicle services and maintenance',\r\n-      price: 'From $30',\r\n-      icon: <FaCarAlt className=\"text-blue-500\" />,\r\n-      features: ['Roadside assistance', 'Battery jump', '30-min response'],\r\n-      action: 'Call Now'\r\n-    },\r\n-    {\r\n-      id: 3,\r\n-      name: 'Metro Taxis',\r\n-      description: 'On-demand rides with professional drivers',\r\n-      price: '$3 base + $2/mile',\r\n-      icon: <FaTaxi className=\"text-yellow-500\" />,\r\n-      features: ['Child seats available', 'Cashless payment', 'VIP options'],\r\n-      action: 'Book Ride'\r\n-    },\r\n-    {\r\n-      id: 4,\r\n-      name: 'Scooter Share',\r\n-      description: 'Electric scooters with app-controlled unlocking',\r\n-      price: '$1 unlock + $0.30/min',\r\n-      icon: <FaMotorcycle className=\"text-purple-500\" />,\r\n-      features: ['No parking fees', 'Helmet optional', 'Geo-fenced areas'],\r\n-      action: 'Find Scooters'\r\n-    }\r\n+  const handleServiceMapClick = (service) => {\r\n+    setSelectedService(service);\r\n+    setShowMap(true);\r\n+  };\r\n+\r\n+  const handleRouteMapClick = (route) => {\r\n+    setSelectedRoute(route);\r\n+    setSelectedService(null);\r\n+    setShowMap(true);\r\n+  };\r\n+\r\n+  const tabs = [\r\n+    { id: 'routes', label: 'Routes', icon: 'üöå' },\r\n+    { id: 'bike', label: 'Bike Hire', icon: 'üö≤' },\r\n+    { id: 'taxi', label: 'Taxi Services', icon: 'üöï' },\r\n+    { id: 'health', label: 'Health Services', icon: 'üè•' },\r\n+    { id: 'school', label: 'School Services', icon: 'üè´' }\r\n   ];\r\n \r\n   return (\r\n-    <div className=\"p-4 max-w-6xl mx-auto\">\r\n-      <h1 className=\"text-3xl font-bold mb-8 text-center text-gray-800\">\r\n-        Urban Transport Hub\r\n-      </h1>\r\n+    <div className=\"p-4 max-w-6xl mx-auto bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen\">\r\n+      <div className=\"text-center mb-8\">\r\n+        <h1 className=\"text-4xl font-bold mb-4 text-gray-800 bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-purple-600\">\r\n+          Urban Transport & Services Hub\r\n+        </h1>\r\n+        <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\r\n+          Your one-stop destination for transportation, bike rentals, taxi services, healthcare, and educational facilities\r\n+        </p>\r\n+      </div>\r\n \r\n       {/* Transport Planner */}\r\n-      <section className=\"mb-12 bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\r\n+      <section className=\"mb-8 bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\r\n         <TransportPlanner onSearch={handleSearch} />\r\n       </section>\r\n \r\n-      {/* Routes Section */}\r\n-      <section className=\"mb-12\">\r\n-        <div className=\"flex justify-between items-center mb-6\">\r\n-          <h2 className=\"text-2xl font-bold text-gray-800\">Available Routes</h2>\r\n-          {routes.length > 0 && (\r\n-            <button \r\n-              onClick={() => {\r\n-                setSelectedRoute(routes[0]);\r\n-                setShowMap(true);\r\n-              }}\r\n-              className=\"flex items-center gap-2 bg-emerald-500 hover:bg-emerald-600 text-white px-5 py-2 rounded-lg transition-colors shadow-md\"\r\n+      {/* Navigation Tabs */}\r\n+      <div className=\"mb-6\">\r\n+        <div className=\"flex flex-wrap gap-2 bg-white rounded-xl p-2 shadow-md\">\r\n+          {tabs.map(tab => (\r\n+            <button\r\n+              key={tab.id}\r\n+              onClick={() => setActiveTab(tab.id)}\r\n+              className={`flex items-center gap-2 px-4 py-2 rounded-lg transition-all duration-200 ${\r\n+                activeTab === tab.id \r\n+                  ? 'bg-blue-600 text-white shadow-md' \r\n+                  : 'text-gray-600 hover:bg-gray-100'\r\n+              }`}\r\n             >\r\n-              <FaMapMarkedAlt /> View Route Map\r\n+              {tab.icon}\r\n+              <span className=\"hidden sm:inline\">{tab.label}</span>\r\n             </button>\r\n-          )}\r\n+          ))}\r\n         </div>\r\n+      </div>\r\n \r\n-        {loading ? (\r\n-          <div className=\"text-center py-12\">\r\n-            <div className=\"inline-block h-10 w-10 border-4 border-emerald-500 border-t-transparent rounded-full animate-spin\"></div>\r\n-            <p className=\"mt-3 text-gray-600\">Finding best routes...</p>\r\n+      {/* Routes Section */}\r\n+      {activeTab === 'routes' && (\r\n+        <section className=\"mb-12\">\r\n+          <div className=\"flex justify-between items-center mb-6\">\r\n+            <h2 className=\"text-2xl font-bold text-gray-800\">Available Routes</h2>\r\n+            {routes.length > 0 && (\r\n+              <button \r\n+                onClick={() => handleRouteMapClick(routes[0])}\r\n+                className=\"flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-5 py-2 rounded-lg transition-colors shadow-md\"\r\n+              >\r\n+                <span>üìç</span> View Route Map\r\n+              </button>\r\n+            )}\r\n           </div>\r\n-        ) : routes.length > 0 ? (\r\n-          <div className=\"grid gap-4\">\r\n-            {routes.map(route => (\r\n-              <RouteCard \r\n-                key={route.id} \r\n-                route={route}\r\n-                onClick={() => {\r\n-                  setSelectedRoute(route);\r\n-                  setShowMap(true);\r\n-                }}\r\n+\r\n+          {loading ? (\r\n+            <div className=\"text-center py-12\">\r\n+              <div className=\"inline-block h-10 w-10 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\r\n+              <p className=\"mt-3 text-gray-600\">Finding best routes...</p>\r\n+            </div>\r\n+          ) : routes.length > 0 ? (\r\n+            <div className=\"grid gap-4\">\r\n+              {routes.map(route => (\r\n+                <RouteCard \r\n+                  key={route.id} \r\n+                  route={route}\r\n+                  onClick={() => handleRouteMapClick(route)}\r\n+                />\r\n+              ))}\r\n+            </div>\r\n+          ) : (\r\n+            <div className=\"bg-blue-50 p-8 rounded-xl text-center border-2 border-dashed border-blue-200\">\r\n+              <p className=\"text-gray-700\">Enter locations to find transport options</p>\r\n+            </div>\r\n+          )}\r\n+        </section>\r\n+      )}\r\n+\r\n+      {/* Services Sections */}\r\n+      {activeTab !== 'routes' && (\r\n+        <section className=\"mb-12\">\r\n+          <div className=\"flex justify-between items-center mb-6\">\r\n+            <h2 className=\"text-2xl font-bold text-gray-800\">\r\n+              {tabs.find(tab => tab.id === activeTab)?.label}\r\n+            </h2>\r\n+            <div className=\"text-sm text-gray-600\">\r\n+              {services[activeTab]?.length || 0} services available\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+            {services[activeTab]?.map(service => (\r\n+              <ServiceCard \r\n+                key={service.id} \r\n+                service={service}\r\n+                onMapClick={handleServiceMapClick}\r\n               />\r\n             ))}\r\n           </div>\r\n-        ) : (\r\n-          <div className=\"bg-emerald-50 p-8 rounded-xl text-center border-2 border-dashed border-emerald-200\">\r\n-            <p className=\"text-gray-700\">Enter locations to find transport options</p>\r\n-          </div>\r\n-        )}\r\n-      </section>\r\n+        </section>\r\n+      )}\r\n \r\n-      {/* Services Section - Now with proper styling */}\r\n-      <section className=\"mb-12\">\r\n-        <h2 className=\"text-2xl font-bold mb-6 text-gray-800 border-b-2 border-emerald-200 pb-2\">\r\n-          Transport Services\r\n-        </h2>\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n-          {services.map(service => (\r\n-            <div \r\n-              key={service.id} \r\n-              className=\"bg-white rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-all duration-300 border border-gray-100 hover:border-emerald-200\"\r\n-            >\r\n-              <div className=\"p-5 h-full flex flex-col\">\r\n-                <div className=\"flex justify-center mb-4\">\r\n-                  <div className=\"p-4 bg-emerald-50 rounded-full\">\r\n-                    {service.icon}\r\n-                  </div>\r\n-                </div>\r\n-                <h3 className=\"text-xl font-bold mb-2 text-center text-gray-800\">{service.name}</h3>\r\n-                <p className=\"text-gray-600 text-center mb-4 text-sm\">{service.description}</p>\r\n-                \r\n-                <div className=\"text-center mb-4\">\r\n-                  <span className=\"inline-block bg-emerald-100 text-emerald-800 px-3 py-1 rounded-full text-sm font-semibold\">\r\n-                    {service.price}\r\n-                  </span>\r\n-                </div>\r\n-                \r\n-                <ul className=\"space-y-2 mb-5 flex-grow\">\r\n-                  {service.features.map((feature, i) => (\r\n-                    <li key={i} className=\"flex items-start text-gray-700\">\r\n-                      <FaCheck className=\"text-emerald-500 mt-1 mr-2 flex-shrink-0\" />\r\n-                      <span className=\"text-sm\">{feature}</span>\r\n-                    </li>\r\n-                  ))}\r\n-                </ul>\r\n-                \r\n-                <button className=\"w-full bg-emerald-500 hover:bg-emerald-600 text-white py-2 px-4 rounded-lg transition-colors font-semibold shadow-sm\">\r\n-                  {service.action}\r\n-                </button>\r\n-              </div>\r\n-            </div>\r\n-          ))}\r\n-        </div>\r\n-      </section>\r\n-\r\n       {/* Map Modal */}\r\n       {showMap && (\r\n         <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center p-4 z-50 backdrop-blur-sm\">\r\n           <div className=\"bg-white rounded-xl w-full max-w-4xl h-[80vh] flex flex-col shadow-2xl\">\r\n             <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\r\n               <h3 className=\"text-xl font-bold text-gray-800\">\r\n-                {selectedRoute?.name || 'Route Map'}\r\n+                {selectedService?.name || selectedRoute?.name || 'Map View'}\r\n               </h3>\r\n               <button \r\n                 onClick={() => setShowMap(false)}\r\n-                className=\"text-gray-500 hover:text-gray-700 p-2 rounded-full hover:bg-gray-100 transition-colors\"\r\n+                className=\"text-gray-500 hover:text-gray-700 p-2 rounded-full hover:bg-gray-100 transition-colors text-xl\"\r\n               >\r\n-                <FaTimes className=\"text-lg\" />\r\n+                ‚úï\r\n               </button>\r\n             </div>\r\n             \r\n-            <div className=\"flex-1 bg-gray-100 rounded-b-xl flex items-center justify-center\">\r\n+            <div className=\"flex-1 bg-gradient-to-br from-blue-50 to-indigo-100 rounded-b-xl flex items-center justify-center\">\r\n               <div className=\"text-center p-6\">\r\n-                <FaMapMarkedAlt className=\"mx-auto text-5xl text-emerald-500 mb-4\" />\r\n-                <h4 className=\"text-xl font-semibold mb-2 text-gray-800\">Map View</h4>\r\n-                <p className=\"text-gray-600 mb-4\">\r\n-                  {selectedRoute \r\n-                    ? `Showing route from ${selectedRoute.departure} to ${selectedRoute.arrival}`\r\n-                    : 'Route visualization'\r\n-                  }\r\n+                <div className=\"mx-auto text-5xl mb-4\">üìç</div>\r\n+                <h4 className=\"text-xl font-semibold mb-2 text-gray-800\">Interactive Map</h4>\r\n+                {selectedService ? (\r\n+                  <div className=\"space-y-2\">\r\n+                    <p className=\"text-gray-600\">\r\n+                      <strong>{selectedService.name}</strong> - {selectedService.category}\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">{selectedService.description}</p>\r\n+                    <p className=\"text-sm text-gray-500\">\r\n+                      Location: {selectedService.coordinates[0]}, {selectedService.coordinates[1]}\r\n+                    </p>\r\n+                  </div>\r\n+                ) : selectedRoute ? (\r\n+                  <div className=\"space-y-2\">\r\n+                    <p className=\"text-gray-600\">\r\n+                      Route: <strong>{selectedRoute.name}</strong>\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">\r\n+                      {selectedRoute.departure} ‚Üí {selectedRoute.arrival}\r\n+                    </p>\r\n+                    <p className=\"text-sm text-gray-500\">\r\n+                      Duration: {selectedRoute.duration} | Price: {selectedRoute.price}\r\n+                    </p>\r\n+                  </div>\r\n+                ) : null}\r\n+                <p className=\"text-sm text-gray-500 mt-4\">\r\n+                  Interactive map with real-time data would display here\r\n                 </p>\r\n-                <p className=\"text-sm text-gray-500\">\r\n-                  Interactive map would display here with route visualization\r\n-                </p>\r\n               </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1752178051755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,162 @@\n+import { useState } from 'react';\r\n+\r\n+// --- TransportPlanner Component ---\r\n+function TransportPlanner({ onSearch }) {\r\n+  const [origin, setOrigin] = useState('');\r\n+  const [destination, setDestination] = useState('');\r\n+\r\n+  const handleSubmit = () => {\r\n+    if (origin.trim() && destination.trim()) {\r\n+      onSearch(origin, destination);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div>\r\n+      <h2 className=\"text-2xl font-bold mb-6 text-gray-800\">Plan Your Journey</h2>\r\n+      <div className=\"space-y-4\">\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"block text-sm font-medium text-gray-700 mb-2\">From</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              value={origin}\r\n+              onChange={(e) => setOrigin(e.target.value)}\r\n+              placeholder=\"Enter starting location\"\r\n+              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-200\"\r\n+            />\r\n+          </div>\r\n+          <div>\r\n+            <label className=\"block text-sm font-medium text-gray-700 mb-2\">To</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              value={destination}\r\n+              onChange={(e) => setDestination(e.target.value)}\r\n+              placeholder=\"Enter destination\"\r\n+              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-200\"\r\n+            />\r\n+          </div>\r\n+        </div>\r\n+        <button\r\n+          onClick={handleSubmit}\r\n+          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition duration-300 shadow hover:shadow-lg\"\r\n+        >\r\n+          üöÄ Search Routes\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+// --- RouteCard Component ---\r\n+function RouteCard({ route, onClick }) {\r\n+  return (\r\n+    <div\r\n+      onClick={onClick}\r\n+      className=\"bg-white rounded-xl shadow-md hover:shadow-xl transition duration-300 p-6 border border-gray-100 hover:border-blue-400 cursor-pointer transform hover:scale-[1.02]\"\r\n+    >\r\n+      <div className=\"flex justify-between items-start mb-4\">\r\n+        <div>\r\n+          <h3 className=\"text-lg font-semibold text-gray-800\">{route.name}</h3>\r\n+          <p className=\"text-sm text-gray-600 mt-1\">{route.type} ‚Ä¢ {route.stops} stops</p>\r\n+        </div>\r\n+        <div className=\"text-right\">\r\n+          <p className=\"text-2xl font-bold text-blue-600\">{route.price}</p>\r\n+          <p className=\"text-sm text-gray-500\">{route.duration}</p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"flex justify-between items-center mb-3\">\r\n+        <div>\r\n+          <p className=\"text-sm text-gray-600\">Departure</p>\r\n+          <p className=\"font-medium\">{route.departure}</p>\r\n+        </div>\r\n+        <div>\r\n+          <p className=\"text-sm text-gray-600\">Arrival</p>\r\n+          <p className=\"font-medium\">{route.arrival}</p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"flex flex-wrap gap-2\">\r\n+        {route.features.map((feature, index) => (\r\n+          <span\r\n+            key={index}\r\n+            className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full animate-pulse\"\r\n+          >\r\n+            {feature}\r\n+          </span>\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+// --- ServiceCard Component ---\r\n+function ServiceCard({ service, onMapClick }) {\r\n+  const getIcon = (type) => {\r\n+    const icons = {\r\n+      bike: 'üö≤',\r\n+      taxi: 'üöï',\r\n+      health: 'üè•',\r\n+      school: 'üè´'\r\n+    };\r\n+    return <span className=\"text-2xl\">{icons[type] || 'üìç'}</span>;\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"bg-white rounded-xl shadow-md hover:shadow-xl transition duration-300 p-6 border border-gray-100 hover:border-blue-400 transform hover:scale-[1.02]\">\r\n+      <div className=\"flex items-start justify-between mb-4\">\r\n+        <div className=\"flex items-center gap-3\">\r\n+          {getIcon(service.type)}\r\n+          <div>\r\n+            <h3 className=\"text-lg font-semibold text-gray-800\">{service.name}</h3>\r\n+            <p className=\"text-sm text-gray-600\">{service.category}</p>\r\n+          </div>\r\n+        </div>\r\n+        <button\r\n+          onClick={() => onMapClick(service)}\r\n+          className=\"text-blue-600 hover:text-blue-800 p-2 rounded-full hover:bg-blue-100 transition-colors text-lg\"\r\n+        >\r\n+          üìç\r\n+        </button>\r\n+      </div>\r\n+\r\n+      <div className=\"space-y-2 mb-4 text-sm text-gray-600\">\r\n+        <div className=\"flex items-center gap-2\">\r\n+          <span className=\"text-xs\">üïí</span>\r\n+          <span>{service.hours}</span>\r\n+        </div>\r\n+        <div className=\"flex items-center gap-2\">\r\n+          <span className=\"text-xs\">üìû</span>\r\n+          <span>{service.phone}</span>\r\n+        </div>\r\n+        {service.rating && (\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-yellow-500 text-xs\">‚≠ê</span>\r\n+            <span>{service.rating}/5 ({service.reviews} reviews)</span>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+\r\n+      <p className=\"text-sm text-gray-700 mb-3 italic\">{service.description}</p>\r\n+\r\n+      {service.features?.length > 0 && (\r\n+        <div className=\"flex flex-wrap gap-2\">\r\n+          {service.features.map((feature, index) => (\r\n+            <span key={index} className=\"bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded-full\">\r\n+              {feature}\r\n+            </span>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+\r\n+      {service.price && (\r\n+        <div className=\"mt-3 pt-3 border-t border-gray-200\">\r\n+          <p className=\"text-sm font-medium text-green-600\">{service.price}</p>\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export { TransportPlanner, RouteCard, ServiceCard };\r\n"
                },
                {
                    "date": 1752178060540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,162 @@\n+import { useState } from 'react';\r\n+\r\n+// --- TransportPlanner Component ---\r\n+function TransportPlanner({ onSearch }) {\r\n+  const [origin, setOrigin] = useState('');\r\n+  const [destination, setDestination] = useState('');\r\n+\r\n+  const handleSubmit = () => {\r\n+    if (origin.trim() && destination.trim()) {\r\n+      onSearch(origin, destination);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div>\r\n+      <h2 className=\"text-2xl font-bold mb-6 text-gray-800\">Plan Your Journey</h2>\r\n+      <div className=\"space-y-4\">\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"block text-sm font-medium text-gray-700 mb-2\">From</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              value={origin}\r\n+              onChange={(e) => setOrigin(e.target.value)}\r\n+              placeholder=\"Enter starting location\"\r\n+              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-200\"\r\n+            />\r\n+          </div>\r\n+          <div>\r\n+            <label className=\"block text-sm font-medium text-gray-700 mb-2\">To</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              value={destination}\r\n+              onChange={(e) => setDestination(e.target.value)}\r\n+              placeholder=\"Enter destination\"\r\n+              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-200\"\r\n+            />\r\n+          </div>\r\n+        </div>\r\n+        <button\r\n+          onClick={handleSubmit}\r\n+          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition duration-300 shadow hover:shadow-lg\"\r\n+        >\r\n+          üöÄ Search Routes\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+// --- RouteCard Component ---\r\n+function RouteCard({ route, onClick }) {\r\n+  return (\r\n+    <div\r\n+      onClick={onClick}\r\n+      className=\"bg-white rounded-xl shadow-md hover:shadow-xl transition duration-300 p-6 border border-gray-100 hover:border-blue-400 cursor-pointer transform hover:scale-[1.02]\"\r\n+    >\r\n+      <div className=\"flex justify-between items-start mb-4\">\r\n+        <div>\r\n+          <h3 className=\"text-lg font-semibold text-gray-800\">{route.name}</h3>\r\n+          <p className=\"text-sm text-gray-600 mt-1\">{route.type} ‚Ä¢ {route.stops} stops</p>\r\n+        </div>\r\n+        <div className=\"text-right\">\r\n+          <p className=\"text-2xl font-bold text-blue-600\">{route.price}</p>\r\n+          <p className=\"text-sm text-gray-500\">{route.duration}</p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"flex justify-between items-center mb-3\">\r\n+        <div>\r\n+          <p className=\"text-sm text-gray-600\">Departure</p>\r\n+          <p className=\"font-medium\">{route.departure}</p>\r\n+        </div>\r\n+        <div>\r\n+          <p className=\"text-sm text-gray-600\">Arrival</p>\r\n+          <p className=\"font-medium\">{route.arrival}</p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"flex flex-wrap gap-2\">\r\n+        {route.features.map((feature, index) => (\r\n+          <span\r\n+            key={index}\r\n+            className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full animate-pulse\"\r\n+          >\r\n+            {feature}\r\n+          </span>\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+// --- ServiceCard Component ---\r\n+function ServiceCard({ service, onMapClick }) {\r\n+  const getIcon = (type) => {\r\n+    const icons = {\r\n+      bike: 'üö≤',\r\n+      taxi: 'üöï',\r\n+      health: 'üè•',\r\n+      school: 'üè´'\r\n+    };\r\n+    return <span className=\"text-2xl\">{icons[type] || 'üìç'}</span>;\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"bg-white rounded-xl shadow-md hover:shadow-xl transition duration-300 p-6 border border-gray-100 hover:border-blue-400 transform hover:scale-[1.02]\">\r\n+      <div className=\"flex items-start justify-between mb-4\">\r\n+        <div className=\"flex items-center gap-3\">\r\n+          {getIcon(service.type)}\r\n+          <div>\r\n+            <h3 className=\"text-lg font-semibold text-gray-800\">{service.name}</h3>\r\n+            <p className=\"text-sm text-gray-600\">{service.category}</p>\r\n+          </div>\r\n+        </div>\r\n+        <button\r\n+          onClick={() => onMapClick(service)}\r\n+          className=\"text-blue-600 hover:text-blue-800 p-2 rounded-full hover:bg-blue-100 transition-colors text-lg\"\r\n+        >\r\n+          üìç\r\n+        </button>\r\n+      </div>\r\n+\r\n+      <div className=\"space-y-2 mb-4 text-sm text-gray-600\">\r\n+        <div className=\"flex items-center gap-2\">\r\n+          <span className=\"text-xs\">üïí</span>\r\n+          <span>{service.hours}</span>\r\n+        </div>\r\n+        <div className=\"flex items-center gap-2\">\r\n+          <span className=\"text-xs\">üìû</span>\r\n+          <span>{service.phone}</span>\r\n+        </div>\r\n+        {service.rating && (\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <span className=\"text-yellow-500 text-xs\">‚≠ê</span>\r\n+            <span>{service.rating}/5 ({service.reviews} reviews)</span>\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+\r\n+      <p className=\"text-sm text-gray-700 mb-3 italic\">{service.description}</p>\r\n+\r\n+      {service.features?.length > 0 && (\r\n+        <div className=\"flex flex-wrap gap-2\">\r\n+          {service.features.map((feature, index) => (\r\n+            <span key={index} className=\"bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded-full\">\r\n+              {feature}\r\n+            </span>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n+\r\n+      {service.price && (\r\n+        <div className=\"mt-3 pt-3 border-t border-gray-200\">\r\n+          <p className=\"text-sm font-medium text-green-600\">{service.price}</p>\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export { TransportPlanner, RouteCard, ServiceCard };\r\n"
                },
                {
                    "date": 1752178110872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n import { useState } from 'react';\r\n \r\n-// --- TransportPlanner Component ---\r\n+// Mock TransportPlanner component\r\n function TransportPlanner({ onSearch }) {\r\n   const [origin, setOrigin] = useState('');\r\n   const [destination, setDestination] = useState('');\r\n \r\n   const handleSubmit = () => {\r\n-    if (origin.trim() && destination.trim()) {\r\n+    if (origin && destination) {\r\n       onSearch(origin, destination);\r\n     }\r\n   };\r\n \r\n@@ -22,9 +22,9 @@\n               type=\"text\"\r\n               value={origin}\r\n               onChange={(e) => setOrigin(e.target.value)}\r\n               placeholder=\"Enter starting location\"\r\n-              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-200\"\r\n+              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n             />\r\n           </div>\r\n           <div>\r\n             <label className=\"block text-sm font-medium text-gray-700 mb-2\">To</label>\r\n@@ -32,29 +32,29 @@\n               type=\"text\"\r\n               value={destination}\r\n               onChange={(e) => setDestination(e.target.value)}\r\n               placeholder=\"Enter destination\"\r\n-              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-200\"\r\n+              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n             />\r\n           </div>\r\n         </div>\r\n         <button\r\n           onClick={handleSubmit}\r\n-          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition duration-300 shadow hover:shadow-lg\"\r\n+          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition-colors shadow-md\"\r\n         >\r\n-          üöÄ Search Routes\r\n+          Search Routes\r\n         </button>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n \r\n-// --- RouteCard Component ---\r\n+// Mock RouteCard component\r\n function RouteCard({ route, onClick }) {\r\n   return (\r\n-    <div\r\n+    <div \r\n       onClick={onClick}\r\n-      className=\"bg-white rounded-xl shadow-md hover:shadow-xl transition duration-300 p-6 border border-gray-100 hover:border-blue-400 cursor-pointer transform hover:scale-[1.02]\"\r\n+      className=\"bg-white rounded-xl shadow-md hover:shadow-lg transition-shadow p-6 border border-gray-100 cursor-pointer hover:border-blue-200\"\r\n     >\r\n       <div className=\"flex justify-between items-start mb-4\">\r\n         <div>\r\n           <h3 className=\"text-lg font-semibold text-gray-800\">{route.name}</h3>\r\n@@ -64,9 +64,9 @@\n           <p className=\"text-2xl font-bold text-blue-600\">{route.price}</p>\r\n           <p className=\"text-sm text-gray-500\">{route.duration}</p>\r\n         </div>\r\n       </div>\r\n-\r\n+      \r\n       <div className=\"flex justify-between items-center mb-3\">\r\n         <div>\r\n           <p className=\"text-sm text-gray-600\">Departure</p>\r\n           <p className=\"font-medium\">{route.departure}</p>\r\n@@ -75,37 +75,34 @@\n           <p className=\"text-sm text-gray-600\">Arrival</p>\r\n           <p className=\"font-medium\">{route.arrival}</p>\r\n         </div>\r\n       </div>\r\n-\r\n+      \r\n       <div className=\"flex flex-wrap gap-2\">\r\n         {route.features.map((feature, index) => (\r\n-          <span\r\n-            key={index}\r\n-            className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full animate-pulse\"\r\n-          >\r\n+          <span key={index} className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\">\r\n             {feature}\r\n           </span>\r\n         ))}\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n \r\n-// --- ServiceCard Component ---\r\n+// Service Card Component\r\n function ServiceCard({ service, onMapClick }) {\r\n   const getIcon = (type) => {\r\n-    const icons = {\r\n-      bike: 'üö≤',\r\n-      taxi: 'üöï',\r\n-      health: 'üè•',\r\n-      school: 'üè´'\r\n-    };\r\n-    return <span className=\"text-2xl\">{icons[type] || 'üìç'}</span>;\r\n+    switch(type) {\r\n+      case 'bike': return <span className=\"text-2xl\">üö≤</span>;\r\n+      case 'taxi': return <span className=\"text-2xl\">üöï</span>;\r\n+      case 'health': return <span className=\"text-2xl\">üè•</span>;\r\n+      case 'school': return <span className=\"text-2xl\">üè´</span>;\r\n+      default: return <span className=\"text-2xl\">üìç</span>;\r\n+    }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"bg-white rounded-xl shadow-md hover:shadow-xl transition duration-300 p-6 border border-gray-100 hover:border-blue-400 transform hover:scale-[1.02]\">\r\n+    <div className=\"bg-white rounded-xl shadow-md hover:shadow-lg transition-all duration-300 p-6 border border-gray-100 hover:border-blue-200\">\r\n       <div className=\"flex items-start justify-between mb-4\">\r\n         <div className=\"flex items-center gap-3\">\r\n           {getIcon(service.type)}\r\n           <div>\r\n@@ -114,34 +111,34 @@\n           </div>\r\n         </div>\r\n         <button\r\n           onClick={() => onMapClick(service)}\r\n-          className=\"text-blue-600 hover:text-blue-800 p-2 rounded-full hover:bg-blue-100 transition-colors text-lg\"\r\n+          className=\"text-blue-600 hover:text-blue-800 p-2 rounded-full hover:bg-blue-50 transition-colors text-lg\"\r\n         >\r\n           üìç\r\n         </button>\r\n       </div>\r\n \r\n-      <div className=\"space-y-2 mb-4 text-sm text-gray-600\">\r\n-        <div className=\"flex items-center gap-2\">\r\n+      <div className=\"space-y-2 mb-4\">\r\n+        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n           <span className=\"text-xs\">üïí</span>\r\n           <span>{service.hours}</span>\r\n         </div>\r\n-        <div className=\"flex items-center gap-2\">\r\n+        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n           <span className=\"text-xs\">üìû</span>\r\n           <span>{service.phone}</span>\r\n         </div>\r\n         {service.rating && (\r\n-          <div className=\"flex items-center gap-2\">\r\n+          <div className=\"flex items-center gap-2 text-sm\">\r\n             <span className=\"text-yellow-500 text-xs\">‚≠ê</span>\r\n-            <span>{service.rating}/5 ({service.reviews} reviews)</span>\r\n+            <span className=\"text-gray-600\">{service.rating}/5 ({service.reviews} reviews)</span>\r\n           </div>\r\n         )}\r\n       </div>\r\n \r\n-      <p className=\"text-sm text-gray-700 mb-3 italic\">{service.description}</p>\r\n+      <p className=\"text-sm text-gray-700 mb-3\">{service.description}</p>\r\n \r\n-      {service.features?.length > 0 && (\r\n+      {service.features && (\r\n         <div className=\"flex flex-wrap gap-2\">\r\n           {service.features.map((feature, index) => (\r\n             <span key={index} className=\"bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded-full\">\r\n               {feature}\r\n@@ -158,5 +155,336 @@\n     </div>\r\n   );\r\n }\r\n \r\n-export { TransportPlanner, RouteCard, ServiceCard };\r\n+export default function Transport() {\r\n+  const [routes, setRoutes] = useState([]);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [showMap, setShowMap] = useState(false);\r\n+  const [selectedRoute, setSelectedRoute] = useState(null);\r\n+  const [selectedService, setSelectedService] = useState(null);\r\n+  const [activeTab, setActiveTab] = useState('routes');\r\n+\r\n+  // Mock services data\r\n+  const services = {\r\n+    bike: [\r\n+      {\r\n+        id: 1,\r\n+        name: 'CityBike Rental',\r\n+        category: 'Bike Rental',\r\n+        type: 'bike',\r\n+        hours: '6:00 AM - 10:00 PM',\r\n+        phone: '+1 (555) 123-4567',\r\n+        rating: 4.5,\r\n+        reviews: 142,\r\n+        description: 'Electric and standard bikes available for hourly or daily rental.',\r\n+        features: ['Electric bikes', 'Helmet included', 'GPS tracking'],\r\n+        price: 'From $5/hour',\r\n+        coordinates: [51.505, -0.09]\r\n+      },\r\n+      {\r\n+        id: 2,\r\n+        name: 'EcoWheels Station',\r\n+        category: 'Bike Share',\r\n+        type: 'bike',\r\n+        hours: '24/7',\r\n+        phone: '+1 (555) 987-6543',\r\n+        rating: 4.2,\r\n+        reviews: 89,\r\n+        description: 'Sustainable bike sharing with multiple pickup locations.',\r\n+        features: ['Solar charging', 'App booking', 'Student discounts'],\r\n+        price: '$2/30 minutes',\r\n+        coordinates: [51.51, -0.1]\r\n+      }\r\n+    ],\r\n+    taxi: [\r\n+      {\r\n+        id: 3,\r\n+        name: 'QuickRide Taxi',\r\n+        category: 'Taxi Service',\r\n+        type: 'taxi',\r\n+        hours: '24/7',\r\n+        phone: '+1 (555) 456-7890',\r\n+        rating: 4.3,\r\n+        reviews: 267,\r\n+        description: 'Reliable taxi service with modern fleet and professional drivers.',\r\n+        features: ['Card payment', 'Airport service', 'Wheelchair accessible'],\r\n+        price: '$2.50 base + $1.80/mile',\r\n+        coordinates: [51.515, -0.1]\r\n+      },\r\n+      {\r\n+        id: 4,\r\n+        name: 'Metro Cabs',\r\n+        category: 'Premium Taxi',\r\n+        type: 'taxi',\r\n+        hours: '24/7',\r\n+        phone: '+1 (555) 234-5678',\r\n+        rating: 4.7,\r\n+        reviews: 198,\r\n+        description: 'Premium taxi service with luxury vehicles and executive drivers.',\r\n+        features: ['Luxury vehicles', 'Corporate accounts', 'Meet & greet'],\r\n+        price: '$5 base + $2.50/mile',\r\n+        coordinates: [51.5, -0.08]\r\n+      }\r\n+    ],\r\n+    health: [\r\n+      {\r\n+        id: 5,\r\n+        name: 'Central Medical Center',\r\n+        category: 'Hospital',\r\n+        type: 'health',\r\n+        hours: '24/7 Emergency',\r\n+        phone: '+1 (555) 911-0000',\r\n+        rating: 4.1,\r\n+        reviews: 324,\r\n+        description: 'Full-service hospital with emergency care and specialist services.',\r\n+        features: ['Emergency care', 'Specialists', 'Surgery center'],\r\n+        coordinates: [51.495, -0.07]\r\n+      },\r\n+      {\r\n+        id: 6,\r\n+        name: 'Family Health Clinic',\r\n+        category: 'Primary Care',\r\n+        type: 'health',\r\n+        hours: '8:00 AM - 6:00 PM',\r\n+        phone: '+1 (555) health-1',\r\n+        rating: 4.6,\r\n+        reviews: 156,\r\n+        description: 'Comprehensive primary care for families and individuals.',\r\n+        features: ['Walk-ins welcome', 'Preventive care', 'Pediatrics'],\r\n+        coordinates: [51.52, -0.11]\r\n+      }\r\n+    ],\r\n+    school: [\r\n+      {\r\n+        id: 7,\r\n+        name: 'Riverside Elementary',\r\n+        category: 'Elementary School',\r\n+        type: 'school',\r\n+        hours: '7:30 AM - 3:30 PM',\r\n+        phone: '+1 (555) school-1',\r\n+        rating: 4.4,\r\n+        reviews: 89,\r\n+        description: 'Public elementary school serving grades K-5 with excellent programs.',\r\n+        features: ['After-school care', 'Sports programs', 'Arts education'],\r\n+        coordinates: [51.508, -0.09]\r\n+      },\r\n+      {\r\n+        id: 8,\r\n+        name: 'Tech High School',\r\n+        category: 'High School',\r\n+        type: 'school',\r\n+        hours: '8:00 AM - 4:00 PM',\r\n+        phone: '+1 (555) school-2',\r\n+        rating: 4.5,\r\n+        reviews: 112,\r\n+        description: 'Modern high school with STEM focus and career preparation.',\r\n+        features: ['STEM programs', 'Career center', 'College prep'],\r\n+        coordinates: [51.512, -0.12]\r\n+      }\r\n+    ]\r\n+  };\r\n+\r\n+  const handleSearch = (origin, destination) => {\r\n+    setLoading(true);\r\n+    setTimeout(() => {\r\n+      setRoutes([\r\n+        {\r\n+          id: 1,\r\n+          name: 'Express Bus 42',\r\n+          departure: '10:15 AM',\r\n+          arrival: '10:40 AM',\r\n+          duration: '25 min',\r\n+          price: '$2.50',\r\n+          type: 'bus',\r\n+          stops: 5,\r\n+          features: ['Wheelchair accessible', 'Air conditioning'],\r\n+          coordinates: [[51.505, -0.09], [51.51, -0.1], [51.515, -0.1]]\r\n+        },\r\n+        {\r\n+          id: 2,\r\n+          name: 'Downtown Loop',\r\n+          departure: 'Every 15 min',\r\n+          arrival: 'Flexible',\r\n+          duration: '40 min',\r\n+          price: '$3.00',\r\n+          type: 'bus',\r\n+          stops: 8,\r\n+          features: ['Free WiFi', 'USB Charging'],\r\n+          coordinates: [[51.505, -0.09], [51.5, -0.08], [51.495, -0.07]]\r\n+        }\r\n+      ]);\r\n+      setLoading(false);\r\n+    }, 1000);\r\n+  };\r\n+\r\n+  const handleServiceMapClick = (service) => {\r\n+    setSelectedService(service);\r\n+    setShowMap(true);\r\n+  };\r\n+\r\n+  const handleRouteMapClick = (route) => {\r\n+    setSelectedRoute(route);\r\n+    setSelectedService(null);\r\n+    setShowMap(true);\r\n+  };\r\n+\r\n+  const tabs = [\r\n+    { id: 'routes', label: 'Routes', icon: 'üöå' },\r\n+    { id: 'bike', label: 'Bike Hire', icon: 'üö≤' },\r\n+    { id: 'taxi', label: 'Taxi Services', icon: 'üöï' },\r\n+    { id: 'health', label: 'Health Services', icon: 'üè•' },\r\n+    { id: 'school', label: 'School Services', icon: 'üè´' }\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"p-4 max-w-6xl mx-auto bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen\">\r\n+      <div className=\"text-center mb-8\">\r\n+        <h1 className=\"text-4xl font-bold mb-4 text-gray-800 bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-purple-600\">\r\n+          Urban Transport & Services Hub\r\n+        </h1>\r\n+        <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\r\n+          Your one-stop destination for transportation, bike rentals, taxi services, healthcare, and educational facilities\r\n+        </p>\r\n+      </div>\r\n+\r\n+      {/* Transport Planner */}\r\n+      <section className=\"mb-8 bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\r\n+        <TransportPlanner onSearch={handleSearch} />\r\n+      </section>\r\n+\r\n+      {/* Navigation Tabs */}\r\n+      <div className=\"mb-6\">\r\n+        <div className=\"flex flex-wrap gap-2 bg-white rounded-xl p-2 shadow-md\">\r\n+          {tabs.map(tab => (\r\n+            <button\r\n+              key={tab.id}\r\n+              onClick={() => setActiveTab(tab.id)}\r\n+              className={`flex items-center gap-2 px-4 py-2 rounded-lg transition-all duration-200 ${\r\n+                activeTab === tab.id \r\n+                  ? 'bg-blue-600 text-white shadow-md' \r\n+                  : 'text-gray-600 hover:bg-gray-100'\r\n+              }`}\r\n+            >\r\n+              {tab.icon}\r\n+              <span className=\"hidden sm:inline\">{tab.label}</span>\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Routes Section */}\r\n+      {activeTab === 'routes' && (\r\n+        <section className=\"mb-12\">\r\n+          <div className=\"flex justify-between items-center mb-6\">\r\n+            <h2 className=\"text-2xl font-bold text-gray-800\">Available Routes</h2>\r\n+            {routes.length > 0 && (\r\n+              <button \r\n+                onClick={() => handleRouteMapClick(routes[0])}\r\n+                className=\"flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-5 py-2 rounded-lg transition-colors shadow-md\"\r\n+              >\r\n+                <span>üìç</span> View Route Map\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+\r\n+          {loading ? (\r\n+            <div className=\"text-center py-12\">\r\n+              <div className=\"inline-block h-10 w-10 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\r\n+              <p className=\"mt-3 text-gray-600\">Finding best routes...</p>\r\n+            </div>\r\n+          ) : routes.length > 0 ? (\r\n+            <div className=\"grid gap-4\">\r\n+              {routes.map(route => (\r\n+                <RouteCard \r\n+                  key={route.id} \r\n+                  route={route}\r\n+                  onClick={() => handleRouteMapClick(route)}\r\n+                />\r\n+              ))}\r\n+            </div>\r\n+          ) : (\r\n+            <div className=\"bg-blue-50 p-8 rounded-xl text-center border-2 border-dashed border-blue-200\">\r\n+              <p className=\"text-gray-700\">Enter locations to find transport options</p>\r\n+            </div>\r\n+          )}\r\n+        </section>\r\n+      )}\r\n+\r\n+      {/* Services Sections */}\r\n+      {activeTab !== 'routes' && (\r\n+        <section className=\"mb-12\">\r\n+          <div className=\"flex justify-between items-center mb-6\">\r\n+            <h2 className=\"text-2xl font-bold text-gray-800\">\r\n+              {tabs.find(tab => tab.id === activeTab)?.label}\r\n+            </h2>\r\n+            <div className=\"text-sm text-gray-600\">\r\n+              {services[activeTab]?.length || 0} services available\r\n+            </div>\r\n+          </div>\r\n+\r\n+          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n+            {services[activeTab]?.map(service => (\r\n+              <ServiceCard \r\n+                key={service.id} \r\n+                service={service}\r\n+                onMapClick={handleServiceMapClick}\r\n+              />\r\n+            ))}\r\n+          </div>\r\n+        </section>\r\n+      )}\r\n+\r\n+      {/* Map Modal */}\r\n+      {showMap && (\r\n+        <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center p-4 z-50 backdrop-blur-sm\">\r\n+          <div className=\"bg-white rounded-xl w-full max-w-4xl h-[80vh] flex flex-col shadow-2xl\">\r\n+            <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\r\n+              <h3 className=\"text-xl font-bold text-gray-800\">\r\n+                {selectedService?.name || selectedRoute?.name || 'Map View'}\r\n+              </h3>\r\n+              <button \r\n+                onClick={() => setShowMap(false)}\r\n+                className=\"text-gray-500 hover:text-gray-700 p-2 rounded-full hover:bg-gray-100 transition-colors text-xl\"\r\n+              >\r\n+                ‚úï\r\n+              </button>\r\n+            </div>\r\n+            \r\n+            <div className=\"flex-1 bg-gradient-to-br from-blue-50 to-indigo-100 rounded-b-xl flex items-center justify-center\">\r\n+              <div className=\"text-center p-6\">\r\n+                <div className=\"mx-auto text-5xl mb-4\">üìç</div>\r\n+                <h4 className=\"text-xl font-semibold mb-2 text-gray-800\">Interactive Map</h4>\r\n+                {selectedService ? (\r\n+                  <div className=\"space-y-2\">\r\n+                    <p className=\"text-gray-600\">\r\n+                      <strong>{selectedService.name}</strong> - {selectedService.category}\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">{selectedService.description}</p>\r\n+                    <p className=\"text-sm text-gray-500\">\r\n+                      Location: {selectedService.coordinates[0]}, {selectedService.coordinates[1]}\r\n+                    </p>\r\n+                  </div>\r\n+                ) : selectedRoute ? (\r\n+                  <div className=\"space-y-2\">\r\n+                    <p className=\"text-gray-600\">\r\n+                      Route: <strong>{selectedRoute.name}</strong>\r\n+                    </p>\r\n+                    <p className=\"text-gray-600\">\r\n+                      {selectedRoute.departure} ‚Üí {selectedRoute.arrival}\r\n+                    </p>\r\n+                    <p className=\"text-sm text-gray-500\">\r\n+                      Duration: {selectedRoute.duration} | Price: {selectedRoute.price}\r\n+                    </p>\r\n+                  </div>\r\n+                ) : null}\r\n+                <p className=\"text-sm text-gray-500 mt-4\">\r\n+                  Interactive map with real-time data would display here\r\n+                </p>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1752166212536,
            "name": "Commit-0",
            "content": "import { useState } from 'react';\r\nimport TransportPlanner from '../components/TransportPlanner';\r\nimport TransportOptions from '../components/TransportOptions';\r\n\r\nexport default function Transport() {\r\n  const [origin, setOrigin] = useState('JFK');\r\n  const [destination, setDestination] = useState('LXX');\r\n  const [routes, setRoutes] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'Express Bus 42',\r\n      time: '10:15 AM - 10:40 AM',\r\n      price: '$2.50',\r\n      type: 'bus'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'City Bus 15',\r\n      time: '10:10 AM - 10:45 AM',\r\n      price: '$2.00',\r\n      type: 'bus'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Rideshare',\r\n      time: '10:12 AM - 10:25 AM',\r\n      price: '$12.75',\r\n      type: 'rideshare',\r\n      provider: 'Uber'\r\n    }\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"transport-page\">\r\n      <h1>UrbanFlow</h1>\r\n      <h2>Transport Planner</h2>\r\n      <p>Plan your journey across the city using multiple transport options</p>\r\n      \r\n      <TransportPlanner \r\n        origin={origin}\r\n        destination={destination}\r\n        setOrigin={setOrigin}\r\n        setDestination={setDestination}\r\n      />\r\n      \r\n      <TransportOptions \r\n        routes={routes}\r\n        origin={origin}\r\n        destination={destination}\r\n      />\r\n    </div>\r\n  );\r\n}"
        }
    ]
}