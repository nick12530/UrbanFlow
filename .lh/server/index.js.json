{
    "sourceFile": "server/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1755193208123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755195461165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,15 +13,15 @@\n dotenv.config({ path: path.join(__dirname, '..', '.env') });\r\n \r\n const app = express();\r\n app.use(express.json());\r\n-app.use(cors({ origin: ['http://localhost:5173', 'http://127.0.0.1:5173'] }));\r\n+app.use(cors({ origin: ['http://localhost:5173', 'http://localhost:5174', 'http://localhost:5175', 'http://127.0.0.1:5173', 'http://127.0.0.1:5174', 'http://127.0.0.1:5175'] }));\r\n \r\n const PESAPAL_CONSUMER_KEY = process.env.PESAPAL_CONSUMER_KEY || '';\r\n const PESAPAL_CONSUMER_SECRET = process.env.PESAPAL_CONSUMER_SECRET || '';\r\n // Default to LIVE base URL; override with env if needed\r\n const PESAPAL_BASE_URL = process.env.PESAPAL_BASE_URL || 'https://pay.pesapal.com/v3';\r\n-const PESAPAL_CALLBACK_URL = process.env.PESAPAL_CALLBACK_URL || 'http://localhost:5173/success';\r\n+const PESAPAL_CALLBACK_URL = process.env.PESAPAL_CALLBACK_URL || 'http://localhost:5175/success';\r\n const PESAPAL_IPN_ID = process.env.PESAPAL_IPN_ID || '';\r\n const PORT = process.env.PORT || 3001;\r\n const GEMINI_API_KEY = process.env.GEMINI_API_KEY || '';\r\n \r\n"
                },
                {
                    "date": 1755584609189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,17 +194,25 @@\n     PESAPAL_CONSUMER_KEY: PESAPAL_CONSUMER_KEY ? 'SET' : 'NOT SET',\r\n     PESAPAL_CONSUMER_SECRET: PESAPAL_CONSUMER_SECRET ? 'SET' : 'NOT SET',\r\n     PESAPAL_IPN_ID: PESAPAL_IPN_ID ? 'SET' : 'NOT SET',\r\n     PESAPAL_BASE_URL: PESAPAL_BASE_URL,\r\n-    PESAPAL_CALLBACK_URL: PESAPAL_CALLBACK_URL\r\n+    PESAPAL_CALLBACK_URL: PESAPAL_CALLBACK_URL,\r\n+    GEMINI_API_KEY: GEMINI_API_KEY ? 'SET' : 'NOT SET'\r\n   });\r\n });\r\n \r\n+// Simple Gemini health endpoint\r\n+app.get('/api/debug/gemini', (req, res) => {\r\n+  const configured = Boolean(GEMINI_API_KEY && genAI);\r\n+  res.json({ configured, modelDefault: 'gemini-1.5-flash' });\r\n+});\r\n+\r\n app.listen(PORT, () => {\r\n   console.log(`Pesapal server running on http://localhost:${PORT}`);\r\n   console.log('Environment check:');\r\n   console.log('- PESAPAL_CONSUMER_KEY:', PESAPAL_CONSUMER_KEY ? 'SET' : 'NOT SET');\r\n   console.log('- PESAPAL_CONSUMER_SECRET:', PESAPAL_CONSUMER_SECRET ? 'SET' : 'NOT SET');\r\n   console.log('- PESAPAL_IPN_ID:', PESAPAL_IPN_ID ? 'SET' : 'NOT SET');\r\n+  console.log('- GEMINI_API_KEY:', GEMINI_API_KEY ? 'SET' : 'NOT SET');\r\n });\r\n \r\n \r\n"
                },
                {
                    "date": 1755584720191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,14 @@\n \r\n const __filename = fileURLToPath(import.meta.url);\r\n const __dirname = path.dirname(__filename);\r\n \r\n+// Basic runtime check: Gemini SDK needs Node 18+\r\n+const [major] = process.versions.node.split('.').map(Number);\r\n+if (Number.isFinite(major) && major < 18) {\r\n+  console.warn('[Startup] Detected Node.js', process.versions.node, '- Gemini API requires Node 18+.');\r\n+}\r\n+\r\n // Load .env from parent directory (project root)\r\n dotenv.config({ path: path.join(__dirname, '..', '.env') });\r\n \r\n const app = express();\r\n"
                },
                {
                    "date": 1755584925795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,10 +188,15 @@\n     const text = response.text();\r\n \r\n     return res.json({ text });\r\n   } catch (err) {\r\n-    console.error('Gemini chat error', err.message, err.response?.data || '');\r\n-    return res.status(500).json({ error: 'Failed to generate response', details: err.response?.data || err.message });\r\n+    const axiosData = err.response?.data;\r\n+    console.error('Gemini chat error', err.message, axiosData || '');\r\n+    return res.status(500).json({\r\n+      error: 'Failed to generate response',\r\n+      details: typeof axiosData === 'string' ? axiosData : (axiosData?.error || err.message),\r\n+      code: err.response?.status || undefined\r\n+    });\r\n   }\r\n });\r\n \r\n // Debug endpoint to check environment variables\r\n"
                },
                {
                    "date": 1755807602230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,15 @@\n }\r\n \r\n app.post('/api/pesapal/order', async (req, res) => {\r\n   try {\r\n+    // Log the raw request for debugging\r\n+    console.log('Payment request received:', {\r\n+      body: req.body,\r\n+      headers: req.headers['content-type'],\r\n+      method: req.method\r\n+    });\r\n+    \r\n     const { amount, currency = 'KES', description = 'Order Payment', customer = {}, restaurantName } = req.body || {};\r\n     if (!amount || Number(amount) <= 0) {\r\n       return res.status(400).json({ error: 'Invalid amount' });\r\n     }\r\n"
                }
            ],
            "date": 1755193208122,
            "name": "Commit-0",
            "content": "import express from 'express';\r\nimport cors from 'cors';\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\nimport { GoogleGenerativeAI } from '@google/generative-ai';\r\nimport path from 'path';\r\nimport { fileURLToPath } from 'url';\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = path.dirname(__filename);\r\n\r\n// Load .env from parent directory (project root)\r\ndotenv.config({ path: path.join(__dirname, '..', '.env') });\r\n\r\nconst app = express();\r\napp.use(express.json());\r\napp.use(cors({ origin: ['http://localhost:5173', 'http://127.0.0.1:5173'] }));\r\n\r\nconst PESAPAL_CONSUMER_KEY = process.env.PESAPAL_CONSUMER_KEY || '';\r\nconst PESAPAL_CONSUMER_SECRET = process.env.PESAPAL_CONSUMER_SECRET || '';\r\n// Default to LIVE base URL; override with env if needed\r\nconst PESAPAL_BASE_URL = process.env.PESAPAL_BASE_URL || 'https://pay.pesapal.com/v3';\r\nconst PESAPAL_CALLBACK_URL = process.env.PESAPAL_CALLBACK_URL || 'http://localhost:5173/success';\r\nconst PESAPAL_IPN_ID = process.env.PESAPAL_IPN_ID || '';\r\nconst PORT = process.env.PORT || 3001;\r\nconst GEMINI_API_KEY = process.env.GEMINI_API_KEY || '';\r\n\r\n// Initialize Gemini client if key is present\r\nlet genAI = null;\r\nif (GEMINI_API_KEY) {\r\n  try {\r\n    genAI = new GoogleGenerativeAI(GEMINI_API_KEY);\r\n  } catch (e) {\r\n    console.warn('Failed to initialize GoogleGenerativeAI:', e.message);\r\n  }\r\n}\r\n\r\nlet cachedToken = null;\r\nlet cachedTokenExpiry = 0;\r\n\r\nasync function fetchPesapalToken() {\r\n  const now = Date.now();\r\n  if (cachedToken && now < cachedTokenExpiry - 60_000) {\r\n    return cachedToken;\r\n  }\r\n  const url = `${PESAPAL_BASE_URL}/api/Auth/RequestToken`;\r\n  const { data } = await axios.post(url, {\r\n    consumer_key: PESAPAL_CONSUMER_KEY,\r\n    consumer_secret: PESAPAL_CONSUMER_SECRET,\r\n  }, { headers: { 'Content-Type': 'application/json' } });\r\n  cachedToken = data.token;\r\n  // expiry is an ISO date string; set 5 min safety margin\r\n  cachedTokenExpiry = new Date(data.expires_in).getTime() || (now + 25 * 60 * 1000);\r\n  return cachedToken;\r\n}\r\n\r\napp.post('/api/pesapal/order', async (req, res) => {\r\n  try {\r\n    const { amount, currency = 'KES', description = 'Order Payment', customer = {}, restaurantName } = req.body || {};\r\n    if (!amount || Number(amount) <= 0) {\r\n      return res.status(400).json({ error: 'Invalid amount' });\r\n    }\r\n    if (!PESAPAL_CONSUMER_KEY || !PESAPAL_CONSUMER_SECRET) {\r\n      return res.status(500).json({ error: 'Missing Pesapal credentials on server' });\r\n    }\r\n    if (!PESAPAL_IPN_ID) {\r\n      return res.status(500).json({ error: 'Missing PESAPAL_IPN_ID. Register your IPN URL and set its ID.' });\r\n    }\r\n\r\n    const token = await fetchPesapalToken();\r\n\r\n    const fullName = String(customer.name || 'Guest').trim();\r\n    const [first_name, ...rest] = fullName.split(' ');\r\n    const last_name = rest.join(' ') || first_name;\r\n\r\n    const orderPayload = {\r\n      id: `UF-${Date.now()}`,\r\n      currency,\r\n      amount: Number(amount),\r\n      description: description || `Payment for ${restaurantName || 'UrbanFlow'} order`,\r\n      callback_url: PESAPAL_CALLBACK_URL,\r\n      cancellation_url: PESAPAL_CALLBACK_URL,\r\n      notification_id: PESAPAL_IPN_ID,\r\n      billing_address: {\r\n        email_address: customer.email || 'customer@example.com',\r\n        phone_number: customer.phone || '',\r\n        country_code: 'KE',\r\n        first_name,\r\n        middle_name: '',\r\n        last_name,\r\n        line_1: customer.address || '',\r\n        city: 'Nairobi',\r\n        state: '',\r\n        postal_code: '',\r\n        zip_code: '',\r\n      },\r\n    };\r\n\r\n    const url = `${PESAPAL_BASE_URL}/api/Transactions/SubmitOrderRequest`;\r\n    const { data } = await axios.post(url, orderPayload, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    return res.json({ redirect_url: data.redirect_url, order_tracking_id: data.order_tracking_id });\r\n  } catch (err) {\r\n    console.error('Pesapal order error', err.response?.data || err.message);\r\n    return res.status(500).json({ error: 'Failed to create Pesapal order', details: err.response?.data || err.message });\r\n  }\r\n});\r\n\r\napp.get('/api/pesapal/status/:orderTrackingId', async (req, res) => {\r\n  try {\r\n    const { orderTrackingId } = req.params;\r\n    const token = await fetchPesapalToken();\r\n    const url = `${PESAPAL_BASE_URL}/api/Transactions/GetTransactionStatus?orderTrackingId=${encodeURIComponent(orderTrackingId)}`;\r\n    const { data } = await axios.get(url, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return res.json(data);\r\n  } catch (err) {\r\n    console.error('Pesapal status error', err.response?.data || err.message);\r\n    return res.status(500).json({ error: 'Failed to fetch status', details: err.response?.data || err.message });\r\n  }\r\n});\r\n\r\n// IPN endpoint for Pesapal (configure this public URL in your dashboard)\r\n// Accept both GET and POST notifications\r\napp.all('/api/pesapal/ipn', async (req, res) => {\r\n  try {\r\n    const orderTrackingId = req.query.orderTrackingId || req.body?.orderTrackingId || req.query.OrderTrackingId || '';\r\n    // Optional: immediately confirm the transaction status and update your DB\r\n    if (orderTrackingId) {\r\n      try {\r\n        const token = await fetchPesapalToken();\r\n        const url = `${PESAPAL_BASE_URL}/api/Transactions/GetTransactionStatus?orderTrackingId=${encodeURIComponent(orderTrackingId)}`;\r\n        const { data } = await axios.get(url, { headers: { Authorization: `Bearer ${token}` } });\r\n        console.log('IPN status for', orderTrackingId, data?.payment_status_description || data);\r\n      } catch (innerErr) {\r\n        console.warn('Failed to confirm status from IPN for', orderTrackingId, innerErr.response?.data || innerErr.message);\r\n      }\r\n    } else {\r\n      console.log('Received IPN without orderTrackingId');\r\n    }\r\n    // Always acknowledge with 200 to stop retries\r\n    return res.status(200).send('OK');\r\n  } catch (err) {\r\n    // Acknowledge anyway to avoid repeated retries; log error\r\n    console.error('IPN handler error', err.message);\r\n    return res.status(200).send('OK');\r\n  }\r\n});\r\n\r\n// Gemini chat endpoint\r\napp.post('/api/gemini/chat', async (req, res) => {\r\n  try {\r\n    if (!GEMINI_API_KEY || !genAI) {\r\n      return res.status(500).json({ error: 'GEMINI_API_KEY is not configured on the server' });\r\n    }\r\n    const { prompt, history = [], model = 'gemini-1.5-flash', systemInstruction } = req.body || {};\r\n    if (!prompt || typeof prompt !== 'string') {\r\n      return res.status(400).json({ error: 'Missing prompt' });\r\n    }\r\n\r\n    const generativeModel = genAI.getGenerativeModel({\r\n      model,\r\n      ...(systemInstruction ? { systemInstruction } : {}),\r\n    });\r\n\r\n    // Map history to Gemini chat format\r\n    const mappedHistory = Array.isArray(history)\r\n      ? history\r\n          .filter(m => m && typeof m.content === 'string' && (m.role === 'user' || m.role === 'model'))\r\n          .map(m => ({ role: m.role === 'user' ? 'user' : 'model', parts: [{ text: m.content }] }))\r\n      : [];\r\n\r\n    const chat = generativeModel.startChat({ history: mappedHistory });\r\n    const result = await chat.sendMessage(prompt);\r\n    const response = await result.response;\r\n    const text = response.text();\r\n\r\n    return res.json({ text });\r\n  } catch (err) {\r\n    console.error('Gemini chat error', err.message, err.response?.data || '');\r\n    return res.status(500).json({ error: 'Failed to generate response', details: err.response?.data || err.message });\r\n  }\r\n});\r\n\r\n// Debug endpoint to check environment variables\r\napp.get('/api/debug/env', (req, res) => {\r\n  res.json({\r\n    PESAPAL_CONSUMER_KEY: PESAPAL_CONSUMER_KEY ? 'SET' : 'NOT SET',\r\n    PESAPAL_CONSUMER_SECRET: PESAPAL_CONSUMER_SECRET ? 'SET' : 'NOT SET',\r\n    PESAPAL_IPN_ID: PESAPAL_IPN_ID ? 'SET' : 'NOT SET',\r\n    PESAPAL_BASE_URL: PESAPAL_BASE_URL,\r\n    PESAPAL_CALLBACK_URL: PESAPAL_CALLBACK_URL\r\n  });\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Pesapal server running on http://localhost:${PORT}`);\r\n  console.log('Environment check:');\r\n  console.log('- PESAPAL_CONSUMER_KEY:', PESAPAL_CONSUMER_KEY ? 'SET' : 'NOT SET');\r\n  console.log('- PESAPAL_CONSUMER_SECRET:', PESAPAL_CONSUMER_SECRET ? 'SET' : 'NOT SET');\r\n  console.log('- PESAPAL_IPN_ID:', PESAPAL_IPN_ID ? 'SET' : 'NOT SET');\r\n});\r\n\r\n\r\n"
        }
    ]
}